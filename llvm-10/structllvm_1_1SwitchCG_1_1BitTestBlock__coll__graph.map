<map id="llvm::SwitchCG::BitTestBlock" name="llvm::SwitchCG::BitTestBlock">
<area shape="rect" id="node2" href="$classllvm_1_1BranchProbability.html" title="llvm::BranchProbability" alt="" coords="2872,21,3028,48"/>
<area shape="rect" id="node3" href="$classllvm_1_1APInt.html" title="Class for arbitrary precision integers. " alt="" coords="2907,75,2993,101"/>
<area shape="rect" id="node5" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="469,219,556,245"/>
<area shape="rect" id="node6" href="$classunsigned.html" title="unsigned" alt="" coords="5,263,80,289"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="279,380,433,407"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l BitTestCase, 3 \&gt;" alt="" coords="2883,233,3017,274"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; BitTestCase \&gt;" alt="" coords="2527,409,2677,450"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1600,513,1779,554"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="1092,431,1271,473"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1825,411,2003,453"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1391,470,1570,511"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="600,373,779,414"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="2135,416,2317,443"/>
<area shape="rect" id="node23" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2535,233,2669,274"/>
<area shape="rect" id="node17" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; BitTestCase, N \&gt;" alt="" coords="2517,299,2687,341"/>
<area shape="rect" id="node18" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; BitTestCase \&gt;" alt="" coords="1819,343,2009,385"/>
<area shape="rect" id="node19" href="$classchar.html" title="char" alt="" coords="1158,297,1205,324"/>
<area shape="rect" id="node20" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="1385,290,1576,331"/>
<area shape="rect" id="node22" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1803,240,2025,267"/>
<area shape="rect" id="node21" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="2141,233,2311,274"/>
<area shape="rect" id="node24" href="$classbool.html" title="bool" alt="" coords="2927,299,2973,325"/>
<area shape="rect" id="node25" href="$classllvm_1_1MachineBasicBlock.html" title="llvm::MachineBasicBlock" alt="" coords="2865,472,3035,499"/>
<area shape="rect" id="node26" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; MachineBasicBlock,\l MachineFunction \&gt;" alt="" coords="2504,521,2700,577"/>
<area shape="rect" id="node27" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Machine\lBasicBlock, Options... \&gt;" alt="" coords="1829,579,1999,621"/>
<area shape="rect" id="node28" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MachineBasicBlock,\l Options... \&gt;::type \&gt;" alt="" coords="1063,558,1300,629"/>
<area shape="rect" id="node30" href="$classllvm_1_1ilist__node__impl.html" title="Implementation for an ilist node. " alt="" coords="619,621,759,662"/>
<area shape="rect" id="node33" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; T, Options...\l \&gt;::type \&gt;" alt="" coords="1086,653,1277,723"/>
<area shape="rect" id="node37" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; NodeTy,\l Options... \&gt;::type \&gt;" alt="" coords="1097,747,1265,818"/>
<area shape="rect" id="node32" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; T,\l Options \&gt;" alt="" coords="1414,667,1547,709"/>
<area shape="rect" id="node36" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; NodeTy,\l Options... \&gt;" alt="" coords="1829,674,1999,715"/>
<area shape="rect" id="node35" href="$classllvm_1_1ilist__node__with__parent.html" title="An ilist node that can access its parent list. " alt="" coords="2132,619,2320,675"/>
<area shape="rect" id="node39" href="$classllvm_1_1MVT.html" title="Machine Value Type. " alt="" coords="2909,573,2991,600"/>
</map>
