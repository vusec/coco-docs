<map id="llvm::ExtractValueConstantExpr" name="llvm::ExtractValueConstantExpr">
<area shape="rect" id="node2" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values. " alt="" coords="1213,99,1348,125"/>
<area shape="rect" id="node3" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM. " alt="" coords="771,99,877,125"/>
<area shape="rect" id="node4" href="$classllvm_1_1User.html" title="llvm::User" alt="" coords="519,99,601,125"/>
<area shape="rect" id="node5" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="301,99,387,125"/>
<area shape="rect" id="node6" href="$classunsigned.html" title="unsigned" alt="" coords="5,127,80,153"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="267,201,421,228"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l unsigned, 4 \&gt;" alt="" coords="2465,214,2599,255"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; unsigned \&gt;" alt="" coords="2161,174,2311,215"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1619,143,1797,185"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="735,193,913,234"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1394,217,1573,258"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1005,251,1183,293"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="471,223,649,265"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1821,224,2004,251"/>
<area shape="rect" id="node23" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2169,239,2303,281"/>
<area shape="rect" id="node17" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; unsigned, N \&gt;" alt="" coords="2151,311,2321,353"/>
<area shape="rect" id="node18" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; unsigned \&gt;" alt="" coords="1388,311,1579,353"/>
<area shape="rect" id="node19" href="$classchar.html" title="char" alt="" coords="801,388,847,415"/>
<area shape="rect" id="node20" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="999,381,1189,422"/>
<area shape="rect" id="node22" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1372,399,1595,425"/>
<area shape="rect" id="node21" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1827,381,1998,422"/>
</map>
