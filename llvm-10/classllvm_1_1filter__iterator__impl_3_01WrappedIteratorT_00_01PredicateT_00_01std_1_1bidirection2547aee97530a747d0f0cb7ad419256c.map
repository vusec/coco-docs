<map id="llvm::filter_iterator_impl&lt; WrappedIteratorT, PredicateT, std::bidirectional_iterator_tag &gt;" name="llvm::filter_iterator_impl&lt; WrappedIteratorT, PredicateT, std::bidirectional_iterator_tag &gt;">
<area shape="rect" id="node2" href="$classllvm_1_1filter__iterator__base.html" title="llvm::filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;" alt="" coords="2856,551,3048,622"/>
<area shape="rect" id="node3" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;, WrappedIteratorT,\l std::common_type\&lt; std::bidirectional\l_iterator_tag, std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::iterator_category \&gt;::type \&gt;" alt="" coords="2104,478,2413,607"/>
<area shape="rect" id="node4" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;, std::common\l_type\&lt; std::bidirectional_iterator\l_tag, std::iterator_traits\&lt; WrappedIterator\lT \&gt;::iterator_category \&gt;::type, typename\l std::iterator_traits\&lt; WrappedIteratorT \&gt;\l::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::\literator_traits\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::pointer, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::reference, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="1352,183,1768,518"/>
<area shape="rect" id="node6" href="$classllvm_1_1iterator__facade__base.html" title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..." alt="" coords="419,502,643,573"/>
<area shape="rect" id="node8" href="$classllvm_1_1iterator__adaptor__base.html" title="CRTP base class for adapting an iterator to a different type. " alt="" coords="1433,542,1687,613"/>
<area shape="rect" id="node11" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l std::common_type\&lt; IterTag,\l std::iterator_traits\&lt; WrappedIterator\lT \&gt;::iterator_category \&gt;::type, typename\l std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::\literator_traits\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::pointer, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::reference, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="1352,676,1768,996"/>
<area shape="rect" id="node10" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l WrappedIteratorT, std::common\l_type\&lt; IterTag, std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::iterator\l_category \&gt;::type \&gt;" alt="" coords="2143,631,2374,761"/>
<area shape="rect" id="node9" href="$classllvm_1_1filter__iterator__base.html" title="An iterator adaptor that filters the elements of given inner iterators. " alt="" coords="2463,603,2637,659"/>
</map>
