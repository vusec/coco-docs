<map id="llvm::SLPVectorizerPass" name="llvm::SLPVectorizerPass">
<area shape="rect" id="node2" href="$structllvm_1_1PassInfoMixin.html" title="llvm::PassInfoMixin\l\&lt; SLPVectorizerPass \&gt;" alt="" coords="3627,123,3787,164"/>
<area shape="rect" id="node3" href="$structllvm_1_1PassInfoMixin.html" title="A CRTP mix&#45;in to automatically provide informational APIs needed for passes. " alt="" coords="3277,123,3414,164"/>
<area shape="rect" id="node4" href="$classllvm_1_1AssumptionCache.html" title="A cache of @llvm.assume calls within a function. " alt="" coords="3627,189,3788,215"/>
<area shape="rect" id="node5" href="$classllvm_1_1DemandedBits.html" title="llvm::DemandedBits" alt="" coords="3637,239,3777,266"/>
<area shape="rect" id="node6" href="$classllvm_1_1ScalarEvolution.html" title="The main scalar evolution driver. " alt="" coords="3635,290,3780,317"/>
<area shape="rect" id="node7" href="$classllvm_1_1DataLayout.html" title="A parsed version of the target data layout string in and methods for querying it. ..." alt="" coords="3647,341,3768,367"/>
<area shape="rect" id="node8" href="$classllvm_1_1AAResults.html" title="llvm::AAResults" alt="" coords="3649,391,3766,418"/>
<area shape="rect" id="node9" href="$classllvm_1_1TargetLibraryInfo.html" title="Provides information about what library functions are available for the current target. " alt="" coords="3631,442,3783,469"/>
<area shape="rect" id="node10" href="$classllvm_1_1DominatorTree.html" title="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree..." alt="" coords="3637,493,3777,519"/>
<area shape="rect" id="node11" href="$classllvm_1_1DominatorTreeBase.html" title="llvm::DominatorTreeBase\l\&lt; BasicBlock, false \&gt;" alt="" coords="3260,263,3431,304"/>
<area shape="rect" id="node12" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l BasicBlock *, IsPostDom\l ? 4 :1 \&gt;" alt="" coords="2533,603,2708,659"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; BasicBlock * \&gt;" alt="" coords="2142,740,2293,781"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1128,823,1307,864"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="649,713,828,755"/>
<area shape="rect" id="node21" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1353,721,1531,763"/>
<area shape="rect" id="node22" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="919,772,1098,813"/>
<area shape="rect" id="node42" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1577,661,1756,703"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="181,662,336,689"/>
<area shape="rect" id="node19" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="385,655,564,696"/>
<area shape="rect" id="node17" href="$classunsigned.html" title="unsigned" alt="" coords="5,355,80,382"/>
<area shape="rect" id="node36" href="$classllvm_1_1DominatorTreeBase.html" title="Core dominator tree base class. " alt="" coords="2891,340,3062,381"/>
<area shape="rect" id="node20" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1780,721,1963,747"/>
<area shape="rect" id="node29" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2151,595,2284,636"/>
<area shape="rect" id="node41" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; NodeT * \&gt;" alt="" coords="2142,660,2293,701"/>
<area shape="rect" id="node23" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; BasicBlock *, N \&gt;" alt="" coords="2132,528,2303,569"/>
<area shape="rect" id="node24" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; BasicBlock *\&gt;" alt="" coords="1347,591,1537,632"/>
<area shape="rect" id="node25" href="$classchar.html" title="char" alt="" coords="715,506,762,533"/>
<area shape="rect" id="node26" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="913,541,1104,583"/>
<area shape="rect" id="node28" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1331,519,1553,546"/>
<area shape="rect" id="node44" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; NodeT *\&gt;" alt="" coords="1347,433,1537,475"/>
<area shape="rect" id="node27" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1786,512,1957,553"/>
<area shape="rect" id="node43" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; NodeT *, N \&gt;" alt="" coords="2132,435,2303,476"/>
<area shape="rect" id="node40" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l NodeT *, IsPostDom\l ? 4 :1 \&gt;" alt="" coords="2547,473,2695,529"/>
<area shape="rect" id="node30" href="$classbool.html" title="bool" alt="" coords="2597,553,2644,579"/>
<area shape="rect" id="node31" href="$classdecltype_07std_1_1declval_3_01BasicBlock_01_5_4_07_08_01-_4getParent_07_08_08.html" title="declval\&lt; BasicBlock\l *\&gt;() &#45;\&gt;getParent())" alt="" coords="2906,71,3047,112"/>
<area shape="rect" id="node32" href="$classllvm_1_1DomTreeNodeBase.html" title="llvm::DomTreeNodeBase\l\&lt; BasicBlock \&gt;" alt="" coords="2892,5,3061,47"/>
<area shape="rect" id="node33" href="$classllvm_1_1DomTreeNodeBase.html" title="Base class for the actual dominator tree node. " alt="" coords="2536,5,2705,47"/>
<area shape="rect" id="node35" href="$classDenseMap_3_01BasicBlock_01_5_00_01std_1_1unique__ptr_3_01DomTreeNodeBase_3_01BasicBlock_01_4_01_4_4.html" title="unique_ptr\&lt; DomTreeNodeBase\l\&lt; BasicBlock \&gt; \&gt;\&gt;" alt="" coords="2872,188,3081,229"/>
<area shape="rect" id="node45" href="$classllvm_1_1TargetTransformInfo.html" title="This pass provides access to the codegen interfaces that are needed for IR&#45;level transformations. " alt="" coords="3621,543,3793,570"/>
<area shape="rect" id="node46" href="$classllvm_1_1LoopInfo.html" title="llvm::LoopInfo" alt="" coords="3655,677,3759,703"/>
<area shape="rect" id="node47" href="$classllvm_1_1LoopInfoBase.html" title="llvm::LoopInfoBase\l\&lt; BasicBlock, Loop \&gt;" alt="" coords="3271,669,3419,711"/>
<area shape="rect" id="node48" href="$classllvm_1_1LoopInfoBase.html" title="This class builds and contains all of the top&#45;level loop structures in the specified function..." alt="" coords="2909,671,3044,712"/>
</map>
