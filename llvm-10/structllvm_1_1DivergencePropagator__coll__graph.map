<map id="llvm::DivergencePropagator" name="llvm::DivergencePropagator">
<area shape="rect" id="node2" href="$classllvm_1_1PostDominatorTree.html" title="PostDominatorTree Class &#45; Concrete subclass of DominatorTree that is used to compute the post&#45;dominat..." alt="" coords="3483,161,3649,187"/>
<area shape="rect" id="node3" href="$classllvm_1_1DominatorTreeBase.html" title="Core dominator tree base class. " alt="" coords="2887,333,3109,359"/>
<area shape="rect" id="node46" href="$classllvm_1_1DominatorTreeBase.html" title="Core dominator tree base class. " alt="" coords="2913,611,3083,652"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l NodeT *, IsPostDom\l ? 4 :1 \&gt;" alt="" coords="2545,514,2693,570"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; NodeT * \&gt;" alt="" coords="2141,629,2291,671"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1576,609,1755,651"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="946,668,1125,709"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1351,668,1530,709"/>
<area shape="rect" id="node39" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1576,732,1755,773"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="325,675,480,702"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="541,709,720,751"/>
<area shape="rect" id="node12" href="$classunsigned.html" title="unsigned" alt="" coords="47,675,122,702"/>
<area shape="rect" id="node30" href="$classllvm_1_1SmallPtrSetImplBase.html" title="SmallPtrSetImplBase &#45; This is the common code shared among all the SmallPtrSet&lt;&gt;&#39;s, which is almost everything. " alt="" coords="313,915,492,942"/>
<area shape="rect" id="node36" href="$classllvm_1_1DominatorTreeBase.html" title="llvm::DominatorTreeBase\l\&lt; BasicBlock, false \&gt;" alt="" coords="3288,611,3459,652"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1779,670,1961,697"/>
<area shape="rect" id="node22" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2149,564,2283,605"/>
<area shape="rect" id="node38" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; BasicBlock * \&gt;" alt="" coords="2141,719,2291,760"/>
<area shape="rect" id="node16" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; NodeT *, N \&gt;" alt="" coords="2131,420,2301,461"/>
<area shape="rect" id="node17" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; NodeT *\&gt;" alt="" coords="1345,385,1536,427"/>
<area shape="rect" id="node18" href="$classchar.html" title="char" alt="" coords="607,471,654,498"/>
<area shape="rect" id="node19" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="940,508,1131,549"/>
<area shape="rect" id="node21" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1329,473,1552,499"/>
<area shape="rect" id="node41" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; BasicBlock *\&gt;" alt="" coords="1345,543,1536,584"/>
<area shape="rect" id="node20" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1785,465,1955,507"/>
<area shape="rect" id="node40" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; BasicBlock *, N \&gt;" alt="" coords="2131,499,2301,540"/>
<area shape="rect" id="node37" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l BasicBlock *, IsPostDom\l ? 4 :1 \&gt;" alt="" coords="2532,711,2707,767"/>
<area shape="rect" id="node23" href="$classbool.html" title="bool" alt="" coords="2596,206,2643,233"/>
<area shape="rect" id="node27" href="$classllvm_1_1ReversePostOrderTraversal.html" title="llvm::ReversePostOrderTraversal\l\&lt; GraphT, GT \&gt;" alt="" coords="3673,803,3889,844"/>
<area shape="rect" id="node28" href="$classllvm_1_1SmallPtrSet.html" title="llvm::SmallPtrSet\&lt;\l const llvm::BasicBlock\l *, 4 \&gt;" alt="" coords="1361,905,1521,961"/>
<area shape="rect" id="node29" href="$classllvm_1_1SmallPtrSetImpl.html" title="llvm::SmallPtrSetImpl\l\&lt; const llvm::BasicBlock * \&gt;" alt="" coords="941,891,1130,932"/>
<area shape="rect" id="node33" href="$classllvm_1_1SmallPtrSetImpl.html" title="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..." alt="" coords="556,864,705,905"/>
<area shape="rect" id="node31" href="$classllvm_1_1DebugEpochBase.html" title="A base class for data structure classes wishing to make iterators (&quot;handles&quot;) pointing into themselve..." alt="" coords="5,966,164,993"/>
<area shape="rect" id="node34" href="$classllvm_1_1SmallPtrSet.html" title="SmallPtrSet &#45; This class implements a set which is optimized for holding SmallSize or less elements..." alt="" coords="960,956,1111,997"/>
<area shape="rect" id="node35" href="$classllvm_1_1DominatorTree.html" title="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree..." alt="" coords="3711,869,3851,895"/>
<area shape="rect" id="node42" href="$classdecltype_07std_1_1declval_3_01BasicBlock_01_5_4_07_08_01-_4getParent_07_08_08.html" title="declval\&lt; BasicBlock\l *\&gt;() &#45;\&gt;getParent())" alt="" coords="2927,791,3069,832"/>
<area shape="rect" id="node43" href="$classllvm_1_1DomTreeNodeBase.html" title="llvm::DomTreeNodeBase\l\&lt; BasicBlock \&gt;" alt="" coords="2913,23,3083,64"/>
<area shape="rect" id="node44" href="$classllvm_1_1DomTreeNodeBase.html" title="Base class for the actual dominator tree node. " alt="" coords="2535,23,2704,64"/>
<area shape="rect" id="node45" href="$classDenseMap_3_01BasicBlock_01_5_00_01std_1_1unique__ptr_3_01DomTreeNodeBase_3_01BasicBlock_01_4_01_4_4.html" title="unique_ptr\&lt; DomTreeNodeBase\l\&lt; BasicBlock \&gt; \&gt;\&gt;" alt="" coords="2893,545,3103,587"/>
<area shape="rect" id="node47" href="$classllvm_1_1LoopInfo.html" title="llvm::LoopInfo" alt="" coords="3729,970,3833,997"/>
<area shape="rect" id="node48" href="$classllvm_1_1LoopInfoBase.html" title="llvm::LoopInfoBase\l\&lt; BasicBlock, Loop \&gt;" alt="" coords="3299,971,3447,1012"/>
<area shape="rect" id="node49" href="$classllvm_1_1LoopInfoBase.html" title="This class builds and contains all of the top&#45;level loop structures in the specified function..." alt="" coords="2931,971,3065,1012"/>
</map>
