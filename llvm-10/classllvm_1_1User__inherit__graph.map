<map id="llvm::User" name="llvm::User">
<area shape="rect" id="node3" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM. " alt="" coords="281,157,387,184"/>
<area shape="rect" id="node13" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy. " alt="" coords="271,448,397,475"/>
<area shape="rect" id="node15" href="$classllvm_1_1Instruction.html" title="llvm::Instruction" alt="" coords="277,943,391,969"/>
<area shape="rect" id="node42" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="282,1867,386,1893"/>
<area shape="rect" id="node2" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="5,613,92,640"/>
<area shape="rect" id="node4" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block. " alt="" coords="483,31,618,57"/>
<area shape="rect" id="node5" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands). " alt="" coords="467,81,634,108"/>
<area shape="rect" id="node9" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands. " alt="" coords="483,132,618,159"/>
<area shape="rect" id="node11" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values. " alt="" coords="483,183,618,209"/>
<area shape="rect" id="node12" href="$classllvm_1_1GlobalValue.html" title="llvm::GlobalValue" alt="" coords="489,233,613,260"/>
<area shape="rect" id="node6" href="$classllvm_1_1ConstantArray.html" title="ConstantArray &#45; Constant Array Declarations. " alt="" coords="731,5,869,32"/>
<area shape="rect" id="node7" href="$classllvm_1_1ConstantStruct.html" title="llvm::ConstantStruct" alt="" coords="729,56,871,83"/>
<area shape="rect" id="node8" href="$classllvm_1_1ConstantVector.html" title="Constant Vector Declarations. " alt="" coords="727,107,873,133"/>
<area shape="rect" id="node10" href="$classllvm_1_1ConstantAggregateZero.html" title="All zero aggregate value. " alt="" coords="704,157,896,184"/>
<area shape="rect" id="node14" href="$classllvm_1_1MemoryAccess.html" title="llvm::MemoryAccess" alt="" coords="478,284,623,311"/>
<area shape="rect" id="node16" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location, and, if it is, stores a new value there. " alt="" coords="463,335,638,361"/>
<area shape="rect" id="node17" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value, and then stores the result back. " alt="" coords="475,385,626,412"/>
<area shape="rect" id="node18" href="$classllvm_1_1BinaryOperator.html" title="llvm::BinaryOperator" alt="" coords="480,436,621,463"/>
<area shape="rect" id="node19" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction. " alt="" coords="492,487,609,513"/>
<area shape="rect" id="node20" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="497,537,604,564"/>
<area shape="rect" id="node21" href="$classllvm_1_1CatchReturnInst.html" title="llvm::CatchReturnInst" alt="" coords="475,588,626,615"/>
<area shape="rect" id="node22" href="$classllvm_1_1CatchSwitchInst.html" title="llvm::CatchSwitchInst" alt="" coords="475,639,626,665"/>
<area shape="rect" id="node23" href="$classllvm_1_1CleanupReturnInst.html" title="llvm::CleanupReturnInst" alt="" coords="469,689,632,716"/>
<area shape="rect" id="node24" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions. " alt="" coords="499,740,603,767"/>
<area shape="rect" id="node25" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value. " alt="" coords="467,791,634,817"/>
<area shape="rect" id="node26" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations. " alt="" coords="495,841,607,868"/>
<area shape="rect" id="node27" href="$classllvm_1_1FuncletPadInst.html" title="llvm::FuncletPadInst" alt="" coords="479,892,622,919"/>
<area shape="rect" id="node28" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs ..." alt="" coords="469,943,632,969"/>
<area shape="rect" id="node29" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction. " alt="" coords="485,993,617,1020"/>
<area shape="rect" id="node30" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value. " alt="" coords="472,1044,629,1071"/>
<area shape="rect" id="node31" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value. " alt="" coords="479,1095,622,1121"/>
<area shape="rect" id="node32" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="479,1145,623,1172"/>
<area shape="rect" id="node33" href="$classllvm_1_1PHINode.html" title="llvm::PHINode" alt="" coords="497,1196,605,1223"/>
<area shape="rect" id="node34" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception. " alt="" coords="488,1247,613,1273"/>
<area shape="rect" id="node35" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function. " alt="" coords="493,1297,608,1324"/>
<area shape="rect" id="node36" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction. " alt="" coords="494,1348,607,1375"/>
<area shape="rect" id="node37" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors. " alt="" coords="473,1399,628,1425"/>
<area shape="rect" id="node38" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory. " alt="" coords="497,1449,604,1476"/>
<area shape="rect" id="node39" href="$classllvm_1_1SwitchInst.html" title="Multiway switch. " alt="" coords="493,1500,609,1527"/>
<area shape="rect" id="node40" href="$classllvm_1_1UnaryInstruction.html" title="llvm::UnaryInstruction" alt="" coords="475,1551,626,1577"/>
<area shape="rect" id="node41" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior. " alt="" coords="476,1601,625,1628"/>
<area shape="rect" id="node43" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::BitCast \&gt;" alt="" coords="472,1652,629,1708"/>
<area shape="rect" id="node44" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::GetElementPtr \&gt;" alt="" coords="472,1732,629,1788"/>
<area shape="rect" id="node45" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::PtrToInt \&gt;" alt="" coords="472,1812,629,1868"/>
<area shape="rect" id="node46" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::ZExt \&gt;" alt="" coords="472,1892,629,1948"/>
<area shape="rect" id="node47" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="475,1972,626,1999"/>
<area shape="rect" id="node48" href="$classllvm_1_1OverflowingBinaryOperator.html" title="Utility class for integer operators which may exhibit overflow &#45; Add, Sub, Mul, and Shl..." alt="" coords="445,2023,656,2049"/>
<area shape="rect" id="node49" href="$classllvm_1_1PossiblyExactOperator.html" title="A udiv or sdiv instruction, which can be marked as &quot;exact&quot;, indicating that no bits are destroyed..." alt="" coords="457,2073,645,2100"/>
</map>
