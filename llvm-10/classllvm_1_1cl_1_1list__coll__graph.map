<map id="llvm::cl::list&lt; DataType, StorageClass, ParserClass &gt;" name="llvm::cl::list&lt; DataType, StorageClass, ParserClass &gt;">
<area shape="rect" id="node2" href="$classllvm_1_1cl_1_1Option.html" title="llvm::cl::Option" alt="" coords="3271,243,3381,269"/>
<area shape="rect" id="node3" href="$classllvm_1_1SmallPtrSet.html" title="llvm::SmallPtrSet\&lt;\l llvm::cl::SubCommand\l *, 1 \&gt;" alt="" coords="1340,65,1499,121"/>
<area shape="rect" id="node4" href="$classllvm_1_1SmallPtrSetImpl.html" title="llvm::SmallPtrSetImpl\l\&lt; llvm::cl::SubCommand * \&gt;" alt="" coords="939,22,1127,63"/>
<area shape="rect" id="node5" href="$classllvm_1_1SmallPtrSetImplBase.html" title="SmallPtrSetImplBase &#45; This is the common code shared among all the SmallPtrSet&lt;&gt;&#39;s, which is almost everything. " alt="" coords="313,56,492,83"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallPtrSetImpl.html" title="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..." alt="" coords="556,67,705,109"/>
<area shape="rect" id="node6" href="$classllvm_1_1DebugEpochBase.html" title="A base class for data structure classes wishing to make iterators (&quot;handles&quot;) pointing into themselve..." alt="" coords="5,5,164,32"/>
<area shape="rect" id="node8" href="$classunsigned.html" title="unsigned" alt="" coords="47,159,122,185"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="325,211,480,237"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallPtrSet.html" title="SmallPtrSet &#45; This class implements a set which is optimized for holding SmallSize or less elements..." alt="" coords="957,87,1108,129"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l llvm::cl::OptionCategory\l *, 1 \&gt;" alt="" coords="2948,228,3115,284"/>
<area shape="rect" id="node12" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; llvm::cl::OptionCategory * \&gt;" alt="" coords="2537,170,2733,211"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1539,143,1765,185"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="943,189,1122,230"/>
<area shape="rect" id="node19" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1811,221,1990,262"/>
<area shape="rect" id="node20" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1330,247,1509,289"/>
<area shape="rect" id="node17" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="541,227,720,269"/>
<area shape="rect" id="node18" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="2119,228,2301,255"/>
<area shape="rect" id="node27" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2569,235,2702,277"/>
<area shape="rect" id="node21" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; llvm::cl::OptionCategory *, N \&gt;" alt="" coords="2528,301,2743,342"/>
<area shape="rect" id="node22" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; llvm::cl::OptionCategory *\&gt;" alt="" coords="1805,307,1997,349"/>
<area shape="rect" id="node23" href="$classchar.html" title="char" alt="" coords="1009,384,1056,411"/>
<area shape="rect" id="node24" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="1324,377,1515,418"/>
<area shape="rect" id="node26" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1789,395,2012,421"/>
<area shape="rect" id="node25" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="2125,383,2295,425"/>
<area shape="rect" id="node28" href="$classllvm_1_1StringRef.html" title="StringRef &#45; Represent a constant reference to a string, i.e. " alt="" coords="2977,353,3086,380"/>
<area shape="rect" id="node29" href="$classsize__t.html" title="size_t" alt="" coords="2607,367,2664,393"/>
<area shape="rect" id="node30" href="$classllvm_1_1cl_1_1list__storage.html" title="llvm::cl::list_storage\l\&lt; DataType, StorageClass \&gt;" alt="" coords="3231,294,3421,335"/>
</map>
