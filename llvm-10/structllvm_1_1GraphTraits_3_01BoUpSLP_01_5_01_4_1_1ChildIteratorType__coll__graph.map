<map id="llvm::GraphTraits&lt; GraphType &gt;::ChildIteratorType" name="llvm::GraphTraits&lt; GraphType &gt;::ChildIteratorType">
<area shape="rect" id="node2" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; ChildIteratorType,\l SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;" alt="" coords="3776,603,4007,673"/>
<area shape="rect" id="node3" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; ChildIteratorType,\l typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP\l::EdgeInfo, 1 \&gt;::iterator \&gt;\l::iterator_category, typename\l std::iterator_traits\&lt; SmallVector\l\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::value_type, typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std\l::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type, typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator \&gt;::pointer,\l typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type * \&gt;::type, typename std::conditional\l\&lt; std::is_same\&lt; typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP\l::EdgeInfo, 1 \&gt;::iterator \&gt;::value_type, typename std::iterator_traits\l\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator \&gt;::value_type \&gt;::value,\l typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::reference, typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="3096,199,3580,578"/>
<area shape="rect" id="node5" href="$classllvm_1_1iterator__facade__base.html" title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..." alt="" coords="2231,527,2455,597"/>
<area shape="rect" id="node25" href="$classllvm_1_1iterator__adaptor__base.html" title="CRTP base class for adapting an iterator to a different type. " alt="" coords="3211,603,3465,673"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l BoUpSLP::EdgeInfo, 1 \&gt;" alt="" coords="3253,719,3423,760"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; BoUpSLP::EdgeInfo \&gt;" alt="" coords="2261,676,2425,717"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1128,607,1323,648"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="649,653,828,695"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1369,699,1547,740"/>
<area shape="rect" id="node17" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="919,653,1098,695"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="181,655,336,682"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="385,689,564,731"/>
<area shape="rect" id="node12" href="$classunsigned.html" title="unsigned" alt="" coords="5,630,80,657"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1691,706,1873,733"/>
<area shape="rect" id="node24" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2277,741,2410,783"/>
<area shape="rect" id="node18" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; BoUpSLP::EdgeInfo, N \&gt;" alt="" coords="2252,807,2435,848"/>
<area shape="rect" id="node19" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; BoUpSLP::EdgeInfo \&gt;" alt="" coords="1363,844,1553,885"/>
<area shape="rect" id="node20" href="$classchar.html" title="char" alt="" coords="715,841,762,867"/>
<area shape="rect" id="node21" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="913,833,1104,875"/>
<area shape="rect" id="node23" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1347,781,1569,807"/>
<area shape="rect" id="node22" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1697,773,1867,815"/>
</map>
