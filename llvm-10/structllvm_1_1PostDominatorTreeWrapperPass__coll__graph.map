<map id="llvm::PostDominatorTreeWrapperPass" name="llvm::PostDominatorTreeWrapperPass">
<area shape="rect" id="node2" href="$classllvm_1_1FunctionPass.html" title="FunctionPass class &#45; This class is used to implement most global optimizations. " alt="" coords="2987,173,3121,200"/>
<area shape="rect" id="node3" href="$classllvm_1_1Pass.html" title="Pass interface &#45; Implemented by all &#39;passes&#39;. " alt="" coords="2768,173,2852,200"/>
<area shape="rect" id="node4" href="$classllvm_1_1PostDominatorTree.html" title="PostDominatorTree Class &#45; Concrete subclass of DominatorTree that is used to compute the post&#45;dominat..." alt="" coords="2971,224,3137,251"/>
<area shape="rect" id="node5" href="$classllvm_1_1DominatorTreeBase.html" title="Core dominator tree base class. " alt="" coords="2699,224,2921,251"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l NodeT *, IsPostDom\l ? 4 :1 \&gt;" alt="" coords="2373,304,2521,360"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; NodeT * \&gt;" alt="" coords="1995,307,2146,349"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1128,355,1307,397"/>
<area shape="rect" id="node12" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="649,347,828,389"/>
<area shape="rect" id="node18" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1353,306,1531,347"/>
<area shape="rect" id="node19" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="919,406,1098,447"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="181,327,336,353"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="385,363,564,405"/>
<area shape="rect" id="node14" href="$classunsigned.html" title="unsigned" alt="" coords="5,276,80,303"/>
<area shape="rect" id="node17" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1660,313,1843,340"/>
<area shape="rect" id="node26" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2004,373,2137,414"/>
<area shape="rect" id="node20" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; NodeT *, N \&gt;" alt="" coords="1985,453,2156,494"/>
<area shape="rect" id="node21" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; NodeT *\&gt;" alt="" coords="1347,546,1537,587"/>
<area shape="rect" id="node22" href="$classchar.html" title="char" alt="" coords="715,580,762,607"/>
<area shape="rect" id="node23" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="913,535,1104,577"/>
<area shape="rect" id="node25" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1331,473,1553,500"/>
<area shape="rect" id="node24" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1666,453,1837,494"/>
<area shape="rect" id="node27" href="$classbool.html" title="bool" alt="" coords="2424,384,2471,411"/>
</map>
