<map id="llvm::sampleprof::SampleProfileWriterExtBinaryBase" name="llvm::sampleprof::SampleProfileWriterExtBinaryBase">
<area shape="rect" id="node2" href="$classllvm_1_1sampleprof_1_1SampleProfileWriterBinary.html" title="Sample&#45;based profile writer (binary format). " alt="" coords="2493,123,2663,164"/>
<area shape="rect" id="node3" href="$classllvm_1_1sampleprof_1_1SampleProfileWriter.html" title="Sample&#45;based profile writer. Base class. " alt="" coords="2091,123,2262,164"/>
<area shape="rect" id="node7" href="$classllvm_1_1MapVector.html" title="llvm::MapVector\&lt; llvm\l::StringRef, uint32_t \&gt;" alt="" coords="2100,32,2253,73"/>
<area shape="rect" id="node8" href="$classllvm_1_1MapVector.html" title="This class implements a map that also provides access to all stored values in a deterministic order..." alt="" coords="1660,5,1876,47"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l llvm::sampleprof::SecHdrTable\lEntry, 8 \&gt;" alt="" coords="2475,293,2681,349"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; llvm::sampleprof::SecHdrTable\lEntry \&gt;" alt="" coords="2069,403,2284,459"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1128,501,1307,557"/>
<area shape="rect" id="node12" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="649,459,828,500"/>
<area shape="rect" id="node18" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1353,405,1531,447"/>
<area shape="rect" id="node19" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="919,400,1098,441"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="181,459,336,486"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="385,493,564,535"/>
<area shape="rect" id="node14" href="$classunsigned.html" title="unsigned" alt="" coords="5,434,80,461"/>
<area shape="rect" id="node17" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1677,413,1859,439"/>
<area shape="rect" id="node26" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2110,331,2243,372"/>
<area shape="rect" id="node20" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; llvm::sampleprof::SecHdrTable\lEntry, N \&gt;" alt="" coords="2069,250,2284,306"/>
<area shape="rect" id="node21" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; llvm::sampleprof::SecHdrTable\lEntry \&gt;" alt="" coords="1335,321,1549,377"/>
<area shape="rect" id="node22" href="$classchar.html" title="char" alt="" coords="715,274,762,301"/>
<area shape="rect" id="node23" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="913,267,1104,308"/>
<area shape="rect" id="node25" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1331,234,1553,261"/>
<area shape="rect" id="node24" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1683,253,1853,295"/>
</map>
