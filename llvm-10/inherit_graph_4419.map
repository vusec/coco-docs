<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classllvm_1_1bf__iterator__storage.html" title="llvm::bf_iterator_storage\l\&lt; SetType \&gt;" alt="" coords="43,5,206,47"/>
<area shape="rect" id="node2" href="$classllvm_1_1bf__iterator.html" title="llvm::bf_iterator\&lt;\l GraphT, SetType, GT \&gt;" alt="" coords="477,9,641,51"/>
<area shape="rect" id="node3" href="$classllvm_1_1df__iterator__storage.html" title="llvm::df_iterator_storage\l\&lt; df_iterator_default_set\l\&lt; typename GraphTraits\&lt; std\l::conditional\&lt; IsConst, const\l BlockT, BlockT \&gt;::type *\&gt;::NodeRef\l \&gt;, false \&gt;" alt="" coords="5,71,244,171"/>
<area shape="rect" id="node4" href="$classllvm_1_1df__iterator.html" title="llvm::df_iterator\&lt;\l std::conditional\&lt; IsConst,\l const BlockT, BlockT \&gt;\l::type *\&gt;" alt="" coords="471,81,647,152"/>
<area shape="rect" id="node5" href="$classllvm_1_1RegionBase_1_1block__iterator__wrapper.html" title="llvm::RegionBase\&lt; Tr\l \&gt;::block_iterator_wrapper\l\&lt; IsConst \&gt;" alt="" coords="941,67,1115,123"/>
<area shape="rect" id="node6" href="$classllvm_1_1df__iterator__storage.html" title="llvm::df_iterator_storage\l\&lt; SetTy, ExtStorage \&gt;" alt="" coords="43,220,206,261"/>
<area shape="rect" id="node7" href="$classllvm_1_1df__iterator.html" title="llvm::df_iterator\&lt;\l Inverse\&lt; T \&gt;, SetTy,\l External \&gt;" alt="" coords="485,177,633,233"/>
<area shape="rect" id="node11" href="$classllvm_1_1df__iterator.html" title="llvm::df_iterator\&lt;\l T, SetTy, true \&gt;" alt="" coords="499,257,619,299"/>
<area shape="rect" id="node8" href="$structllvm_1_1idf__iterator.html" title="llvm::idf_iterator\l\&lt; T, SetTy, true \&gt;" alt="" coords="965,148,1091,189"/>
<area shape="rect" id="node10" href="$structllvm_1_1idf__iterator.html" title="llvm::idf_iterator\l\&lt; T, SetTy, External \&gt;" alt="" coords="951,213,1105,255"/>
<area shape="rect" id="node9" href="$structllvm_1_1idf__ext__iterator.html" title="llvm::idf_ext_iterator\l\&lt; T, SetTy \&gt;" alt="" coords="1267,148,1407,189"/>
<area shape="rect" id="node12" href="$structllvm_1_1df__ext__iterator.html" title="llvm::df_ext_iterator\l\&lt; T, SetTy \&gt;" alt="" coords="959,279,1097,320"/>
<area shape="rect" id="node13" href="$classllvm_1_1df__iterator__storage.html" title="llvm::df_iterator_storage\l\&lt; SetType, ExtStorage \&gt;" alt="" coords="41,323,209,364"/>
<area shape="rect" id="node14" href="$classllvm_1_1df__iterator.html" title="llvm::df_iterator\&lt;\l GraphT, SetType, ExtStorage, GT \&gt;" alt="" coords="440,323,677,364"/>
<area shape="rect" id="node16" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; attribute_iterator,\l std::forward_iterator_tag,\l const DWARFAttribute \&gt;" alt="" coords="472,2037,645,2108"/>
<area shape="rect" id="node18" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; BinaryAnnotationIterator,\l std::forward_iterator_tag,\l DecodedAnnotation \&gt;" alt="" coords="452,2132,665,2203"/>
<area shape="rect" id="node20" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; call_iterator,\l std::forward_iterator\l_tag, typename std::iterator\l_traits\&lt; VectorImplT::iterator\l \&gt;::value_type, typename std::\literator_traits\&lt; VectorImplT::iterator\l \&gt;::difference_type, typename std::conditional\l\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; VectorImplT::iterator \&gt;::value_type, typename\l std::iterator_traits\&lt; VectorImplT::iterator \&gt;\l::value_type \&gt;::value, typename std::iterator_traits\l\&lt; VectorImplT::iterator \&gt;::pointer, typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::value_type * \&gt;::type,\l typename std::conditional\&lt; std::is_same\&lt; typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::value_type, typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::value_type \&gt;::value, typename std\l::iterator_traits\&lt; VectorImplT::iterator \&gt;::reference, typename std\l::iterator_traits\&lt; VectorImplT::iterator \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="353,2227,764,2518"/>
<area shape="rect" id="node23" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; CaseIteratorImpl\l\&lt; CaseHandleT \&gt;, std::random\l_access_iterator_tag, CaseHandleT \&gt;" alt="" coords="437,2543,680,2613"/>
<area shape="rect" id="node25" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; ChildIteratorType,\l typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP\l::EdgeInfo, 1 \&gt;::iterator \&gt;\l::iterator_category, typename\l std::iterator_traits\&lt; SmallVector\l\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::value_type, typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std\l::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type, typename std::iterator\l_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator \&gt;::pointer,\l typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type * \&gt;::type, typename std::conditional\l\&lt; std::is_same\&lt; typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP\l::EdgeInfo, 1 \&gt;::iterator \&gt;::value_type, typename std::iterator_traits\l\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator \&gt;::value_type \&gt;::value,\l typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo, 1 \&gt;::iterator\l \&gt;::reference, typename std::iterator_traits\&lt; SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="317,2638,801,3017"/>
<area shape="rect" id="node28" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; concat_iterator\l\&lt; ValueT, IterTs... \&gt;,\l std::forward_iterator_tag,\l ValueT \&gt;" alt="" coords="473,3041,644,3126"/>
<area shape="rect" id="node30" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_iterator,\l std::forward_iterator\l_tag, const T \&gt;" alt="" coords="483,3151,635,3221"/>
<area shape="rect" id="node32" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_iterator,\l std::input_iterator_tag,\l const StringRef \&gt;" alt="" coords="481,3245,637,3316"/>
<area shape="rect" id="node34" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_succ_op\l_iterator, std::random\l_access_iterator_tag, const\l BasicBlock *, ptrdiff_t,\l const BasicBlock *, const\l BasicBlock * \&gt;" alt="" coords="467,3341,650,3455"/>
<area shape="rect" id="node38" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_symbol_iterator,\l std::forward_iterator_tag,\l const Symbol *, ptrdiff_t,\l const Symbol *, const Symbol * \&gt;" alt="" coords="447,3479,671,3565"/>
<area shape="rect" id="node41" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_value_iterator,\l std::forward_iterator_tag,\l const DIEValue, typename std\l::iterator_traits\&lt; ListTy::const\l_iterator \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; const\l DIEValue, typename std::iterator_traits\l\&lt; ListTy::const_iterator \&gt;::value_type \&gt;\l::value, typename std::iterator_traits\&lt; ListTy\l::const_iterator \&gt;::pointer, const DIEValue *\l \&gt;::type, typename std::conditional\&lt; std::is_same\l\&lt; const DIEValue, typename std::iterator_traits\&lt;\l ListTy::const_iterator \&gt;::value_type \&gt;::value, typename\l std::iterator_traits\&lt; ListTy::const_iterator \&gt;::reference,\l const DIEValue &amp; \&gt;::type \&gt;" alt="" coords="385,3589,733,3836"/>
<area shape="rect" id="node44" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; const_value_op\l_iterator, std::random\l_access_iterator_tag, const\l Value *, ptrdiff_t, const\l Value *, const Value * \&gt;" alt="" coords="467,3860,650,3960"/>
<area shape="rect" id="node47" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; DbiModuleSourceFiles\lIterator, std::random_access\l_iterator_tag, StringRef \&gt;" alt="" coords="459,3984,659,4055"/>
<area shape="rect" id="node49" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; def_chain_iterator\l\&lt; T, UseOptimizedChain \&gt;\l, std::forward_iterator_tag,\l MemoryAccess *\&gt;" alt="" coords="469,4079,648,4165"/>
<area shape="rect" id="node51" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; DerivedTy, std\l::forward_iterator_tag,\l ValueTy \&gt;" alt="" coords="481,4189,636,4260"/>
<area shape="rect" id="node53" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; early_inc_iterator\l_impl\&lt; WrappedIteratorT\l \&gt;, std::input_iterator_tag,\l typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt;\l WrappedIteratorT \&gt;::difference_type,\l typename std::conditional\&lt; std::is\l_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename\l std::iterator_traits\&lt; WrappedIteratorT \&gt;\l::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::pointer, typename\l std::iterator_traits\&lt; WrappedIteratorT \&gt;::value\l_type * \&gt;::type, typename std::conditional\&lt; std::\lis_same\&lt; typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type, typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::reference, typename std::iterator_traits\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="292,4284,825,4589"/>
<area shape="rect" id="node56" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; enumerator_iter\l\&lt; R \&gt;, std::forward_iterator\l_tag, result_pair\&lt; R \&gt;, std\l::iterator_traits\&lt; IterOfRange\l\&lt; R \&gt; \&gt;::difference_type, std\l::iterator_traits\&lt; IterOfRange\l\&lt; R \&gt; \&gt;::pointer, std::iterator\l_traits\&lt; IterOfRange\&lt; R \&gt; \&gt;::reference \&gt;" alt="" coords="428,4614,689,4758"/>
<area shape="rect" id="node58" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l std::common_type\&lt; IterTag,\l std::iterator_traits\&lt; WrappedIterator\lT \&gt;::iterator_category \&gt;::type, typename\l std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::\literator_traits\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::pointer, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::reference, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="351,4782,767,5102"/>
<area shape="rect" id="node62" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;, std::common\l_type\&lt; std::bidirectional_iterator\l_tag, std::iterator_traits\&lt; WrappedIterator\lT \&gt;::iterator_category \&gt;::type, typename\l std::iterator_traits\&lt; WrappedIteratorT \&gt;\l::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::\literator_traits\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::pointer, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::reference, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="351,5127,767,5461"/>
<area shape="rect" id="node66" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt;, std::random\l_access_iterator_tag, const PSHashRecord \&gt;" alt="" coords="413,5485,704,5556"/>
<area shape="rect" id="node68" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; FixedStreamArrayIterator\l\&lt; T \&gt;, std::random_access_iterator\l_tag, const T \&gt;" alt="" coords="445,5580,672,5651"/>
<area shape="rect" id="node70" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; FunctionRecordIterator,\l std::forward_iterator_tag,\l FunctionRecord \&gt;" alt="" coords="455,5675,662,5745"/>
<area shape="rect" id="node72" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; GSIHashIterator,\l std::random_access_iterator\l_tag, const uint32_t, typename\l std::iterator_traits\&lt; FixedStreamArray\lIterator\&lt; PSHashRecord \&gt; \&gt;::difference\l_type, typename std::conditional\&lt; std\l::is_same\&lt; const uint32_t, typename std\l::iterator_traits\&lt; FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt; \&gt;::value_type \&gt;::value, typename\l std::iterator_traits\&lt; FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt; \&gt;::pointer, const uint32_t * \&gt;\l::type, typename std::conditional\&lt; std::is_same\&lt;\l const uint32_t, typename std::iterator_traits\&lt; FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt; \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; FixedStreamArrayIterator\&lt; PSHashRecord \&gt; \&gt;::reference,\l const uint32_t &amp; \&gt;::type \&gt;" alt="" coords="340,5769,777,6030"/>
<area shape="rect" id="node75" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; HashTableIterator\l\&lt; ValueT \&gt;, std::forward\l_iterator_tag, const std\l::pair\&lt; uint32_t, ValueT \&gt; \&gt;" alt="" coords="467,6054,650,6139"/>
<area shape="rect" id="node77" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; ImutAVLValueIterator\l\&lt; ImmutableMap \&gt;, std::iterator\l_traits\&lt; ImmutableMap ::TreeTy\l::iterator \&gt;::iterator_category,\l const ImmutableMap ::value_type,\l typename std::iterator_traits\&lt; ImmutableMap\l ::TreeTy::iterator \&gt;::difference_type,\l typename std::conditional\&lt; std::is_same\l\&lt; const ImmutableMap ::value_type, typename\l std::iterator_traits\&lt; ImmutableMap ::TreeTy\l::iterator \&gt;::value_type \&gt;::value, typename std\l::iterator_traits\&lt; ImmutableMap ::TreeTy::iterator\l \&gt;::pointer, const ImmutableMap ::value_type * \&gt;::\ltype, typename std::conditional\&lt; std::is_same\&lt; const\l ImmutableMap ::value_type, typename std::iterator_traits\l\&lt; ImmutableMap ::TreeTy::iterator \&gt;::value_type \&gt;::value,\l typename std::iterator_traits\&lt; ImmutableMap ::TreeTy::iterator\l \&gt;::reference, const ImmutableMap ::value_type &amp; \&gt;::type \&gt;" alt="" coords="365,6163,753,6454"/>
<area shape="rect" id="node81" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; ImutAVLValueIterator\l\&lt; ImmutableMapRef \&gt;, std\l::iterator_traits\&lt; ImmutableMapRef\l ::TreeTy::iterator \&gt;::iterator\l_category, const ImmutableMapRef\l ::value_type, typename std::iterator\l_traits\&lt; ImmutableMapRef ::TreeTy::iterator\l \&gt;::difference_type, typename std::conditional\l\&lt; std::is_same\&lt; const ImmutableMapRef ::value\l_type, typename std::iterator_traits\&lt; ImmutableMapRef\l ::TreeTy::iterator \&gt;::value_type \&gt;::value, typename\l std::iterator_traits\&lt; ImmutableMapRef ::TreeTy::iterator\l \&gt;::pointer, const ImmutableMapRef ::value_type * \&gt;::type,\l typename std::conditional\&lt; std::is_same\&lt; const ImmutableMapRef\l ::value_type, typename std::iterator_traits\&lt; ImmutableMapRef\l ::TreeTy::iterator \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; ImmutableMapRef ::TreeTy::iterator \&gt;::reference, const ImmutableMapRef\l ::value_type &amp; \&gt;::type \&gt;" alt="" coords="307,6478,810,6769"/>
<area shape="rect" id="node85" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; ImutAVLValueIterator\l\&lt; T \&gt;, std::iterator_traits\l\&lt; T::TreeTy::iterator \&gt;::iterator\l_category, const T::value_type,\l typename std::iterator_traits\&lt;\l T::TreeTy::iterator \&gt;::difference\l_type, typename std::conditional\&lt; std\l::is_same\&lt; const T::value_type, typename\l std::iterator_traits\&lt; T::TreeTy::iterator\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; T::TreeTy::iterator \&gt;::pointer, const\l T::value_type * \&gt;::type, typename std::conditional\l\&lt; std::is_same\&lt; const T::value_type, typename std\l::iterator_traits\&lt; T::TreeTy::iterator \&gt;::value_type\l \&gt;::value, typename std::iterator_traits\&lt; T::TreeTy::\literator \&gt;::reference, const T::value_type &amp; \&gt;::type \&gt;" alt="" coords="394,6793,723,7054"/>
<area shape="rect" id="node88" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; iterator, std\l::bidirectional_iterator\l_tag, const DWARFDie \&gt;" alt="" coords="472,7079,645,7149"/>
<area shape="rect" id="node90" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; iterator, std\l::forward_iterator_tag,\l const entry \&gt;" alt="" coords="484,7173,633,7244"/>
<area shape="rect" id="node92" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; iterator, std\l::forward_iterator_tag,\l Operation \&gt;" alt="" coords="484,7268,633,7339"/>
<area shape="rect" id="node94" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; iterator, std\l::forward_iterator_tag, T \&gt;" alt="" coords="472,7363,645,7419"/>
<area shape="rect" id="node96" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; iterator, std\l::forward_iterator_tag,\l typename std::iterator\l_traits\&lt; VectorImplT::iterator\l \&gt;::value_type, typename std\l::iterator_traits\&lt; VectorImplT\l::iterator \&gt;::difference_type,\l typename std::conditional\&lt; std\l::is_same\&lt; typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::\lvalue_type, typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::value\l_type \&gt;::value, typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::pointer,\l typename std::iterator_traits\&lt; VectorImplT\l::iterator \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std\l::iterator_traits\&lt; VectorImplT::iterator \&gt;::value\l_type, typename std::iterator_traits\&lt; VectorImplT\l::iterator \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; VectorImplT::iterator \&gt;::reference, typename std\l::iterator_traits\&lt; VectorImplT::iterator \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="363,7443,754,7793"/>
<area shape="rect" id="node99" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; IteratorImpl\&lt;\l ValueT, IteratorBase\l \&gt;, std::bidirectional\l_iterator_tag, ValueT, typename\l std::iterator_traits\&lt; IteratorBase\l \&gt;::difference_type, typename std\l::conditional\&lt; std::is_same\&lt; ValueT,\l typename std::iterator_traits\&lt; IteratorBase\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; IteratorBase \&gt;::pointer, ValueT * \&gt;\l::type, typename std::conditional\&lt; std::is_same\l\&lt; ValueT, typename std::iterator_traits\&lt; IteratorBase\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; IteratorBase \&gt;::reference, ValueT &amp; \&gt;::type \&gt;" alt="" coords="394,7817,723,8049"/>
<area shape="rect" id="node101" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; LineCoverageIterator,\l std::forward_iterator_tag,\l LineCoverageStats \&gt;" alt="" coords="461,8073,656,8144"/>
<area shape="rect" id="node103" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; mapped_iterator\l\&lt; ItTy, FuncTy \&gt;, std::\literator_traits\&lt; ItTy \&gt;\l::iterator_category, std\l::remove_reference\&lt; FuncReturnTy\l \&gt;::type, typename std::iterator\l_traits\&lt; ItTy \&gt;::difference_type,\l typename std::conditional\&lt; std::\lis_same\&lt; std::remove_reference\&lt; FuncReturnTy\l \&gt;::type, typename std::iterator_traits\l\&lt; ItTy \&gt;::value_type \&gt;::value, typename std\l::iterator_traits\&lt; ItTy \&gt;::pointer, std::remove\l_reference\&lt; FuncReturnTy \&gt;::type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; std::remove_reference\l\&lt; FuncReturnTy \&gt;::type, typename std::iterator_traits\l\&lt; ItTy \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; ItTy \&gt;::reference, std::remove_reference\&lt; FuncReturnTy\l \&gt;::type &amp; \&gt;::type \&gt;" alt="" coords="359,8169,759,8459"/>
<area shape="rect" id="node106" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; mc_difflist_iterator\l\&lt; mc_subreg_iterator \&gt;, std\l::forward_iterator_tag, MCPhysReg \&gt;" alt="" coords="439,8484,679,8555"/>
<area shape="rect" id="node109" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; mc_difflist_iterator\l\&lt; mc_superreg_iterator \&gt;,\l std::forward_iterator_tag,\l MCPhysReg \&gt;" alt="" coords="471,8579,647,8665"/>
<area shape="rect" id="node112" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; mc_difflist_iterator\l\&lt; SubT \&gt;, std::forward_iterator\l_tag, MCPhysReg \&gt;" alt="" coords="458,8689,659,8760"/>
<area shape="rect" id="node114" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; memoryaccess_def\l_iterator_base\&lt; MemoryAccess\l \&gt;, std::forward_iterator_tag,\l MemoryAccess, ptrdiff_t, MemoryAccess\l *, MemoryAccess *\&gt;" alt="" coords="425,8784,693,8884"/>
<area shape="rect" id="node116" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; memoryaccess_def\l_iterator_base\&lt; T \&gt;, std\l::forward_iterator_tag, T,\l ptrdiff_t, T *, T *\&gt;" alt="" coords="467,8909,650,8994"/>
<area shape="rect" id="node118" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; MemoryInfoIterator,\l std::forward_iterator_tag,\l minidump::MemoryInfo \&gt;" alt="" coords="467,9019,650,9089"/>
<area shape="rect" id="node120" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; MIBundleOperandIterator\lBase\&lt; const MachineOperand\l \&gt;, std::forward_iterator_tag,\l const MachineOperand \&gt;" alt="" coords="451,9114,666,9199"/>
<area shape="rect" id="node123" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; MIBundleOperandIterator\lBase\&lt; MachineOperand \&gt;, std\l::forward_iterator_tag, MachineOperand \&gt;" alt="" coords="427,9224,690,9295"/>
<area shape="rect" id="node126" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; MIBundleOperandIterator\lBase\&lt; ValueT \&gt;, std::forward\l_iterator_tag, ValueT \&gt;" alt="" coords="451,9319,666,9389"/>
<area shape="rect" id="node128" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; NeighborEdgeIterator\lT\&lt; IsConst, IsOut \&gt;, std\l::iterator_traits\&lt; BaseIt\l \&gt;::iterator_category, T, typename\l std::iterator_traits\&lt; BaseIt \&gt;\l::difference_type, typename std::\lconditional\&lt; std::is_same\&lt; T, typename\l std::iterator_traits\&lt; BaseIt \&gt;::value\l_type \&gt;::value, typename std::iterator\l_traits\&lt; BaseIt \&gt;::pointer, T * \&gt;::type,\l typename std::conditional\&lt; std::is_same\l\&lt; T, typename std::iterator_traits\&lt; BaseIt\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; BaseIt \&gt;::reference, T &amp; \&gt;::type \&gt;" alt="" coords="413,9414,704,9646"/>
<area shape="rect" id="node130" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; nested_collection\l_iterator\&lt; OuterItrT, InnerItrT,\l T, getInnerRange \&gt;, std::forward\l_iterator_tag, T \&gt;" alt="" coords="451,9670,667,9755"/>
<area shape="rect" id="node132" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; partition_iterator,\l std::forward_iterator_tag,\l Partition \&gt;" alt="" coords="473,9780,644,9851"/>
<area shape="rect" id="node134" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; phi_iterator_impl\l\&lt; PHINodeT, BBIteratorT\l \&gt;, std::forward_iterator\l_tag, PHINodeT \&gt;" alt="" coords="473,9875,644,9961"/>
<area shape="rect" id="node136" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; pointee_iterator\l\&lt; WrappedIteratorT, T \&gt;\l, std::iterator_traits\&lt;\l WrappedIteratorT \&gt;::iterator\l_category, T, typename std::\literator_traits\&lt; WrappedIteratorT\l \&gt;::difference_type, typename std\l::conditional\&lt; std::is_same\&lt; T, typename\l std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::pointer, T * \&gt;::\ltype, typename std::conditional\&lt; std::is_same\l\&lt; T, typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::reference, T &amp; \&gt;::type \&gt;" alt="" coords="395,9985,722,10232"/>
<area shape="rect" id="node139" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; pointer_iterator\l\&lt; WrappedIteratorT, T \&gt;\l, std::iterator_traits\&lt;\l WrappedIteratorT \&gt;::iterator\l_category, T, typename std::\literator_traits\&lt; WrappedIteratorT\l \&gt;::difference_type, typename std\l::conditional\&lt; std::is_same\&lt; T, typename\l std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::pointer, T * \&gt;::\ltype, typename std::conditional\&lt; std::is_same\l\&lt; T, typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::reference, T &amp; \&gt;::type \&gt;" alt="" coords="395,10256,722,10503"/>
<area shape="rect" id="node142" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; postorder_ref\l_scc_iterator, std::forward\l_iterator_tag, RefSCC \&gt;" alt="" coords="471,10527,646,10597"/>
<area shape="rect" id="node144" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; reverse_iterator,\l std::input_iterator_tag,\l const StringRef \&gt;" alt="" coords="477,10621,640,10692"/>
<area shape="rect" id="node146" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; reverse_iterator\l\&lt; llvm::DWARFDie::iterator\l \&gt;, bidirectional_iterator\l_tag, const llvm::DWARFDie \&gt;" alt="" coords="456,10717,661,10802"/>
<area shape="rect" id="node148" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; scc_iterator\&lt;\l GraphT, GT \&gt;, std::forward\l_iterator_tag, const std::\lvector\&lt; GT::NodeRef \&gt;, ptrdiff_t \&gt;" alt="" coords="447,10826,671,10911"/>
<area shape="rect" id="node150" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; SmallSetIterator\l\&lt; T, N, C \&gt;, std::forward\l_iterator_tag, T \&gt;" alt="" coords="475,10936,642,11007"/>
<area shape="rect" id="node152" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; StringMapConstIterator\l\&lt; ValueTy \&gt;, std::forward\l_iterator_tag, const StringMapEntry\l\&lt; ValueTy \&gt; \&gt;" alt="" coords="445,11031,673,11117"/>
<area shape="rect" id="node155" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; StringMapIterator\l\&lt; ValueTy \&gt;, std::forward\l_iterator_tag, StringMapEntry\l\&lt; ValueTy \&gt; \&gt;" alt="" coords="463,11141,655,11226"/>
<area shape="rect" id="node158" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; StringMapKeyIterator\l\&lt; ValueTy \&gt;, std::forward\l_iterator_tag, StringRef,\l typename std::iterator_traits\l\&lt; StringMapConstIterator\&lt; ValueTy\l \&gt; \&gt;::difference_type, typename std\l::conditional\&lt; std::is_same\&lt; StringRef,\l typename std::iterator_traits\&lt; StringMapConstIterator\l\&lt; ValueTy \&gt; \&gt;::value_type \&gt;::value, typename std\l::iterator_traits\&lt; StringMapConstIterator\&lt; ValueTy\l \&gt; \&gt;::pointer, StringRef * \&gt;::type, typename std::conditional\l\&lt; std::is_same\&lt; StringRef, typename std::iterator_traits\l\&lt; StringMapConstIterator\&lt; ValueTy \&gt; \&gt;::value_type \&gt;::value,\l typename std::iterator_traits\&lt; StringMapConstIterator\&lt; ValueTy\l \&gt; \&gt;::reference, StringRef &amp; \&gt;::type \&gt;" alt="" coords="361,11251,757,11497"/>
<area shape="rect" id="node161" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; succ_op_iterator,\l std::random_access_iterator\l_tag, BasicBlock *, ptrdiff\l_t, BasicBlock *, BasicBlock * \&gt;" alt="" coords="453,11522,664,11607"/>
<area shape="rect" id="node165" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; SuccIterator\&lt;\l InstructionT, BlockT\l \&gt;, std::random_access\l_iterator_tag, BlockT, int,\l BlockT *, BlockT *\&gt;" alt="" coords="474,11632,643,11732"/>
<area shape="rect" id="node167" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; upward_defs_iterator,\l std::forward_iterator_tag,\l const MemoryAccessPair \&gt;" alt="" coords="461,11756,656,11827"/>
<area shape="rect" id="node169" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; value_iterator,\l std::forward_iterator\l_tag, DIEValue, typename\l std::iterator_traits\&lt; ListTy\l::iterator \&gt;::difference_type,\l typename std::conditional\&lt; std\l::is_same\&lt; DIEValue, typename std\l::iterator_traits\&lt; ListTy::iterator\l \&gt;::value_type \&gt;::value, typename std\l::iterator_traits\&lt; ListTy::iterator \&gt;\l::pointer, DIEValue * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; DIEValue,\l typename std::iterator_traits\&lt; ListTy::iterator\l \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; ListTy::iterator \&gt;::reference, DIEValue &amp; \&gt;::type \&gt;" alt="" coords="377,11851,740,12097"/>
<area shape="rect" id="node172" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; value_op_iterator,\l std::random_access_iterator\l_tag, SDValue, ptrdiff_t, value\l_op_iterator *, value_op_iterator * \&gt;" alt="" coords="445,12122,672,12207"/>
<area shape="rect" id="node175" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; value_op_iterator,\l std::random_access_iterator\l_tag, Value *, ptrdiff_t, Value\l *, Value * \&gt;" alt="" coords="463,12231,654,12317"/>
<area shape="rect" id="node178" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; value_sequence\l_iterator\&lt; ValueT \&gt;, std\l::random_access_iterator\l_tag, const ValueT \&gt;" alt="" coords="474,12341,643,12426"/>
<area shape="rect" id="node180" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; VarStreamArrayIterator\l\&lt; ValueType, Extractor \&gt;,\l std::forward_iterator_tag,\l ValueType \&gt;" alt="" coords="457,12450,660,12535"/>
<area shape="rect" id="node182" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; WrappedPairNodeDataIterator\l\&lt; ItType, NodeRef, DataRef \&gt;,\l std::iterator_traits\&lt; ItType\l \&gt;::iterator_category, NodeRef,\l std::ptrdiff_t, NodeRef *, NodeRef &amp; \&gt;" alt="" coords="433,12560,684,12660"/>
<area shape="rect" id="node185" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; WrappedSuccIterator,\l std::iterator_traits\&lt; succ\l_iterator \&gt;::iterator_category,\l NodeRef, std::ptrdiff_t, NodeRef\l *, NodeRef \&gt;" alt="" coords="451,12684,667,12784"/>
<area shape="rect" id="node188" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; zip_longest_iterator\l\&lt; Iters... \&gt;, std::common\l_type\&lt; std::forward_iterator\l_tag, std::iterator_traits\&lt;\l Iters \&gt;::iterator_category...\l \&gt;::type, ZipLongestTupleType\&lt;\l Iters... \&gt;::type, std::iterator\l_traits\&lt; std::tuple_element\&lt; 0, std\l::tuple\&lt; Iters... \&gt; \&gt;::type \&gt;::difference\l_type, ZipLongestTupleType\&lt; Iters... \&gt;\l::type *, ZipLongestTupleType\&lt; Iters... \&gt;::type \&gt;" alt="" coords="407,12808,711,12996"/>
<area shape="rect" id="node190" href="$classllvm_1_1AliasSet_1_1iterator.html" title="Define an iterator for alias sets... this is just a forward iterator. " alt="" coords="483,13021,634,13047"/>
<area shape="rect" id="node191" href="$classllvm_1_1AppleAcceleratorTable_1_1ValueIterator.html" title="llvm::AppleAcceleratorTable\l::ValueIterator" alt="" coords="466,13072,651,13113"/>
<area shape="rect" id="node192" href="$classllvm_1_1coverage_1_1CoverageMappingIterator.html" title="A file format agnostic iterator over coverage mapping data. " alt="" coords="473,13137,644,13179"/>
<area shape="rect" id="node193" href="$classllvm_1_1DIExpression_1_1expr__op__iterator.html" title="An iterator for expression operands. " alt="" coords="492,13203,625,13244"/>
<area shape="rect" id="node194" href="$classllvm_1_1DITypeRefArray_1_1iterator.html" title="llvm::DITypeRefArray\l::iterator" alt="" coords="484,13268,633,13309"/>
<area shape="rect" id="node195" href="$classllvm_1_1DWARFDebugNames_1_1ValueIterator.html" title="llvm::DWARFDebugNames\l::ValueIterator" alt="" coords="467,13333,651,13375"/>
<area shape="rect" id="node196" href="$classllvm_1_1EquivalenceClasses_1_1member__iterator.html" title="llvm::EquivalenceClasses\l\&lt; ElemTy \&gt;::member_iterator" alt="" coords="462,13399,655,13440"/>
<area shape="rect" id="node197" href="$classllvm_1_1generic__gep__type__iterator.html" title="llvm::generic_gep_type\l_iterator\&lt; ItTy \&gt;" alt="" coords="481,13464,637,13505"/>
<area shape="rect" id="node198" href="$classllvm_1_1GVNExpression_1_1int__op__inserter.html" title="llvm::GVNExpression\l::int_op_inserter" alt="" coords="485,13529,633,13571"/>
<area shape="rect" id="node199" href="$classllvm_1_1GVNExpression_1_1op__inserter.html" title="llvm::GVNExpression\l::op_inserter" alt="" coords="485,13595,633,13636"/>
<area shape="rect" id="node200" href="$classllvm_1_1ImutAVLTreeGenericIterator.html" title="llvm::ImutAVLTreeGeneric\lIterator\&lt; ImutInfo \&gt;" alt="" coords="471,13660,647,13701"/>
<area shape="rect" id="node201" href="$classllvm_1_1ImutAVLTreeInOrderIterator.html" title="llvm::ImutAVLTreeInOrder\lIterator\&lt; ImutInfo \&gt;" alt="" coords="471,388,646,429"/>
<area shape="rect" id="node202" href="$classllvm_1_1InstrProfIterator.html" title="A file format agnostic iterator over profiling data. " alt="" coords="486,454,631,481"/>
<area shape="rect" id="node203" href="$classllvm_1_1IntervalMap_1_1const__iterator.html" title="llvm::IntervalMap\&lt;\l KeyT, ValT, N, Traits\l \&gt;::const_iterator" alt="" coords="483,505,634,561"/>
<area shape="rect" id="node205" href="$classllvm_1_1iterator__facade__base.html" title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..." alt="" coords="447,585,671,656"/>
<area shape="rect" id="node212" href="$classllvm_1_1line__iterator.html" title="A forward iterator which reads text lines from a buffer. " alt="" coords="498,681,619,707"/>
<area shape="rect" id="node213" href="$classllvm_1_1MachineRegisterInfo_1_1defusechain__instr__iterator.html" title="defusechain_iterator &#45; This class provides iterator support for machine operands in the function that..." alt="" coords="431,732,686,803"/>
<area shape="rect" id="node214" href="$classllvm_1_1MachineRegisterInfo_1_1defusechain__iterator.html" title="reg_begin/reg_end &#45; Provide iteration support to walk over all definitions and uses of a register wit..." alt="" coords="450,827,667,913"/>
<area shape="rect" id="node215" href="$classllvm_1_1MachO_1_1ArchitectureSet_1_1arch__iterator.html" title="llvm::MachO::Architecture\lSet::arch_iterator\&lt; Ty \&gt;" alt="" coords="471,937,646,979"/>
<area shape="rect" id="node216" href="$classllvm_1_1Module_1_1debug__compile__units__iterator.html" title="An iterator for DICompileUnits that skips those marked NoDebug. " alt="" coords="481,1003,637,1044"/>
<area shape="rect" id="node217" href="$classllvm_1_1object_1_1content__iterator.html" title="llvm::object::content\l_iterator\&lt; content_type \&gt;" alt="" coords="475,1068,643,1109"/>
<area shape="rect" id="node222" href="$classllvm_1_1object_1_1Elf__Note__Iterator__Impl.html" title="llvm::object::Elf_Note\l_Iterator_Impl\&lt; ELFT \&gt;" alt="" coords="479,1133,638,1175"/>
<area shape="rect" id="node223" href="$classllvm_1_1po__iterator.html" title="llvm::po_iterator\&lt;\l GraphT, SetType, ExtStorage, GT \&gt;" alt="" coords="440,13725,677,13767"/>
<area shape="rect" id="node224" href="$classllvm_1_1PredIterator.html" title="llvm::PredIterator\l\&lt; Ptr, USE_iterator \&gt;" alt="" coords="485,1199,632,1240"/>
<area shape="rect" id="node225" href="$classllvm_1_1RNSuccIterator.html" title="Hierarchical RegionNode successor iterator. " alt="" coords="457,1264,661,1305"/>
<area shape="rect" id="node226" href="$classllvm_1_1RNSuccIterator_3_01FlatIt_3_01NodeRef_01_4_00_01BlockT_00_01RegionT_01_4.html" title="Flat RegionNode iterator. " alt="" coords="486,1330,631,1386"/>
<area shape="rect" id="node227" href="$classllvm_1_1SDNode_1_1use__iterator.html" title="This class provides iterator support for SDUse operands that use a specific SDNode. " alt="" coords="469,1410,649,1437"/>
<area shape="rect" id="node228" href="$classllvm_1_1SDNodeIterator.html" title="llvm::SDNodeIterator" alt="" coords="486,1461,631,1487"/>
<area shape="rect" id="node229" href="$classllvm_1_1SparseMultiSet_1_1iterator__base.html" title="Our iterators are iterators over the collection of objects that share a key. " alt="" coords="473,1512,644,1583"/>
<area shape="rect" id="node230" href="$classllvm_1_1SUnitIterator.html" title="llvm::SUnitIterator" alt="" coords="495,1607,623,1634"/>
<area shape="rect" id="node231" href="$classllvm_1_1TargetRegistry_1_1iterator.html" title="llvm::TargetRegistry\l::iterator" alt="" coords="489,1659,629,1700"/>
<area shape="rect" id="node232" href="$classllvm_1_1TypedMDOperandIterator.html" title="Typed iterator through MDNode operands. " alt="" coords="442,1725,675,1751"/>
<area shape="rect" id="node233" href="$classllvm_1_1ValueMapConstIterator.html" title="llvm::ValueMapConstIterator\l\&lt; DenseMapT, KeyT \&gt;" alt="" coords="465,1776,653,1817"/>
<area shape="rect" id="node234" href="$classllvm_1_1ValueMapIterator.html" title="llvm::ValueMapIterator\l\&lt; DenseMapT, KeyT \&gt;" alt="" coords="481,1841,637,1883"/>
<area shape="rect" id="node235" href="$classllvm_1_1yaml_1_1basic__collection__iterator.html" title="This is an iterator abstraction over YAML collections shared by both sequences and maps..." alt="" coords="467,1907,650,1948"/>
<area shape="rect" id="node236" href="$classllvm_1_1po__iterator.html" title="llvm::po_iterator\&lt;\l Inverse\&lt; T \&gt;, SetType,\l External \&gt;" alt="" coords="477,13857,640,13913"/>
<area shape="rect" id="node240" href="$classllvm_1_1po__iterator.html" title="llvm::po_iterator\&lt;\l T, SetType, true \&gt;" alt="" coords="492,13791,625,13832"/>
<area shape="rect" id="node17" href="$classllvm_1_1DWARFDie_1_1attribute__iterator.html" title="llvm::DWARFDie::attribute\l_iterator" alt="" coords="939,2052,1117,2093"/>
<area shape="rect" id="node19" href="$structllvm_1_1codeview_1_1BinaryAnnotationIterator.html" title="llvm::codeview::BinaryAnnotation\lIterator" alt="" coords="920,2147,1136,2188"/>
<area shape="rect" id="node21" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; call_iterator,\l VectorImplT::iterator,\l std::forward_iterator_tag \&gt;" alt="" coords="939,2337,1117,2408"/>
<area shape="rect" id="node22" href="$classllvm_1_1LazyCallGraph_1_1EdgeSequence_1_1call__iterator.html" title="An iterator over specifically call edges. " alt="" coords="1263,2345,1410,2401"/>
<area shape="rect" id="node24" href="$classllvm_1_1SwitchInst_1_1CaseIteratorImpl.html" title="llvm::SwitchInst::CaseIterator\lImpl\&lt; CaseHandleT \&gt;" alt="" coords="930,2557,1126,2599"/>
<area shape="rect" id="node26" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; ChildIteratorType,\l SmallVector\&lt; BoUpSLP::EdgeInfo,\l 1 \&gt;::iterator \&gt;" alt="" coords="913,2792,1143,2863"/>
<area shape="rect" id="node27" href="$structllvm_1_1GraphTraits_3_01BoUpSLP_01_5_01_4_1_1ChildIteratorType.html" title="Add the VectorizableTree to the index iterator to be able to return TreeEntry pointers. " alt="" coords="1231,2807,1442,2848"/>
<area shape="rect" id="node29" href="$classllvm_1_1concat__iterator.html" title="Iterator wrapper that concatenates sequences together. " alt="" coords="958,3063,1098,3104"/>
<area shape="rect" id="node31" href="$classllvm_1_1IntrusiveBackList_1_1const__iterator.html" title="llvm::IntrusiveBackList\l\&lt; T \&gt;::const_iterator" alt="" coords="951,3165,1105,3207"/>
<area shape="rect" id="node33" href="$classllvm_1_1sys_1_1path_1_1const__iterator.html" title="Path iterator. " alt="" coords="954,3260,1102,3301"/>
<area shape="rect" id="node35" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; const_succ_op_iterator,\l const_value_op_iterator, std\l::random_access_iterator_tag,\l const BasicBlock *, ptrdiff_t,\l const BasicBlock *, const BasicBlock *\&gt;" alt="" coords="896,3348,1160,3448"/>
<area shape="rect" id="node36" href="$structllvm_1_1BranchInst_1_1const__succ__op__iterator.html" title="The const version of succ_op_iterator. " alt="" coords="1258,3341,1415,3383"/>
<area shape="rect" id="node37" href="$structllvm_1_1IndirectBrInst_1_1const__succ__op__iterator.html" title="The const version of succ_op_iterator. " alt="" coords="1254,3407,1419,3448"/>
<area shape="rect" id="node39" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; const_symbol_iterator,\l SymbolMapType::const_iterator,\l std::forward_iterator_tag, const\l Symbol *, ptrdiff_t, const Symbol\l *, const Symbol *\&gt;" alt="" coords="919,3472,1137,3572"/>
<area shape="rect" id="node40" href="$structllvm_1_1MachO_1_1InterfaceFile_1_1const__symbol__iterator.html" title="llvm::MachO::InterfaceFile\l::const_symbol_iterator" alt="" coords="1249,3501,1425,3543"/>
<area shape="rect" id="node42" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; const_value_iterator,\l ListTy::const_iterator, std\l::forward_iterator_tag, const\l DIEValue \&gt;" alt="" coords="933,3670,1123,3755"/>
<area shape="rect" id="node43" href="$classllvm_1_1DIEValueList_1_1const__value__iterator.html" title="llvm::DIEValueList\l::const_value_iterator" alt="" coords="1263,3692,1410,3733"/>
<area shape="rect" id="node45" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; const_value_op\l_iterator, const_op_iterator,\l std::random_access_iterator\l_tag, const Value *, ptrdiff\l_t, const Value *, const Value *\&gt;" alt="" coords="921,3860,1135,3960"/>
<area shape="rect" id="node46" href="$structllvm_1_1User_1_1const__value__op__iterator.html" title="llvm::User::const_value\l_op_iterator" alt="" coords="1257,3889,1417,3931"/>
<area shape="rect" id="node48" href="$classllvm_1_1pdb_1_1DbiModuleSourceFilesIterator.html" title="llvm::pdb::DbiModuleSource\lFilesIterator" alt="" coords="935,3999,1121,4040"/>
<area shape="rect" id="node50" href="$structllvm_1_1def__chain__iterator.html" title="Walks the defining accesses of MemoryDefs. " alt="" coords="939,4101,1117,4143"/>
<area shape="rect" id="node52" href="$classllvm_1_1StringMapIterBase.html" title="llvm::StringMapIterBase\l\&lt; DerivedTy, ValueTy \&gt;" alt="" coords="947,4204,1109,4245"/>
<area shape="rect" id="node54" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; early_inc_iterator\l_impl\&lt; WrappedIteratorT \&gt;\l, WrappedIteratorT, std::input\l_iterator_tag \&gt;" alt="" coords="931,4394,1125,4479"/>
<area shape="rect" id="node55" href="$classllvm_1_1early__inc__iterator__impl.html" title="A pseudo&#45;iterator adaptor that is designed to implement &quot;early increment&quot; style loops. " alt="" coords="1247,4416,1426,4457"/>
<area shape="rect" id="node57" href="$classllvm_1_1detail_1_1enumerator__iter.html" title="llvm::detail::enumerator\l_iter\&lt; R \&gt;" alt="" coords="949,4665,1107,4707"/>
<area shape="rect" id="node59" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l WrappedIteratorT, std::common\l_type\&lt; IterTag, std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::iterator\l_category \&gt;::type \&gt;" alt="" coords="913,4877,1143,5007"/>
<area shape="rect" id="node60" href="$classllvm_1_1filter__iterator__base.html" title="An iterator adaptor that filters the elements of given inner iterators. " alt="" coords="1249,4914,1424,4970"/>
<area shape="rect" id="node61" href="$classllvm_1_1filter__iterator__impl.html" title="Specialization of filter_iterator_base for forward iteration only. " alt="" coords="1501,4914,1672,4970"/>
<area shape="rect" id="node63" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;, WrappedIteratorT,\l std::common_type\&lt; std::bidirectional\l_iterator_tag, std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::iterator_category \&gt;::type \&gt;" alt="" coords="873,5229,1183,5359"/>
<area shape="rect" id="node64" href="$classllvm_1_1filter__iterator__base.html" title="llvm::filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;" alt="" coords="1241,5259,1433,5329"/>
<area shape="rect" id="node65" href="$classllvm_1_1filter__iterator__impl_3_01WrappedIteratorT_00_01PredicateT_00_01std_1_1bidirectional__iterator__tag_01_4.html" title="Specialization of filter_iterator_base for bidirectional iteration. " alt="" coords="1491,5259,1683,5329"/>
<area shape="rect" id="node67" href="$classllvm_1_1FixedStreamArrayIterator.html" title="llvm::FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt;" alt="" coords="928,5500,1128,5541"/>
<area shape="rect" id="node69" href="$classllvm_1_1FixedStreamArrayIterator.html" title="llvm::FixedStreamArrayIterator\&lt; T \&gt;" alt="" coords="912,5602,1144,5629"/>
<area shape="rect" id="node71" href="$classllvm_1_1coverage_1_1FunctionRecordIterator.html" title="Iterator over Functions, optionally filtered to a single file. " alt="" coords="945,5689,1111,5731"/>
<area shape="rect" id="node73" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; GSIHashIterator,\l FixedStreamArrayIterator\l\&lt; PSHashRecord \&gt;, std::random\l_access_iterator_tag, const\l uint32_t \&gt;" alt="" coords="921,5849,1135,5949"/>
<area shape="rect" id="node74" href="$classllvm_1_1pdb_1_1GSIHashIterator.html" title="Iterator over hash records producing symbol record offsets. " alt="" coords="1247,5886,1426,5913"/>
<area shape="rect" id="node76" href="$classllvm_1_1pdb_1_1HashTableIterator.html" title="llvm::pdb::HashTableIterator\l\&lt; ValueT \&gt;" alt="" coords="935,6076,1121,6117"/>
<area shape="rect" id="node78" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; ImutAVLValueIterator\l\&lt; ImmutableMap \&gt;, ImmutableMap\l ::TreeTy::iterator, std::iterator\l_traits\&lt; ImmutableMap ::TreeTy::iterator\l \&gt;::iterator_category, const ImmutableMap\l ::value_type \&gt;" alt="" coords="893,6251,1163,6366"/>
<area shape="rect" id="node79" href="$structllvm_1_1ImutAVLValueIterator.html" title="llvm::ImutAVLValueIterator\l\&lt; ImmutableMap \&gt;" alt="" coords="1247,6288,1426,6329"/>
<area shape="rect" id="node80" href="$classllvm_1_1ImmutableMap_1_1iterator.html" title="llvm::ImmutableMap\l\&lt; KeyT, ValT, ValInfo\l \&gt;::iterator" alt="" coords="1512,6281,1661,6337"/>
<area shape="rect" id="node82" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; ImutAVLValueIterator\l\&lt; ImmutableMapRef \&gt;, ImmutableMapRef\l ::TreeTy::iterator, std::iterator\l_traits\&lt; ImmutableMapRef ::TreeTy\l::iterator \&gt;::iterator_category, const\l ImmutableMapRef ::value_type \&gt;" alt="" coords="894,6566,1162,6681"/>
<area shape="rect" id="node83" href="$structllvm_1_1ImutAVLValueIterator.html" title="llvm::ImutAVLValueIterator\l\&lt; ImmutableMapRef \&gt;" alt="" coords="1247,6603,1426,6644"/>
<area shape="rect" id="node84" href="$classllvm_1_1ImmutableMapRef_1_1iterator.html" title="llvm::ImmutableMapRef\l\&lt; KeyT, ValT, ValInfo\l \&gt;::iterator" alt="" coords="1506,6595,1667,6651"/>
<area shape="rect" id="node86" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; ImutAVLValueIterator\l\&lt; T \&gt;, T::TreeTy::iterator,\l std::iterator_traits\&lt; T::TreeTy\l::iterator \&gt;::iterator_category,\l const T::value_type \&gt;" alt="" coords="929,6873,1127,6973"/>
<area shape="rect" id="node87" href="$structllvm_1_1ImutAVLValueIterator.html" title="Generic iterator that wraps a T::TreeTy::iterator and exposes iterator::getValue() on dereference..." alt="" coords="1231,6910,1442,6937"/>
<area shape="rect" id="node89" href="$classllvm_1_1DWARFDie_1_1iterator.html" title="llvm::DWARFDie::iterator" alt="" coords="942,7101,1114,7127"/>
<area shape="rect" id="node91" href="$classllvm_1_1Registry_1_1iterator.html" title="Iterators for registry entries. " alt="" coords="961,7188,1095,7229"/>
<area shape="rect" id="node93" href="$classllvm_1_1DWARFExpression_1_1iterator.html" title="An iterator to go through the expression operations. " alt="" coords="943,7283,1113,7324"/>
<area shape="rect" id="node95" href="$classllvm_1_1IntrusiveBackList_1_1iterator.html" title="llvm::IntrusiveBackList\l\&lt; T \&gt;::iterator" alt="" coords="951,7371,1105,7412"/>
<area shape="rect" id="node97" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; iterator, VectorImplT\l::iterator, std::forward_iterator_tag \&gt;" alt="" coords="913,7590,1143,7646"/>
<area shape="rect" id="node98" href="$classllvm_1_1LazyCallGraph_1_1EdgeSequence_1_1iterator.html" title="An iterator used for the edges to both entry nodes and child nodes. " alt="" coords="1253,7597,1420,7639"/>
<area shape="rect" id="node100" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; IteratorImpl\&lt; ValueT,\l IteratorBase \&gt;, IteratorBase,\l std::bidirectional_iterator\l_tag, ValueT \&gt;" alt="" coords="932,7890,1124,7975"/>
<area shape="rect" id="node102" href="$classllvm_1_1coverage_1_1LineCoverageIterator.html" title="An iterator over the LineCoverageStats objects for lines described by a CoverageData instance..." alt="" coords="931,8088,1125,8129"/>
<area shape="rect" id="node104" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; mapped_iterator\l\&lt; ItTy, FuncTy \&gt;, ItTy,\l std::iterator_traits\&lt; ItTy\l \&gt;::iterator_category, std\l::remove_reference\&lt; FuncReturnTy\l \&gt;::type \&gt;" alt="" coords="913,8257,1143,8371"/>
<area shape="rect" id="node105" href="$classllvm_1_1mapped__iterator.html" title="llvm::mapped_iterator\l\&lt; ItTy, FuncTy, FuncReturnTy \&gt;" alt="" coords="1231,8293,1443,8335"/>
<area shape="rect" id="node107" href="$classllvm_1_1MCRegisterInfo_1_1mc__difflist__iterator.html" title="llvm::MCRegisterInfo\l::mc_difflist_iterator\l\&lt; mc_subreg_iterator \&gt;" alt="" coords="949,8491,1107,8547"/>
<area shape="rect" id="node108" href="$classllvm_1_1MCRegisterInfo_1_1mc__subreg__iterator.html" title="Forward iterator over all sub&#45;registers. " alt="" coords="1263,8499,1410,8540"/>
<area shape="rect" id="node110" href="$classllvm_1_1MCRegisterInfo_1_1mc__difflist__iterator.html" title="llvm::MCRegisterInfo\l::mc_difflist_iterator\l\&lt; mc_superreg_iterator \&gt;" alt="" coords="944,8594,1112,8650"/>
<area shape="rect" id="node111" href="$classllvm_1_1MCRegisterInfo_1_1mc__superreg__iterator.html" title="Forward iterator over all super&#45;registers. " alt="" coords="1261,8601,1413,8643"/>
<area shape="rect" id="node113" href="$classllvm_1_1MCRegisterInfo_1_1mc__difflist__iterator.html" title="Forward iterator using DiffListIterator. " alt="" coords="955,8697,1101,8753"/>
<area shape="rect" id="node115" href="$classllvm_1_1memoryaccess__def__iterator__base.html" title="llvm::memoryaccess\l_def_iterator_base\&lt;\l MemoryAccess \&gt;" alt="" coords="957,8806,1099,8862"/>
<area shape="rect" id="node117" href="$classllvm_1_1memoryaccess__def__iterator__base.html" title="Iterator base class used to implement const and non&#45;const iterators over the defining accesses of a M..." alt="" coords="947,8931,1109,8972"/>
<area shape="rect" id="node119" href="$classllvm_1_1object_1_1MinidumpFile_1_1MemoryInfoIterator.html" title="llvm::object::MinidumpFile\l::MemoryInfoIterator" alt="" coords="941,9033,1115,9075"/>
<area shape="rect" id="node121" href="$classllvm_1_1MIBundleOperandIteratorBase.html" title="llvm::MIBundleOperandIterator\lBase\&lt; const MachineOperand \&gt;" alt="" coords="923,9136,1133,9177"/>
<area shape="rect" id="node122" href="$classllvm_1_1ConstMIBundleOperands.html" title="ConstMIBundleOperands &#45; Iterate over all operands in a const bundle of machine instructions. " alt="" coords="1237,9143,1437,9170"/>
<area shape="rect" id="node124" href="$classllvm_1_1MIBundleOperandIteratorBase.html" title="llvm::MIBundleOperandIterator\lBase\&lt; MachineOperand \&gt;" alt="" coords="929,9239,1127,9280"/>
<area shape="rect" id="node125" href="$classllvm_1_1MIBundleOperands.html" title="MIBundleOperands &#45; Iterate over all operands in a bundle of machine instructions. ..." alt="" coords="1254,9246,1419,9273"/>
<area shape="rect" id="node127" href="$classllvm_1_1MIBundleOperandIteratorBase.html" title="MIBundleOperandIteratorBase &#45; Iterator that visits all operands in a bundle of MachineInstrs. " alt="" coords="929,9333,1127,9375"/>
<area shape="rect" id="node129" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; NeighborEdgeIteratorT\l\&lt; IsConst, IsOut \&gt;, BaseIt,\l std::iterator_traits\&lt; BaseIt\l \&gt;::iterator_category, T \&gt;" alt="" coords="928,9487,1128,9573"/>
<area shape="rect" id="node131" href="$classllvm_1_1jitlink_1_1LinkGraph_1_1nested__collection__iterator.html" title="llvm::jitlink::LinkGraph\l::nested_collection_iterator\l\&lt; OuterItrT, InnerItrT, T,\l getInnerRange \&gt;" alt="" coords="939,9677,1117,9748"/>
<area shape="rect" id="node133" href="$classAllocaSlices_1_1partition__iterator.html" title="An iterator over partitions of the alloca&#39;s slices. " alt="" coords="954,9795,1102,9836"/>
<area shape="rect" id="node135" href="$classllvm_1_1BasicBlock_1_1phi__iterator__impl.html" title="Iterator to walk just the phi nodes in the basic block. " alt="" coords="939,9890,1117,9946"/>
<area shape="rect" id="node137" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; pointee_iterator\l\&lt; WrappedIteratorT, T \&gt;,\l WrappedIteratorT, std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::iterator\l_category, T \&gt;" alt="" coords="913,10059,1143,10159"/>
<area shape="rect" id="node138" href="$structllvm_1_1pointee__iterator.html" title="An iterator type that allows iterating over the pointees via some other iterator. ..." alt="" coords="1255,10088,1418,10129"/>
<area shape="rect" id="node140" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; pointer_iterator\l\&lt; WrappedIteratorT, T \&gt;,\l WrappedIteratorT, std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::iterator\l_category, T \&gt;" alt="" coords="913,10329,1143,10429"/>
<area shape="rect" id="node141" href="$classllvm_1_1pointer__iterator.html" title="llvm::pointer_iterator\l\&lt; WrappedIteratorT, T \&gt;" alt="" coords="1255,10359,1418,10400"/>
<area shape="rect" id="node143" href="$classllvm_1_1LazyCallGraph_1_1postorder__ref__scc__iterator.html" title="A post&#45;order depth&#45;first RefSCC iterator over the call graph. " alt="" coords="958,10534,1098,10590"/>
<area shape="rect" id="node145" href="$classllvm_1_1sys_1_1path_1_1reverse__iterator.html" title="Reverse path iterator. " alt="" coords="949,10636,1107,10677"/>
<area shape="rect" id="node147" href="$classstd_1_1reverse__iterator_3_01llvm_1_1DWARFDie_1_1iterator_01_4.html" title="std::reverse_iterator\l\&lt; llvm::DWARFDie::iterator \&gt;" alt="" coords="930,10739,1126,10780"/>
<area shape="rect" id="node149" href="$classllvm_1_1scc__iterator.html" title="Enumerate the SCCs of a directed graph in reverse topological order of the SCC DAG. " alt="" coords="967,10848,1089,10889"/>
<area shape="rect" id="node151" href="$classllvm_1_1SmallSetIterator.html" title="SmallSetIterator &#45; This class implements a const_iterator for SmallSet by delegating to the underlyin..." alt="" coords="954,10951,1102,10992"/>
<area shape="rect" id="node153" href="$classllvm_1_1StringMapIterBase.html" title="llvm::StringMapIterBase\l\&lt; StringMapConstIterator\l\&lt; ValueTy \&gt;, const StringMapEntry\l\&lt; ValueTy \&gt; \&gt;" alt="" coords="914,11039,1142,11109"/>
<area shape="rect" id="node154" href="$classllvm_1_1StringMapConstIterator.html" title="llvm::StringMapConstIterator\l\&lt; ValueTy \&gt;" alt="" coords="1242,11053,1431,11095"/>
<area shape="rect" id="node156" href="$classllvm_1_1StringMapIterBase.html" title="llvm::StringMapIterBase\l\&lt; StringMapIterator\&lt; ValueTy\l \&gt;, StringMapEntry\&lt; ValueTy \&gt; \&gt;" alt="" coords="920,11155,1136,11211"/>
<area shape="rect" id="node157" href="$classllvm_1_1StringMapIterator.html" title="llvm::StringMapIterator\l\&lt; ValueTy \&gt;" alt="" coords="1259,11163,1414,11204"/>
<area shape="rect" id="node159" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; StringMapKeyIterator\l\&lt; ValueTy \&gt;, StringMapConstIterator\l\&lt; ValueTy \&gt;, std::forward_iterator\l_tag, StringRef \&gt;" alt="" coords="909,11331,1147,11417"/>
<area shape="rect" id="node160" href="$classllvm_1_1StringMapKeyIterator.html" title="llvm::StringMapKeyIterator\l\&lt; ValueTy \&gt;" alt="" coords="1248,11353,1425,11395"/>
<area shape="rect" id="node162" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; succ_op_iterator,\l value_op_iterator, std\l::random_access_iterator\l_tag, BasicBlock *, ptrdiff\l_t, BasicBlock *, BasicBlock *\&gt;" alt="" coords="925,11515,1131,11615"/>
<area shape="rect" id="node163" href="$structllvm_1_1BranchInst_1_1succ__op__iterator.html" title="Iterator type that casts an operand to a basic block. " alt="" coords="1260,11511,1413,11552"/>
<area shape="rect" id="node164" href="$structllvm_1_1IndirectBrInst_1_1succ__op__iterator.html" title="Iterator type that casts an operand to a basic block. " alt="" coords="1271,11576,1403,11617"/>
<area shape="rect" id="node166" href="$classllvm_1_1SuccIterator.html" title="llvm::SuccIterator\l\&lt; InstructionT, BlockT \&gt;" alt="" coords="946,11661,1110,11703"/>
<area shape="rect" id="node168" href="$classllvm_1_1upward__defs__iterator.html" title="Provide an iterator that walks defs, giving both the memory access, and the current pointer location..." alt="" coords="941,11778,1115,11805"/>
<area shape="rect" id="node170" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; value_iterator,\l ListTy::iterator, std\l::forward_iterator_tag,\l DIEValue \&gt;" alt="" coords="953,11931,1103,12017"/>
<area shape="rect" id="node171" href="$classllvm_1_1DIEValueList_1_1value__iterator.html" title="llvm::DIEValueList\l::value_iterator" alt="" coords="1271,11953,1402,11995"/>
<area shape="rect" id="node173" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; value_op_iterator,\l op_iterator, std::random\l_access_iterator_tag, SDValue,\l ptrdiff_t, value_op_iterator\l *, value_op_iterator *\&gt;" alt="" coords="925,12111,1131,12211"/>
<area shape="rect" id="node174" href="$structllvm_1_1SDNode_1_1value__op__iterator.html" title="Iterator for directly iterating over the operand SDValue&#39;s. " alt="" coords="1265,12140,1408,12181"/>
<area shape="rect" id="node176" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; value_op_iterator,\l op_iterator, std::random\l_access_iterator_tag, Value\l *, ptrdiff_t, Value *, Value *\&gt;" alt="" coords="933,12235,1123,12321"/>
<area shape="rect" id="node177" href="$structllvm_1_1User_1_1value__op__iterator.html" title="Iterator for directly iterating over the operand Values. " alt="" coords="1265,12257,1408,12299"/>
<area shape="rect" id="node179" href="$classllvm_1_1detail_1_1value__sequence__iterator.html" title="llvm::detail::value\l_sequence_iterator\&lt;\l ValueT \&gt;" alt="" coords="958,12355,1098,12411"/>
<area shape="rect" id="node181" href="$classllvm_1_1VarStreamArrayIterator.html" title="VarStreamArray represents an array of variable length records backed by a stream. ..." alt="" coords="934,12472,1122,12513"/>
<area shape="rect" id="node183" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; WrappedPairNodeDataIterator\l\&lt; ItType, NodeRef, DataRef \&gt;,\l ItType, std::iterator_traits\l\&lt; ItType \&gt;::iterator_category,\l NodeRef, std::ptrdiff_t, NodeRef\l *, NodeRef &amp;\&gt;" alt="" coords="906,12549,1150,12663"/>
<area shape="rect" id="node184" href="$classllvm_1_1WrappedPairNodeDataIterator.html" title="llvm::WrappedPairNodeData\lIterator\&lt; ItType, NodeRef,\l DataRef \&gt;" alt="" coords="1243,12578,1431,12634"/>
<area shape="rect" id="node186" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; WrappedSuccIterator,\l succ_iterator, std::iterator\l_traits\&lt; succ_iterator \&gt;::iterator\l_category, NodeRef, std::ptrdiff\l_t, NodeRef *, NodeRef \&gt;" alt="" coords="925,12688,1131,12788"/>
<area shape="rect" id="node187" href="$classllvm_1_1LoopBodyTraits_1_1WrappedSuccIterator.html" title="llvm::LoopBodyTraits\l::WrappedSuccIterator" alt="" coords="1260,12717,1413,12759"/>
<area shape="rect" id="node189" href="$classllvm_1_1detail_1_1zip__longest__iterator.html" title="llvm::detail::zip_longest\l_iterator\&lt; Iters \&gt;" alt="" coords="949,12881,1107,12923"/>
<area shape="rect" id="node204" href="$classllvm_1_1IntervalMap_1_1iterator.html" title="llvm::IntervalMap\&lt;\l KeyT, ValT, N, Traits\l \&gt;::iterator" alt="" coords="953,439,1103,495"/>
<area shape="rect" id="node206" href="$structllvm_1_1detail_1_1zip__common.html" title="llvm::detail::zip_common\l\&lt; ZipType, Iters \&gt;" alt="" coords="945,600,1111,641"/>
<area shape="rect" id="node207" href="$classllvm_1_1iterator__adaptor__base.html" title="CRTP base class for adapting an iterator to a different type. " alt="" coords="901,665,1155,736"/>
<area shape="rect" id="node208" href="$structllvm_1_1detail_1_1zip__common.html" title="llvm::detail::zip_common\l\&lt; zip_first\&lt; Iters... \&gt;\l, Iters... \&gt;" alt="" coords="945,761,1111,817"/>
<area shape="rect" id="node210" href="$structllvm_1_1detail_1_1zip__common.html" title="llvm::detail::zip_common\l\&lt; zip_shortest\&lt; Iters...\l \&gt;, Iters... \&gt;" alt="" coords="945,519,1111,575"/>
<area shape="rect" id="node209" href="$structllvm_1_1detail_1_1zip__first.html" title="llvm::detail::zip_first\l\&lt; Iters \&gt;" alt="" coords="1267,768,1406,809"/>
<area shape="rect" id="node211" href="$classllvm_1_1detail_1_1zip__shortest.html" title="llvm::detail::zip_shortest\l\&lt; Iters \&gt;" alt="" coords="1255,527,1419,568"/>
<area shape="rect" id="node218" href="$classllvm_1_1object_1_1elf__relocation__iterator.html" title="llvm::object::elf_relocation\l_iterator" alt="" coords="941,1068,1115,1109"/>
<area shape="rect" id="node219" href="$classllvm_1_1object_1_1elf__section__iterator.html" title="llvm::object::elf_section\l_iterator" alt="" coords="948,1133,1108,1175"/>
<area shape="rect" id="node220" href="$classllvm_1_1object_1_1symbol__iterator.html" title="llvm::object::symbol\l_iterator" alt="" coords="959,1003,1097,1044"/>
<area shape="rect" id="node221" href="$classllvm_1_1object_1_1elf__symbol__iterator.html" title="llvm::object::elf_symbol\l_iterator" alt="" coords="1257,1003,1417,1044"/>
<area shape="rect" id="node237" href="$structllvm_1_1ipo__iterator.html" title="llvm::ipo_iterator\l\&lt; T, SetType, true \&gt;" alt="" coords="957,13860,1099,13901"/>
<area shape="rect" id="node239" href="$structllvm_1_1ipo__iterator.html" title="llvm::ipo_iterator\l\&lt; T, SetType, External \&gt;" alt="" coords="945,13925,1111,13967"/>
<area shape="rect" id="node238" href="$structllvm_1_1ipo__ext__iterator.html" title="llvm::ipo_ext_iterator\l\&lt; T, SetType \&gt;" alt="" coords="1265,13860,1408,13901"/>
<area shape="rect" id="node241" href="$structllvm_1_1po__ext__iterator.html" title="llvm::po_ext_iterator\l\&lt; T, SetType \&gt;" alt="" coords="958,13791,1098,13832"/>
<area shape="rect" id="node243" href="$classllvm_1_1po__iterator__storage.html" title="llvm::po_iterator_storage\l\&lt; SetType, ExtStorage \&gt;" alt="" coords="41,13791,209,13832"/>
</map>
