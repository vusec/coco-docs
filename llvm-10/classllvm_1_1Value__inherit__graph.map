<map id="llvm::Value" name="llvm::Value">
<area shape="rect" id="node2" href="$classllvm_1_1Argument.html" title="This class represents an incoming formal argument to a Function. " alt="" coords="163,385,274,412"/>
<area shape="rect" id="node3" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation. " alt="" coords="159,436,279,463"/>
<area shape="rect" id="node4" href="$classllvm_1_1InlineAsm.html" title="llvm::InlineAsm" alt="" coords="163,487,275,513"/>
<area shape="rect" id="node5" href="$classllvm_1_1MetadataAsValue.html" title="Metadata wrapper in the Value hierarchy. " alt="" coords="140,537,297,564"/>
<area shape="rect" id="node6" href="$classllvm_1_1User.html" title="llvm::User" alt="" coords="177,588,260,615"/>
<area shape="rect" id="node7" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM. " alt="" coords="355,132,462,159"/>
<area shape="rect" id="node13" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy. " alt="" coords="345,423,472,449"/>
<area shape="rect" id="node15" href="$classllvm_1_1Instruction.html" title="llvm::Instruction" alt="" coords="351,917,466,944"/>
<area shape="rect" id="node42" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="357,1841,461,1868"/>
<area shape="rect" id="node8" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block. " alt="" coords="558,5,693,32"/>
<area shape="rect" id="node9" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands). " alt="" coords="542,56,709,83"/>
<area shape="rect" id="node10" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands. " alt="" coords="558,107,693,133"/>
<area shape="rect" id="node11" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values. " alt="" coords="558,157,693,184"/>
<area shape="rect" id="node12" href="$classllvm_1_1GlobalValue.html" title="llvm::GlobalValue" alt="" coords="563,208,687,235"/>
<area shape="rect" id="node14" href="$classllvm_1_1MemoryAccess.html" title="llvm::MemoryAccess" alt="" coords="553,259,698,285"/>
<area shape="rect" id="node16" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location, and, if it is, stores a new value there. " alt="" coords="538,309,713,336"/>
<area shape="rect" id="node17" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value, and then stores the result back. " alt="" coords="550,360,701,387"/>
<area shape="rect" id="node18" href="$classllvm_1_1BinaryOperator.html" title="llvm::BinaryOperator" alt="" coords="555,411,696,437"/>
<area shape="rect" id="node19" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction. " alt="" coords="567,461,684,488"/>
<area shape="rect" id="node20" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="572,512,679,539"/>
<area shape="rect" id="node21" href="$classllvm_1_1CatchReturnInst.html" title="llvm::CatchReturnInst" alt="" coords="550,563,701,589"/>
<area shape="rect" id="node22" href="$classllvm_1_1CatchSwitchInst.html" title="llvm::CatchSwitchInst" alt="" coords="550,613,701,640"/>
<area shape="rect" id="node23" href="$classllvm_1_1CleanupReturnInst.html" title="llvm::CleanupReturnInst" alt="" coords="544,664,707,691"/>
<area shape="rect" id="node24" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions. " alt="" coords="573,715,677,741"/>
<area shape="rect" id="node25" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value. " alt="" coords="542,765,709,792"/>
<area shape="rect" id="node26" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations. " alt="" coords="569,816,681,843"/>
<area shape="rect" id="node27" href="$classllvm_1_1FuncletPadInst.html" title="llvm::FuncletPadInst" alt="" coords="554,867,697,893"/>
<area shape="rect" id="node28" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs ..." alt="" coords="544,917,707,944"/>
<area shape="rect" id="node29" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction. " alt="" coords="559,968,691,995"/>
<area shape="rect" id="node30" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value. " alt="" coords="547,1019,704,1045"/>
<area shape="rect" id="node31" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value. " alt="" coords="554,1069,697,1096"/>
<area shape="rect" id="node32" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="553,1120,697,1147"/>
<area shape="rect" id="node33" href="$classllvm_1_1PHINode.html" title="llvm::PHINode" alt="" coords="571,1171,679,1197"/>
<area shape="rect" id="node34" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception. " alt="" coords="563,1221,688,1248"/>
<area shape="rect" id="node35" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function. " alt="" coords="568,1272,683,1299"/>
<area shape="rect" id="node36" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction. " alt="" coords="569,1323,682,1349"/>
<area shape="rect" id="node37" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors. " alt="" coords="548,1373,703,1400"/>
<area shape="rect" id="node38" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory. " alt="" coords="572,1424,679,1451"/>
<area shape="rect" id="node39" href="$classllvm_1_1SwitchInst.html" title="Multiway switch. " alt="" coords="567,1475,683,1501"/>
<area shape="rect" id="node40" href="$classllvm_1_1UnaryInstruction.html" title="llvm::UnaryInstruction" alt="" coords="550,1525,701,1552"/>
<area shape="rect" id="node41" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior. " alt="" coords="551,1576,700,1603"/>
<area shape="rect" id="node43" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::BitCast \&gt;" alt="" coords="547,1627,704,1683"/>
<area shape="rect" id="node44" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::GetElementPtr \&gt;" alt="" coords="547,1707,704,1763"/>
<area shape="rect" id="node45" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::PtrToInt \&gt;" alt="" coords="547,1787,704,1843"/>
<area shape="rect" id="node46" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::ZExt \&gt;" alt="" coords="547,1867,704,1923"/>
<area shape="rect" id="node47" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="550,1947,701,1973"/>
<area shape="rect" id="node48" href="$classllvm_1_1OverflowingBinaryOperator.html" title="Utility class for integer operators which may exhibit overflow &#45; Add, Sub, Mul, and Shl..." alt="" coords="520,1997,731,2024"/>
<area shape="rect" id="node49" href="$classllvm_1_1PossiblyExactOperator.html" title="A udiv or sdiv instruction, which can be marked as &quot;exact&quot;, indicating that no bits are destroyed..." alt="" coords="531,2048,719,2075"/>
</map>
