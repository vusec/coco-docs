<map id="llvm::WinEH::FrameInfo" name="llvm::WinEH::FrameInfo">
<area shape="rect" id="node3" href="$classllvm_1_1MapVector.html" title="llvm::MapVector\&lt; llvm\l::MCSymbol *, std::vector\l\&lt; llvm::WinEH::Instruction \&gt; \&gt;" alt="" coords="2701,71,2903,127"/>
<area shape="rect" id="node4" href="$classllvm_1_1MapVector.html" title="This class implements a map that also provides access to all stored values in a deterministic order..." alt="" coords="2283,79,2499,120"/>
<area shape="rect" id="node6" href="$classbool.html" title="bool" alt="" coords="2001,269,2047,295"/>
<area shape="rect" id="node14" href="$classllvm_1_1MCFragment.html" title="llvm::MCFragment" alt="" coords="2325,406,2456,433"/>
<area shape="rect" id="node7" href="$classllvm_1_1MCSection.html" title="Instances of this class represent a uniqued identifier for a section in the current translation unit..." alt="" coords="2743,253,2861,279"/>
<area shape="rect" id="node8" href="$classllvm_1_1SectionKind.html" title="SectionKind &#45; This is a simple POD value that classifies the properties of a section. " alt="" coords="2329,303,2453,330"/>
<area shape="rect" id="node10" href="$classllvm_1_1MCSymbol.html" title="MCSymbol &#45; Instances of this class represent a symbol name in the MC file, and MCSymbols are created ..." alt="" coords="2743,494,2861,521"/>
<area shape="rect" id="node11" href="$classllvm_1_1MCExpr.html" title="Base class for the full range of assembler expressions which are needed for parsing. " alt="" coords="2339,763,2442,790"/>
<area shape="rect" id="node15" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; MCFragment,\l MCSection \&gt;" alt="" coords="1945,375,2103,431"/>
<area shape="rect" id="node16" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; MCFragment,\l Options... \&gt;" alt="" coords="1275,357,1476,399"/>
<area shape="rect" id="node17" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MCFragment,\l Options... \&gt;::type \&gt;" alt="" coords="676,291,875,361"/>
<area shape="rect" id="node19" href="$classllvm_1_1ilist__node__impl.html" title="Implementation for an ilist node. " alt="" coords="272,389,412,431"/>
<area shape="rect" id="node22" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; T, Options...\l \&gt;::type \&gt;" alt="" coords="680,385,871,456"/>
<area shape="rect" id="node26" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; NodeTy,\l Options... \&gt;::type \&gt;" alt="" coords="691,480,859,551"/>
<area shape="rect" id="node21" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; T,\l Options \&gt;" alt="" coords="924,400,1057,441"/>
<area shape="rect" id="node25" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; NodeTy,\l Options... \&gt;" alt="" coords="1290,423,1461,464"/>
<area shape="rect" id="node24" href="$classllvm_1_1ilist__node__with__parent.html" title="An ilist node that can access its parent list. " alt="" coords="1525,415,1713,471"/>
<area shape="rect" id="node28" href="$classllvm_1_1PointerIntPair.html" title="llvm::PointerIntPair\l\&lt; llvm::MCFragment *, 1 \&gt;" alt="" coords="2301,457,2480,499"/>
<area shape="rect" id="node29" href="$classllvm_1_1PointerIntPair.html" title="PointerIntPair &#45; This class implements a pair of a pointer and small integer. " alt="" coords="1939,455,2109,511"/>
<area shape="rect" id="node30" href="$classuint32__t.html" title="uint32_t" alt="" coords="2357,523,2425,550"/>
<area shape="rect" id="node31" href="$classunsigned.html" title="unsigned" alt="" coords="2353,713,2428,739"/>
</map>
