<map id="llvm::InstCombiner" name="llvm::InstCombiner">
<area shape="rect" id="node2" href="$classllvm_1_1InstVisitor.html" title="llvm::InstVisitor\&lt;\l InstCombiner, Instruction *\&gt;" alt="" coords="1992,5,2183,47"/>
<area shape="rect" id="node3" href="$classllvm_1_1InstVisitor.html" title="Base class for instruction visitors. " alt="" coords="1624,5,1763,47"/>
<area shape="rect" id="node19" href="$classllvm_1_1LLVMContextImpl.html" title="llvm::LLVMContextImpl" alt="" coords="859,1053,1017,1079"/>
<area shape="rect" id="node5" href="$classllvm_1_1IRBuilder.html" title="This provides a uniform API for creating instructions and inserting them into a basic block: either a..." alt="" coords="2021,656,2153,697"/>
<area shape="rect" id="node6" href="$classllvm_1_1IRBuilderBase.html" title="Common base class shared among various IRBuilders. " alt="" coords="1624,1822,1763,1849"/>
<area shape="rect" id="node7" href="$classllvm_1_1ArrayRef.html" title="llvm::ArrayRef\&lt; llvm\l::OperandBundleDefT \&gt;" alt="" coords="1244,1756,1404,1797"/>
<area shape="rect" id="node8" href="$classllvm_1_1ArrayRef.html" title="ArrayRef &#45; Represent a constant reference to an array (0 or more elements consecutively in memory)..." alt="" coords="869,1763,1007,1790"/>
<area shape="rect" id="node11" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation. " alt="" coords="878,2003,998,2030"/>
<area shape="rect" id="node12" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="470,2003,557,2030"/>
<area shape="rect" id="node13" href="$classunsigned.html" title="unsigned" alt="" coords="63,954,138,981"/>
<area shape="rect" id="node21" href="$classllvm_1_1Type.html" title="The instances of the Type class are immutable: once they are created, they are never changed..." alt="" coords="472,438,555,465"/>
<area shape="rect" id="node48" href="$classllvm_1_1Metadata.html" title="Root of the metadata hierarchy. " alt="" coords="459,2054,567,2081"/>
<area shape="rect" id="node14" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; BasicBlock,\l Function \&gt;" alt="" coords="440,2105,587,2161"/>
<area shape="rect" id="node15" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; BasicBlock,\l Options... \&gt;" alt="" coords="5,2139,196,2180"/>
<area shape="rect" id="node16" href="$classllvm_1_1ilist__node__with__parent.html" title="An ilist node that can access its parent list. " alt="" coords="7,2058,195,2114"/>
<area shape="rect" id="node17" href="$classbool.html" title="bool" alt="" coords="490,1953,537,1979"/>
<area shape="rect" id="node18" href="$classllvm_1_1LLVMContext.html" title="This is an important class for using LLVM in a threaded context. " alt="" coords="1257,1383,1391,1410"/>
<area shape="rect" id="node20" href="$classllvm_1_1BumpPtrAllocatorImpl.html" title="Allocate memory in an ever growing pool, as if by bump&#45;pointer. " alt="" coords="423,815,604,871"/>
<area shape="rect" id="node22" href="$classllvm_1_1StringMap.html" title="llvm::StringMap\&lt; llvm\l::ConstantDataSequential *\&gt;" alt="" coords="419,896,608,937"/>
<area shape="rect" id="node23" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; llvm\l::Value *, llvm::ValueAsMetadata *\&gt;" alt="" coords="397,961,629,1003"/>
<area shape="rect" id="node24" href="$classllvm_1_1FoldingSet.html" title="llvm::FoldingSet\&lt; llvm\l::AttributeListImpl \&gt;" alt="" coords="437,1027,589,1068"/>
<area shape="rect" id="node25" href="$classllvm_1_1SmallPtrSet.html" title="llvm::SmallPtrSet\&lt;\l llvm::Module *, 4 \&gt;" alt="" coords="445,1092,581,1133"/>
<area shape="rect" id="node26" href="$classllvm_1_1StringMap.html" title="llvm::StringMap\&lt; uint32_t \&gt;" alt="" coords="422,1158,605,1185"/>
<area shape="rect" id="node27" href="$classllvm_1_1DenseSet.html" title="llvm::DenseSet\&lt; Function\lType *, FunctionTypeKeyInfo \&gt;" alt="" coords="411,1209,615,1251"/>
<area shape="rect" id="node28" href="$classllvm_1_1ConstantUniqueMap.html" title="llvm::ConstantUniqueMap\l\&lt; ConstantStruct \&gt;" alt="" coords="427,1275,600,1316"/>
<area shape="rect" id="node29" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; const\l llvm::Function *, std\l::string \&gt;" alt="" coords="433,1341,594,1397"/>
<area shape="rect" id="node30" href="$classllvm_1_1OptPassGate.html" title="Extensions to this class implement mechanisms to disable passes and individual optimizations at compi..." alt="" coords="447,1421,580,1447"/>
<area shape="rect" id="node31" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; std\l::pair\&lt; const char *,\l unsigned \&gt;, unsigned \&gt;" alt="" coords="432,1471,595,1527"/>
<area shape="rect" id="node32" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; const\l llvm::GlobalValue *,\l llvm::StringRef \&gt;" alt="" coords="433,1551,594,1607"/>
<area shape="rect" id="node33" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; llvm\l::PointerType *, std\l::unique_ptr\&lt; llvm::Constant\lPointerNull \&gt; \&gt;" alt="" coords="420,1632,607,1703"/>
<area shape="rect" id="node34" href="$classllvm_1_1Optional.html" title="llvm::Optional\&lt; llvm\l::DenseMap\&lt; const llvm\l::MDString *, llvm::DIComposite\lType *\&gt; \&gt;" alt="" coords="408,1727,619,1797"/>
<area shape="rect" id="node35" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; Value\l *, ValueHandleBase * \&gt;" alt="" coords="431,1821,595,1863"/>
<area shape="rect" id="node36" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; llvm\l::Type *, llvm::PointerType *\&gt;" alt="" coords="416,1887,611,1928"/>
<area shape="rect" id="node38" href="$classllvm_1_1StringMap.html" title="llvm::StringMap\&lt; SyncScope\l::ID \&gt;" alt="" coords="417,188,609,229"/>
<area shape="rect" id="node39" href="$classllvm_1_1DenseMap.html" title="llvm::DenseMap\&lt; std\l::pair\&lt; llvm::Type *,\l llvm::ElementCount \&gt;\l, llvm::VectorType *\&gt;" alt="" coords="437,253,590,324"/>
<area shape="rect" id="node40" href="$classllvm_1_1ConstantInt.html" title="This is the shared class of boolean and integer constants. " alt="" coords="452,349,575,375"/>
<area shape="rect" id="node41" href="$classllvm_1_1ConstantUniqueMap.html" title="llvm::ConstantUniqueMap\l\&lt; ConstantVector \&gt;" alt="" coords="427,489,600,531"/>
<area shape="rect" id="node43" href="$classllvm_1_1StringMap.html" title="llvm::StringMap\&lt; llvm\l::MDString, llvm::BumpPtrAllocator\lImpl \&gt;" alt="" coords="400,606,627,662"/>
<area shape="rect" id="node44" href="$classllvm_1_1FoldingSet.html" title="llvm::FoldingSet\&lt; llvm\l::AttributeImpl \&gt;" alt="" coords="437,687,589,728"/>
<area shape="rect" id="node46" href="$classllvm_1_1FastMathFlags.html" title="Convenience struct for specifying and reasoning about fast&#45;math flags. " alt="" coords="1253,1333,1395,1359"/>
<area shape="rect" id="node47" href="$classllvm_1_1MDNode.html" title="Metadata node. " alt="" coords="1077,2055,1184,2082"/>
<area shape="rect" id="node49" href="$classllvm_1_1Inserter.html" title="Inserter" alt="" coords="1660,1873,1727,1899"/>
<area shape="rect" id="node50" href="$classllvm_1_1InstCombineWorklist.html" title="InstCombineWorklist &#45; This is the worklist management logic for InstCombine. " alt="" coords="1999,722,2175,749"/>
</map>
