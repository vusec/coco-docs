<map id="llvm::RegisterPassParser&lt; RegistryClass &gt;" name="llvm::RegisterPassParser&lt; RegistryClass &gt;">
<area shape="rect" id="node2" href="$classllvm_1_1MachinePassRegistryListener.html" title="llvm::MachinePassRegistry\lListener\&lt; RegistryClass\l::FunctionPassCtor \&gt;" alt="" coords="4235,271,4417,327"/>
<area shape="rect" id="node3" href="$classllvm_1_1MachinePassRegistryListener.html" title="MachinePassRegistryListener &#45; Listener to adds and removals of nodes in registration list..." alt="" coords="3843,269,4026,311"/>
<area shape="rect" id="node4" href="$classllvm_1_1cl_1_1parser.html" title="llvm::cl::parser\&lt; Registry\lClass::FunctionPassCtor \&gt;" alt="" coords="4235,361,4417,403"/>
<area shape="rect" id="node5" href="$classllvm_1_1cl_1_1generic__parser__base.html" title="llvm::cl::generic_parser_base" alt="" coords="3599,470,3791,497"/>
<area shape="rect" id="node39" href="$classllvm_1_1cl_1_1parser.html" title="llvm::cl::parser\&lt; DataType \&gt;" alt="" coords="3840,437,4029,463"/>
<area shape="rect" id="node6" href="$classllvm_1_1cl_1_1Option.html" title="llvm::cl::Option" alt="" coords="3395,474,3505,501"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallPtrSet.html" title="llvm::SmallPtrSet\&lt;\l llvm::cl::SubCommand\l *, 1 \&gt;" alt="" coords="1340,509,1499,565"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallPtrSetImpl.html" title="llvm::SmallPtrSetImpl\l\&lt; llvm::cl::SubCommand * \&gt;" alt="" coords="939,457,1127,499"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallPtrSetImplBase.html" title="SmallPtrSetImplBase &#45; This is the common code shared among all the SmallPtrSet&lt;&gt;&#39;s, which is almost everything. " alt="" coords="313,423,492,450"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallPtrSetImpl.html" title="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..." alt="" coords="556,475,705,516"/>
<area shape="rect" id="node10" href="$classllvm_1_1DebugEpochBase.html" title="A base class for data structure classes wishing to make iterators (&quot;handles&quot;) pointing into themselve..." alt="" coords="5,398,164,425"/>
<area shape="rect" id="node12" href="$classunsigned.html" title="unsigned" alt="" coords="47,287,122,314"/>
<area shape="rect" id="node19" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="325,181,480,207"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallPtrSet.html" title="SmallPtrSet &#45; This class implements a set which is optimized for holding SmallSize or less elements..." alt="" coords="957,523,1108,564"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l llvm::cl::OptionCategory\l *, 1 \&gt;" alt="" coords="3092,219,3259,275"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; llvm::cl::OptionCategory * \&gt;" alt="" coords="2659,40,2855,81"/>
<area shape="rect" id="node17" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1539,5,1765,47"/>
<area shape="rect" id="node18" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="943,115,1122,156"/>
<area shape="rect" id="node23" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1811,100,1990,141"/>
<area shape="rect" id="node24" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1330,115,1509,156"/>
<area shape="rect" id="node36" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="2036,169,2215,225"/>
<area shape="rect" id="node21" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="541,173,720,215"/>
<area shape="rect" id="node22" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="2239,107,2421,134"/>
<area shape="rect" id="node31" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2691,211,2824,252"/>
<area shape="rect" id="node35" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; llvm::cl::parser::OptionInfo \&gt;" alt="" coords="2657,145,2857,187"/>
<area shape="rect" id="node25" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; llvm::cl::OptionCategory *, N \&gt;" alt="" coords="2650,277,2865,319"/>
<area shape="rect" id="node26" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; llvm::cl::OptionCategory *\&gt;" alt="" coords="1805,244,1997,285"/>
<area shape="rect" id="node27" href="$classchar.html" title="char" alt="" coords="1009,326,1056,353"/>
<area shape="rect" id="node28" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="1324,371,1515,412"/>
<area shape="rect" id="node30" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1789,321,2012,347"/>
<area shape="rect" id="node38" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; llvm::cl::parser::OptionInfo \&gt;" alt="" coords="1801,397,2001,439"/>
<area shape="rect" id="node29" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="2245,313,2415,355"/>
<area shape="rect" id="node37" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; llvm::cl::parser::OptionInfo, N \&gt;" alt="" coords="2648,371,2867,412"/>
<area shape="rect" id="node34" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l llvm::cl::parser::OptionInfo, 8 \&gt;" alt="" coords="3072,328,3279,369"/>
<area shape="rect" id="node32" href="$classllvm_1_1StringRef.html" title="StringRef &#45; Represent a constant reference to a string, i.e. " alt="" coords="3121,545,3230,571"/>
<area shape="rect" id="node33" href="$classsize__t.html" title="size_t" alt="" coords="2729,545,2786,571"/>
</map>
