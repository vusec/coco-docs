<map id="llvm::FoldingSetBase::Node" name="llvm::FoldingSetBase::Node">
<area shape="rect" id="node2" href="$classllvm_1_1AttributeImpl.html" title="llvm::AttributeImpl" alt="" coords="250,31,378,57"/>
<area shape="rect" id="node5" href="$classllvm_1_1AttributeListImpl.html" title="llvm::AttributeListImpl" alt="" coords="239,81,389,108"/>
<area shape="rect" id="node6" href="$classllvm_1_1AttributeSetNode.html" title="llvm::AttributeSetNode" alt="" coords="237,132,391,159"/>
<area shape="rect" id="node7" href="$classllvm_1_1BinOpInit.html" title="!op (X, Y) &#45; Combine two inits. " alt="" coords="260,183,368,209"/>
<area shape="rect" id="node8" href="$classllvm_1_1BitsInit.html" title="&#39;{ a, b, c }&#39; &#45; Represents an initializer for a BitsRecTy value. " alt="" coords="267,233,361,260"/>
<area shape="rect" id="node9" href="$classllvm_1_1CondOpInit.html" title="!cond(condition_1: value1, ... " alt="" coords="254,284,374,311"/>
<area shape="rect" id="node10" href="$classllvm_1_1DagInit.html" title="(v a, b) &#45; Represent a DAG tree value. " alt="" coords="266,335,362,361"/>
<area shape="rect" id="node11" href="$classllvm_1_1DIEAbbrev.html" title="Dwarf abbreviation, describes the organization of a debug information object. " alt="" coords="255,385,373,412"/>
<area shape="rect" id="node12" href="$classllvm_1_1FastFoldingSetNode.html" title="FastFoldingSetNode &#45; This is a subclass of FoldingSetNode which stores a FoldingSetNodeID value rathe..." alt="" coords="227,436,401,463"/>
<area shape="rect" id="node13" href="$classllvm_1_1FoldingSetNodeWrapper.html" title="FoldingSetNodeWrapper &#45; This template class is used to &quot;wrap&quot; arbitrary types in an enclosing object ..." alt="" coords="200,487,428,513"/>
<area shape="rect" id="node14" href="$classllvm_1_1FoldOpInit.html" title="!foldl (a, b, expr, start, lst) &#45; Fold over a list. " alt="" coords="257,537,371,564"/>
<area shape="rect" id="node15" href="$classllvm_1_1ImmutableListImpl.html" title="llvm::ImmutableListImpl\&lt; T \&gt;" alt="" coords="217,588,411,615"/>
<area shape="rect" id="node16" href="$classllvm_1_1IsAOpInit.html" title="!isa&lt;type&gt;(expr) &#45; Dynamically determine the type of an expression. " alt="" coords="259,639,369,665"/>
<area shape="rect" id="node17" href="$classllvm_1_1ListInit.html" title="[AL, AH, CL] &#45; Represent a list of defs " alt="" coords="267,689,361,716"/>
<area shape="rect" id="node18" href="$classllvm_1_1RecordRecTy.html" title="&#39;[classname]&#39; &#45; Type of record values that have zero or more superclasses. " alt="" coords="247,740,381,767"/>
<area shape="rect" id="node19" href="$classllvm_1_1SCEV.html" title="This class represents an analyzed expression in the program. " alt="" coords="269,791,359,817"/>
<area shape="rect" id="node26" href="$classllvm_1_1SCEVPredicate.html" title="This class represents an assumption made using SCEV expressions which can be checked at run&#45;time..." alt="" coords="241,841,387,868"/>
<area shape="rect" id="node30" href="$classllvm_1_1SDNode.html" title="Represents one node in the SelectionDAG. " alt="" coords="262,1120,366,1147"/>
<area shape="rect" id="node45" href="$classllvm_1_1SDVTListNode.html" title="llvm::SDVTListNode" alt="" coords="243,1171,385,1197"/>
<area shape="rect" id="node46" href="$classllvm_1_1TernOpInit.html" title="!op (X, Y, Z) &#45; Combine two inits. " alt="" coords="257,1221,371,1248"/>
<area shape="rect" id="node47" href="$classllvm_1_1UniqueMachineInstr.html" title="A class that wraps MachineInstrs and derives from FoldingSetNode in order to be uniqued in a CSEMap..." alt="" coords="229,1272,399,1299"/>
<area shape="rect" id="node48" href="$classllvm_1_1UnOpInit.html" title="!op (X) &#45; Transform an init. " alt="" coords="261,1323,367,1349"/>
<area shape="rect" id="node49" href="$classllvm_1_1VarDefInit.html" title="classname&lt;targs...&gt; &#45; Represent an uninstantiated anonymous class instantiation. " alt="" coords="257,1373,371,1400"/>
<area shape="rect" id="node3" href="$classllvm_1_1EnumAttributeImpl.html" title="llvm::EnumAttributeImpl" alt="" coords="494,5,657,32"/>
<area shape="rect" id="node4" href="$classllvm_1_1StringAttributeImpl.html" title="llvm::StringAttributeImpl" alt="" coords="494,56,657,83"/>
<area shape="rect" id="node20" href="$classllvm_1_1SCEVCastExpr.html" title="This is the base class for unary cast operator classes. " alt="" coords="502,487,649,513"/>
<area shape="rect" id="node21" href="$classllvm_1_1SCEVConstant.html" title="This class represents a constant integer value. " alt="" coords="503,537,647,564"/>
<area shape="rect" id="node22" href="$structllvm_1_1SCEVCouldNotCompute.html" title="An object of this class is returned by queries that could not be answered. " alt="" coords="476,588,675,615"/>
<area shape="rect" id="node23" href="$classllvm_1_1SCEVNAryExpr.html" title="This node is a base class providing common functionality for n&#39;ary operators. " alt="" coords="501,639,649,665"/>
<area shape="rect" id="node24" href="$classllvm_1_1SCEVUDivExpr.html" title="This class represents a binary unsigned division operation. " alt="" coords="501,689,649,716"/>
<area shape="rect" id="node25" href="$classllvm_1_1SCEVUnknown.html" title="This means that we are dealing with an entirely unknown SCEV value, and only represent it as its LLVM..." alt="" coords="502,740,649,767"/>
<area shape="rect" id="node27" href="$classllvm_1_1SCEVEqualPredicate.html" title="This class represents an assumption that two SCEV expressions are equal, and this can be checked at r..." alt="" coords="486,791,665,817"/>
<area shape="rect" id="node28" href="$classllvm_1_1SCEVUnionPredicate.html" title="This class represents a composition of other SCEV predicates, and is the class that most clients will..." alt="" coords="485,841,665,868"/>
<area shape="rect" id="node29" href="$classllvm_1_1SCEVWrapPredicate.html" title="This class represents an assumption made on an AddRec expression. " alt="" coords="487,892,664,919"/>
<area shape="rect" id="node31" href="$classllvm_1_1AddrSpaceCastSDNode.html" title="llvm::AddrSpaceCastSDNode" alt="" coords="477,943,673,969"/>
<area shape="rect" id="node32" href="$classllvm_1_1BasicBlockSDNode.html" title="llvm::BasicBlockSDNode" alt="" coords="490,993,661,1020"/>
<area shape="rect" id="node33" href="$classllvm_1_1BlockAddressSDNode.html" title="llvm::BlockAddressSDNode" alt="" coords="483,1044,668,1071"/>
<area shape="rect" id="node34" href="$classllvm_1_1BuildVectorSDNode.html" title="A &quot;pseudo&#45;class&quot; with methods for operating on BUILD_VECTORs. " alt="" coords="490,1095,661,1121"/>
<area shape="rect" id="node35" href="$classllvm_1_1CondCodeSDNode.html" title="llvm::CondCodeSDNode" alt="" coords="492,1145,659,1172"/>
<area shape="rect" id="node36" href="$classllvm_1_1ConstantFPSDNode.html" title="llvm::ConstantFPSDNode" alt="" coords="488,1196,663,1223"/>
<area shape="rect" id="node37" href="$classllvm_1_1ConstantPoolSDNode.html" title="llvm::ConstantPoolSDNode" alt="" coords="484,1247,667,1273"/>
<area shape="rect" id="node38" href="$classllvm_1_1ConstantSDNode.html" title="llvm::ConstantSDNode" alt="" coords="497,1297,654,1324"/>
<area shape="rect" id="node39" href="$classllvm_1_1ExternalSymbolSDNode.html" title="llvm::ExternalSymbolSDNode" alt="" coords="477,1348,673,1375"/>
<area shape="rect" id="node40" href="$classllvm_1_1FrameIndexSDNode.html" title="llvm::FrameIndexSDNode" alt="" coords="489,1399,662,1425"/>
<area shape="rect" id="node41" href="$classllvm_1_1GlobalAddressSDNode.html" title="llvm::GlobalAddressSDNode" alt="" coords="481,1449,670,1476"/>
<area shape="rect" id="node42" href="$classllvm_1_1HandleSDNode.html" title="This class is used to form a handle around another node that is persistent and is updated across invo..." alt="" coords="503,1500,648,1527"/>
<area shape="rect" id="node43" href="$classllvm_1_1JumpTableSDNode.html" title="llvm::JumpTableSDNode" alt="" coords="491,1551,659,1577"/>
<area shape="rect" id="node44" href="$classllvm_1_1LabelSDNode.html" title="llvm::LabelSDNode" alt="" coords="508,1601,643,1628"/>
</map>
