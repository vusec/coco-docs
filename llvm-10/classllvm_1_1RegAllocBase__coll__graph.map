<map id="llvm::RegAllocBase" name="llvm::RegAllocBase">
<area shape="rect" id="node2" href="$classllvm_1_1RegisterClassInfo.html" title="llvm::RegisterClassInfo" alt="" coords="1247,5,1405,32"/>
<area shape="rect" id="node3" href="$classchar.html" title="char" alt="" coords="952,236,999,263"/>
<area shape="rect" id="node12" href="$classllvm_1_1LiveRegMatrix.html" title="llvm::LiveRegMatrix" alt="" coords="1257,416,1395,443"/>
<area shape="rect" id="node16" href="$classllvm_1_1LiveIntervals.html" title="llvm::LiveIntervals" alt="" coords="1262,264,1390,291"/>
<area shape="rect" id="node21" href="$classllvm_1_1VirtRegMap.html" title="llvm::VirtRegMap" alt="" coords="1265,213,1387,240"/>
<area shape="rect" id="node4" href="$classllvm_1_1SmallPtrSet.html" title="llvm::SmallPtrSet\&lt;\l llvm::MachineInstr\l *, 32 \&gt;" alt="" coords="1259,56,1393,112"/>
<area shape="rect" id="node5" href="$classllvm_1_1SmallPtrSetImpl.html" title="llvm::SmallPtrSetImpl\l\&lt; llvm::MachineInstr * \&gt;" alt="" coords="894,97,1057,138"/>
<area shape="rect" id="node6" href="$classllvm_1_1SmallPtrSetImplBase.html" title="SmallPtrSetImplBase &#45; This is the common code shared among all the SmallPtrSet&lt;&gt;&#39;s, which is almost everything. " alt="" coords="313,101,492,128"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallPtrSetImpl.html" title="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..." alt="" coords="541,51,691,93"/>
<area shape="rect" id="node7" href="$classllvm_1_1DebugEpochBase.html" title="A base class for data structure classes wishing to make iterators (&quot;handles&quot;) pointing into themselve..." alt="" coords="5,51,164,77"/>
<area shape="rect" id="node9" href="$classunsigned.html" title="unsigned" alt="" coords="47,176,122,203"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallPtrSet.html" title="SmallPtrSet &#45; This class implements a set which is optimized for holding SmallSize or less elements..." alt="" coords="900,31,1051,73"/>
<area shape="rect" id="node13" href="$classllvm_1_1MachineFunctionPass.html" title="MachineFunctionPass &#45; This class adapts the FunctionPass interface to allow convenient creation of pa..." alt="" coords="884,381,1067,408"/>
<area shape="rect" id="node14" href="$classllvm_1_1FunctionPass.html" title="FunctionPass class &#45; This class is used to implement most global optimizations. " alt="" coords="549,381,683,408"/>
<area shape="rect" id="node15" href="$classllvm_1_1Pass.html" title="Pass interface &#45; Implemented by all &#39;passes&#39;. " alt="" coords="361,381,445,408"/>
<area shape="rect" id="node17" href="$classbool.html" title="bool" alt="" coords="1303,315,1349,341"/>
<area shape="rect" id="node18" href="$classllvm_1_1MachineRegisterInfo.html" title="MachineRegisterInfo &#45; Keep track of information for virtual and physical registers, including vreg register classes, use/def chains for registers, etc. " alt="" coords="1239,365,1413,392"/>
<area shape="rect" id="node19" href="$classllvm_1_1TargetRegisterInfo.html" title="TargetRegisterInfo base class &#45; We assume that the target defines a static array of TargetRegisterDes..." alt="" coords="1245,467,1407,493"/>
<area shape="rect" id="node20" href="$classllvm_1_1MCRegisterInfo.html" title="MCRegisterInfo base class &#45; We assume that the target defines a static array of MCRegisterDesc object..." alt="" coords="902,467,1049,493"/>
</map>
