<map id="llvm::consthoist::RebasedConstantInfo" name="llvm::consthoist::RebasedConstantInfo">
<area shape="rect" id="node2" href="$classllvm_1_1Type.html" title="The instances of the Type class are immutable: once they are created, they are never changed..." alt="" coords="445,44,528,71"/>
<area shape="rect" id="node3" href="$classunsigned.html" title="unsigned" alt="" coords="5,181,80,208"/>
<area shape="rect" id="node6" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="301,179,387,205"/>
<area shape="rect" id="node11" href="$classllvm_1_1SmallVectorBase.html" title="This is all the non&#45;templated stuff common to all SmallVectors. " alt="" coords="267,248,421,275"/>
<area shape="rect" id="node4" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM. " alt="" coords="1019,124,1125,151"/>
<area shape="rect" id="node5" href="$classllvm_1_1User.html" title="llvm::User" alt="" coords="600,152,683,179"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVector.html" title="llvm::SmallVector\&lt;\l ConstantUser, 8 \&gt;" alt="" coords="2599,229,2733,270"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorImpl.html" title="llvm::SmallVectorImpl\l\&lt; ConstantUser \&gt;" alt="" coords="2265,189,2415,230"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1364,165,1543,206"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="llvm::SmallVectorTemplate\lCommon\&lt; T \&gt;" alt="" coords="816,211,995,253"/>
<area shape="rect" id="node15" href="$classllvm_1_1SmallVectorTemplateBase.html" title="llvm::SmallVectorTemplate\lBase\&lt; T \&gt;" alt="" coords="1589,241,1767,282"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1155,270,1334,311"/>
<area shape="rect" id="node13" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD..." alt="" coords="552,263,731,305"/>
<area shape="rect" id="node14" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1896,248,2079,275"/>
<area shape="rect" id="node23" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small..." alt="" coords="2273,254,2407,295"/>
<area shape="rect" id="node17" href="$structllvm_1_1SmallVectorStorage.html" title="llvm::SmallVectorStorage\l\&lt; ConstantUser, N \&gt;" alt="" coords="2255,326,2425,367"/>
<area shape="rect" id="node18" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\l\&lt; ConstantUser \&gt;" alt="" coords="1583,330,1773,371"/>
<area shape="rect" id="node19" href="$classchar.html" title="char" alt="" coords="882,407,929,433"/>
<area shape="rect" id="node20" href="$structllvm_1_1AlignedCharArrayUnion.html" title="A suitably aligned and sized character array member which can hold elements of any type..." alt="" coords="1149,399,1340,441"/>
<area shape="rect" id="node22" href="$structllvm_1_1AlignedCharArrayUnion.html" title="llvm::AlignedCharArrayUnion\&lt; T \&gt;" alt="" coords="1567,417,1789,444"/>
<area shape="rect" id="node21" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements. " alt="" coords="1902,395,2073,437"/>
</map>
