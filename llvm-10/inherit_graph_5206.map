<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classllvm_1_1Init.html" title="llvm::Init" alt="" coords="481,365,553,392"/>
<area shape="rect" id="node2" href="$classllvm_1_1TypedInit.html" title="This is the common super&#45;class of types that have a specific, explicit, type. " alt="" coords="801,365,909,392"/>
<area shape="rect" id="node23" href="$classllvm_1_1UnsetInit.html" title="&#39;?&#39; &#45; Represents an uninitialized value " alt="" coords="801,416,908,443"/>
<area shape="rect" id="node3" href="$classllvm_1_1BitInit.html" title="&#39;true&#39;/&#39;false&#39; &#45; Represent a concrete initializer for a bit. " alt="" coords="1091,56,1179,83"/>
<area shape="rect" id="node4" href="$classllvm_1_1BitsInit.html" title="&#39;{ a, b, c }&#39; &#45; Represents an initializer for a BitsRecTy value. " alt="" coords="1088,765,1183,792"/>
<area shape="rect" id="node5" href="$classllvm_1_1CodeInit.html" title="llvm::CodeInit" alt="" coords="1084,107,1187,133"/>
<area shape="rect" id="node6" href="$classllvm_1_1CondOpInit.html" title="!cond(condition_1: value1, ... " alt="" coords="1075,563,1195,589"/>
<area shape="rect" id="node7" href="$classllvm_1_1DagInit.html" title="(v a, b) &#45; Represent a DAG tree value. " alt="" coords="1087,613,1183,640"/>
<area shape="rect" id="node8" href="$classllvm_1_1DefInit.html" title="AL &#45; Represent a reference to a &#39;def&#39; in the description. " alt="" coords="1089,157,1182,184"/>
<area shape="rect" id="node9" href="$classllvm_1_1FieldInit.html" title="X.Y &#45; Represent a reference to a subfield of a variable. " alt="" coords="1085,208,1185,235"/>
<area shape="rect" id="node10" href="$classllvm_1_1FoldOpInit.html" title="!foldl (a, b, expr, start, lst) &#45; Fold over a list. " alt="" coords="1078,816,1193,843"/>
<area shape="rect" id="node11" href="$classllvm_1_1IntInit.html" title="&#39;7&#39; &#45; Represent an initialization by a literal integer value. " alt="" coords="1092,259,1179,285"/>
<area shape="rect" id="node12" href="$classllvm_1_1IsAOpInit.html" title="!isa&lt;type&gt;(expr) &#45; Dynamically determine the type of an expression. " alt="" coords="1081,512,1190,539"/>
<area shape="rect" id="node13" href="$classllvm_1_1ListInit.html" title="[AL, AH, CL] &#45; Represent a list of defs " alt="" coords="1089,664,1182,691"/>
<area shape="rect" id="node14" href="$classllvm_1_1OpInit.html" title="Base class for operators. " alt="" coords="1091,461,1180,488"/>
<area shape="rect" id="node18" href="$classllvm_1_1StringInit.html" title="&quot;foo&quot; &#45; Represent an initialization by a string value. " alt="" coords="1082,309,1189,336"/>
<area shape="rect" id="node19" href="$classllvm_1_1VarBitInit.html" title="Opcode{0} &#45; Represent access to one bit of a variable or field. " alt="" coords="1081,360,1189,387"/>
<area shape="rect" id="node20" href="$classllvm_1_1VarDefInit.html" title="classname&lt;targs...&gt; &#45; Represent an uninstantiated anonymous class instantiation. " alt="" coords="1079,715,1192,741"/>
<area shape="rect" id="node21" href="$classllvm_1_1VarInit.html" title="&#39;Opcode&#39; &#45; Represent a reference to an entire variable object. " alt="" coords="1089,411,1181,437"/>
<area shape="rect" id="node22" href="$classllvm_1_1VarListElementInit.html" title="List[4] &#45; Represent access to one element of a var or field. " alt="" coords="1055,5,1216,32"/>
<area shape="rect" id="node15" href="$classllvm_1_1BinOpInit.html" title="!op (X, Y) &#45; Combine two inits. " alt="" coords="1359,664,1467,691"/>
<area shape="rect" id="node16" href="$classllvm_1_1TernOpInit.html" title="!op (X, Y, Z) &#45; Combine two inits. " alt="" coords="1355,512,1470,539"/>
<area shape="rect" id="node17" href="$classllvm_1_1UnOpInit.html" title="!op (X) &#45; Transform an init. " alt="" coords="1359,917,1466,944"/>
<area shape="rect" id="node24" href="$classllvm_1_1FoldingSetBase_1_1Node.html" title="Node &#45; This class is used to maintain the singly linked bucket list in a folding set. " alt="" coords="781,1062,928,1103"/>
<area shape="rect" id="node25" href="$classllvm_1_1AttributeImpl.html" title="llvm::AttributeImpl" alt="" coords="1071,1221,1199,1248"/>
<area shape="rect" id="node30" href="$classllvm_1_1AttributeListImpl.html" title="llvm::AttributeListImpl" alt="" coords="1061,1525,1210,1552"/>
<area shape="rect" id="node31" href="$classllvm_1_1AttributeSetNode.html" title="llvm::AttributeSetNode" alt="" coords="1058,1624,1213,1651"/>
<area shape="rect" id="node32" href="$classllvm_1_1DIEAbbrev.html" title="Dwarf abbreviation, describes the organization of a debug information object. " alt="" coords="1076,968,1195,995"/>
<area shape="rect" id="node33" href="$classllvm_1_1FastFoldingSetNode.html" title="FastFoldingSetNode &#45; This is a subclass of FoldingSetNode which stores a FoldingSetNodeID value rathe..." alt="" coords="1049,1019,1222,1045"/>
<area shape="rect" id="node34" href="$classllvm_1_1FoldingSetNodeWrapper.html" title="FoldingSetNodeWrapper &#45; This template class is used to &quot;wrap&quot; arbitrary types in an enclosing object ..." alt="" coords="1021,1069,1249,1096"/>
<area shape="rect" id="node35" href="$classllvm_1_1ImmutableListImpl.html" title="llvm::ImmutableListImpl\&lt; T \&gt;" alt="" coords="1039,1120,1232,1147"/>
<area shape="rect" id="node36" href="$classllvm_1_1RecordRecTy.html" title="&#39;[classname]&#39; &#45; Type of record values that have zero or more superclasses. " alt="" coords="1068,1815,1203,1841"/>
<area shape="rect" id="node37" href="$classllvm_1_1SCEV.html" title="This class represents an analyzed expression in the program. " alt="" coords="1090,1272,1181,1299"/>
<area shape="rect" id="node56" href="$classllvm_1_1SCEVPredicate.html" title="This class represents an assumption made using SCEV expressions which can be checked at run&#45;time..." alt="" coords="1062,1424,1209,1451"/>
<area shape="rect" id="node60" href="$classllvm_1_1SDNode.html" title="Represents one node in the SelectionDAG. " alt="" coords="1361,1901,1465,1928"/>
<area shape="rect" id="node106" href="$classllvm_1_1SDVTListNode.html" title="llvm::SDVTListNode" alt="" coords="1064,1323,1207,1349"/>
<area shape="rect" id="node107" href="$classllvm_1_1UniqueMachineInstr.html" title="A class that wraps MachineInstrs and derives from FoldingSetNode in order to be uniqued in a CSEMap..." alt="" coords="1050,1373,1221,1400"/>
<area shape="rect" id="node26" href="$classllvm_1_1EnumAttributeImpl.html" title="llvm::EnumAttributeImpl" alt="" coords="1331,1019,1494,1045"/>
<area shape="rect" id="node29" href="$classllvm_1_1StringAttributeImpl.html" title="llvm::StringAttributeImpl" alt="" coords="1331,1069,1494,1096"/>
<area shape="rect" id="node27" href="$classllvm_1_1IntAttributeImpl.html" title="llvm::IntAttributeImpl" alt="" coords="1603,1040,1745,1067"/>
<area shape="rect" id="node28" href="$classllvm_1_1TypeAttributeImpl.html" title="llvm::TypeAttributeImpl" alt="" coords="1595,989,1753,1016"/>
<area shape="rect" id="node38" href="$classllvm_1_1SCEVCastExpr.html" title="This is the base class for unary cast operator classes. " alt="" coords="1339,1272,1486,1299"/>
<area shape="rect" id="node42" href="$classllvm_1_1SCEVConstant.html" title="This class represents a constant integer value. " alt="" coords="1341,1323,1485,1349"/>
<area shape="rect" id="node43" href="$structllvm_1_1SCEVCouldNotCompute.html" title="An object of this class is returned by queries that could not be answered. " alt="" coords="1313,1120,1512,1147"/>
<area shape="rect" id="node44" href="$classllvm_1_1SCEVNAryExpr.html" title="This node is a base class providing common functionality for n&#39;ary operators. " alt="" coords="1339,1171,1487,1197"/>
<area shape="rect" id="node54" href="$classllvm_1_1SCEVUDivExpr.html" title="This class represents a binary unsigned division operation. " alt="" coords="1339,1221,1487,1248"/>
<area shape="rect" id="node55" href="$classllvm_1_1SCEVUnknown.html" title="This means that we are dealing with an entirely unknown SCEV value, and only represent it as its LLVM..." alt="" coords="1339,3753,1486,3780"/>
<area shape="rect" id="node39" href="$classllvm_1_1SCEVSignExtendExpr.html" title="This class represents a sign extension of a small integer value to a larger integer value..." alt="" coords="1581,1319,1767,1345"/>
<area shape="rect" id="node40" href="$classllvm_1_1SCEVTruncateExpr.html" title="This class represents a truncation of an integer value to a smaller integer value. " alt="" coords="1589,1217,1759,1244"/>
<area shape="rect" id="node41" href="$classllvm_1_1SCEVZeroExtendExpr.html" title="This class represents a zero extension of a small integer value to a larger integer value..." alt="" coords="1581,1268,1767,1295"/>
<area shape="rect" id="node45" href="$classllvm_1_1SCEVAddRecExpr.html" title="This node represents a polynomial recurrence on the trip count of the specified loop. " alt="" coords="1591,1116,1757,1143"/>
<area shape="rect" id="node46" href="$classllvm_1_1SCEVCommutativeExpr.html" title="This node is the base class for n&#39;ary commutative operators. " alt="" coords="1576,1167,1772,1193"/>
<area shape="rect" id="node47" href="$classllvm_1_1SCEVAddExpr.html" title="This node represents an addition of some number of SCEVs. " alt="" coords="1858,1205,1999,1232"/>
<area shape="rect" id="node48" href="$classllvm_1_1SCEVMinMaxExpr.html" title="This node is the base class min/max selections. " alt="" coords="1847,1100,2011,1127"/>
<area shape="rect" id="node53" href="$classllvm_1_1SCEVMulExpr.html" title="This node represents multiplication of some number of SCEVs. " alt="" coords="1859,1155,1998,1181"/>
<area shape="rect" id="node49" href="$classllvm_1_1SCEVSMaxExpr.html" title="This class represents a signed maximum selection. " alt="" coords="2121,999,2273,1025"/>
<area shape="rect" id="node50" href="$classllvm_1_1SCEVSMinExpr.html" title="This class represents a signed minimum selection. " alt="" coords="2123,1049,2271,1076"/>
<area shape="rect" id="node51" href="$classllvm_1_1SCEVUMaxExpr.html" title="This class represents an unsigned maximum selection. " alt="" coords="2120,1100,2273,1127"/>
<area shape="rect" id="node52" href="$classllvm_1_1SCEVUMinExpr.html" title="This class represents an unsigned minimum selection. " alt="" coords="2122,1151,2271,1177"/>
<area shape="rect" id="node57" href="$classllvm_1_1SCEVEqualPredicate.html" title="This class represents an assumption that two SCEV expressions are equal, and this can be checked at r..." alt="" coords="1323,1475,1502,1501"/>
<area shape="rect" id="node58" href="$classllvm_1_1SCEVUnionPredicate.html" title="This class represents a composition of other SCEV predicates, and is the class that most clients will..." alt="" coords="1323,1373,1503,1400"/>
<area shape="rect" id="node59" href="$classllvm_1_1SCEVWrapPredicate.html" title="This class represents an assumption made on an AddRec expression. " alt="" coords="1324,1424,1501,1451"/>
<area shape="rect" id="node61" href="$classllvm_1_1AddrSpaceCastSDNode.html" title="llvm::AddrSpaceCastSDNode" alt="" coords="1576,1825,1772,1852"/>
<area shape="rect" id="node62" href="$classllvm_1_1BasicBlockSDNode.html" title="llvm::BasicBlockSDNode" alt="" coords="1589,1876,1759,1903"/>
<area shape="rect" id="node63" href="$classllvm_1_1BlockAddressSDNode.html" title="llvm::BlockAddressSDNode" alt="" coords="1581,1927,1767,1953"/>
<area shape="rect" id="node64" href="$classllvm_1_1BuildVectorSDNode.html" title="A &quot;pseudo&#45;class&quot; with methods for operating on BUILD_VECTORs. " alt="" coords="1589,1977,1759,2004"/>
<area shape="rect" id="node65" href="$classllvm_1_1CondCodeSDNode.html" title="llvm::CondCodeSDNode" alt="" coords="1591,2028,1757,2055"/>
<area shape="rect" id="node66" href="$classllvm_1_1ConstantFPSDNode.html" title="llvm::ConstantFPSDNode" alt="" coords="1587,2079,1761,2105"/>
<area shape="rect" id="node67" href="$classllvm_1_1ConstantPoolSDNode.html" title="llvm::ConstantPoolSDNode" alt="" coords="1583,2129,1765,2156"/>
<area shape="rect" id="node68" href="$classllvm_1_1ConstantSDNode.html" title="llvm::ConstantSDNode" alt="" coords="1595,2180,1753,2207"/>
<area shape="rect" id="node69" href="$classllvm_1_1ExternalSymbolSDNode.html" title="llvm::ExternalSymbolSDNode" alt="" coords="1576,2231,1772,2257"/>
<area shape="rect" id="node70" href="$classllvm_1_1FrameIndexSDNode.html" title="llvm::FrameIndexSDNode" alt="" coords="1587,2281,1761,2308"/>
<area shape="rect" id="node71" href="$classllvm_1_1GlobalAddressSDNode.html" title="llvm::GlobalAddressSDNode" alt="" coords="1579,2332,1769,2359"/>
<area shape="rect" id="node72" href="$classllvm_1_1HandleSDNode.html" title="This class is used to form a handle around another node that is persistent and is updated across invo..." alt="" coords="1601,2383,1747,2409"/>
<area shape="rect" id="node73" href="$classllvm_1_1JumpTableSDNode.html" title="llvm::JumpTableSDNode" alt="" coords="1590,2433,1758,2460"/>
<area shape="rect" id="node74" href="$classllvm_1_1LabelSDNode.html" title="llvm::LabelSDNode" alt="" coords="1607,2484,1741,2511"/>
<area shape="rect" id="node75" href="$classllvm_1_1LifetimeSDNode.html" title="This SDNode is used for LIFETIME_START/LIFETIME_END values, which indicate the offet and size that ar..." alt="" coords="1599,2535,1749,2561"/>
<area shape="rect" id="node76" href="$classllvm_1_1MachineSDNode.html" title="An SDNode that represents everything that will be needed to construct a MachineInstr. " alt="" coords="1597,2585,1751,2612"/>
<area shape="rect" id="node77" href="$classllvm_1_1MCSymbolSDNode.html" title="llvm::MCSymbolSDNode" alt="" coords="1589,1369,1759,1396"/>
<area shape="rect" id="node78" href="$classllvm_1_1MDNodeSDNode.html" title="llvm::MDNodeSDNode" alt="" coords="1596,1420,1752,1447"/>
<area shape="rect" id="node79" href="$classllvm_1_1MemSDNode.html" title="This is an abstract virtual class for memory operations. " alt="" coords="1607,1471,1741,1497"/>
<area shape="rect" id="node100" href="$classllvm_1_1RegisterMaskSDNode.html" title="llvm::RegisterMaskSDNode" alt="" coords="1581,1521,1767,1548"/>
<area shape="rect" id="node101" href="$classllvm_1_1RegisterSDNode.html" title="llvm::RegisterSDNode" alt="" coords="1597,1572,1751,1599"/>
<area shape="rect" id="node102" href="$classllvm_1_1ShuffleVectorSDNode.html" title="This SDNode is used to implement the code generator support for the llvm IR shufflevector instruction..." alt="" coords="1583,1623,1765,1649"/>
<area shape="rect" id="node103" href="$classllvm_1_1SrcValueSDNode.html" title="An SDNode that holds an arbitrary LLVM IR Value. " alt="" coords="1595,1673,1753,1700"/>
<area shape="rect" id="node104" href="$classllvm_1_1TargetIndexSDNode.html" title="Completely target&#45;dependent object reference. " alt="" coords="1587,1724,1761,1751"/>
<area shape="rect" id="node105" href="$classllvm_1_1VTSDNode.html" title="This class is used to represent EVT&#39;s, which are used to parameterize some operations. " alt="" coords="1613,1775,1735,1801"/>
<area shape="rect" id="node80" href="$classllvm_1_1AtomicSDNode.html" title="This is an SDNode representing atomic operations. " alt="" coords="1856,1420,2001,1447"/>
<area shape="rect" id="node81" href="$classllvm_1_1LSBaseSDNode.html" title="Base class for LoadSDNode and StoreSDNode. " alt="" coords="1853,1471,2004,1497"/>
<area shape="rect" id="node84" href="$classllvm_1_1MaskedGatherScatterSDNode.html" title="This is a base class used to represent MGATHER and MSCATTER nodes. " alt="" coords="1838,1522,2019,1563"/>
<area shape="rect" id="node87" href="$classllvm_1_1MaskedLoadStoreSDNode.html" title="This base class is used to represent MLOAD and MSTORE nodes. " alt="" coords="1824,1601,2033,1628"/>
<area shape="rect" id="node90" href="$classllvm_1_1MemIntrinsicSDNode.html" title="This SDNode is used for target intrinsics that touch memory and need an associated MachineMemOperand..." alt="" coords="1839,1652,2018,1679"/>
<area shape="rect" id="node91" href="$classllvm_1_1X86MaskedGatherScatterSDNode.html" title="llvm::X86MaskedGatherScatter\lSDNode" alt="" coords="1827,1717,2031,1758"/>
<area shape="rect" id="node94" href="$classllvm_1_1X86MaskedStoreSDNode.html" title="llvm::X86MaskedStoreSDNode" alt="" coords="1827,1260,2031,1287"/>
<area shape="rect" id="node97" href="$classllvm_1_1X86StoreSDNode.html" title="llvm::X86StoreSDNode" alt="" coords="1849,1369,2008,1396"/>
<area shape="rect" id="node82" href="$classllvm_1_1LoadSDNode.html" title="This class is used to represent ISD::LOAD nodes. " alt="" coords="2131,1420,2263,1447"/>
<area shape="rect" id="node83" href="$classllvm_1_1StoreSDNode.html" title="This class is used to represent ISD::STORE nodes. " alt="" coords="2129,1471,2264,1497"/>
<area shape="rect" id="node85" href="$classllvm_1_1MaskedGatherSDNode.html" title="This class is used to represent an MGATHER node. " alt="" coords="2102,1521,2291,1548"/>
<area shape="rect" id="node86" href="$classllvm_1_1MaskedScatterSDNode.html" title="This class is used to represent an MSCATTER node. " alt="" coords="2101,1572,2293,1599"/>
<area shape="rect" id="node88" href="$classllvm_1_1MaskedLoadSDNode.html" title="This class is used to represent an MLOAD node. " alt="" coords="2107,1623,2286,1649"/>
<area shape="rect" id="node89" href="$classllvm_1_1MaskedStoreSDNode.html" title="This class is used to represent an MSTORE node. " alt="" coords="2106,1673,2287,1700"/>
<area shape="rect" id="node92" href="$classllvm_1_1X86MaskedGatherSDNode.html" title="llvm::X86MaskedGatherSDNode" alt="" coords="2091,1724,2303,1751"/>
<area shape="rect" id="node93" href="$classllvm_1_1X86MaskedScatterSDNode.html" title="llvm::X86MaskedScatterSDNode" alt="" coords="2089,1775,2304,1801"/>
<area shape="rect" id="node95" href="$classllvm_1_1MaskedTruncSStoreSDNode.html" title="llvm::MaskedTruncSStoreSDNode" alt="" coords="2085,1201,2308,1228"/>
<area shape="rect" id="node96" href="$classllvm_1_1MaskedTruncUSStoreSDNode.html" title="llvm::MaskedTruncUSStore\lSDNode" alt="" coords="2105,1253,2288,1294"/>
<area shape="rect" id="node98" href="$classllvm_1_1TruncSStoreSDNode.html" title="llvm::TruncSStoreSDNode" alt="" coords="2108,1319,2285,1345"/>
<area shape="rect" id="node99" href="$classllvm_1_1TruncUSStoreSDNode.html" title="llvm::TruncUSStoreSDNode" alt="" coords="2103,1369,2290,1396"/>
<area shape="rect" id="node109" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; AliasSet,\l Options... \&gt;::type \&gt;" alt="" coords="769,4645,940,4715"/>
<area shape="rect" id="node112" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; BasicBlock,\l Options... \&gt;::type \&gt;" alt="" coords="761,3793,949,3863"/>
<area shape="rect" id="node116" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; Function,\l Options... \&gt;::type \&gt;" alt="" coords="769,3982,941,4053"/>
<area shape="rect" id="node119" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; GlobalAlias,\l Options... \&gt;::type \&gt;" alt="" coords="761,3551,949,3622"/>
<area shape="rect" id="node122" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; GlobalIFunc,\l Options... \&gt;::type \&gt;" alt="" coords="759,4171,951,4242"/>
<area shape="rect" id="node125" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; GlobalVariable,\l Options... \&gt;::type \&gt;" alt="" coords="751,3402,958,3473"/>
<area shape="rect" id="node128" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; IndexListEntry,\l Options... \&gt;::type \&gt;" alt="" coords="751,4834,958,4905"/>
<area shape="rect" id="node131" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; Instruction,\l Options... \&gt;::type \&gt;" alt="" coords="763,5023,946,5094"/>
<area shape="rect" id="node254" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; IVStrideUse,\l Options... \&gt;::type \&gt;" alt="" coords="758,5265,951,5335"/>
<area shape="rect" id="node257" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MachineBasicBlock,\l Options... \&gt;::type \&gt;" alt="" coords="736,4739,973,4810"/>
<area shape="rect" id="node261" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MachineInstr,\l Options... \&gt;::type \&gt;" alt="" coords="756,4929,953,4999"/>
<area shape="rect" id="node265" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MCFragment,\l Options... \&gt;::type \&gt;" alt="" coords="755,5118,954,5189"/>
<area shape="rect" id="node289" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; MemoryAccess,\l Options... \&gt;::type \&gt;" alt="" coords="748,3698,961,3769"/>
<area shape="rect" id="node297" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; NamedMDNode,\l Options... \&gt;::type \&gt;" alt="" coords="747,4361,963,4431"/>
<area shape="rect" id="node300" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; Node, Options...\l \&gt;::type \&gt;" alt="" coords="747,3887,962,3958"/>
<area shape="rect" id="node302" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; NodeTy,\l Options... \&gt;::type \&gt;" alt="" coords="771,4455,939,4526"/>
<area shape="rect" id="node305" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; PredicateBase,\l Options... \&gt;::type \&gt;" alt="" coords="751,4266,958,4337"/>
<area shape="rect" id="node313" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; SDNode,\l Options... \&gt;::type \&gt;" alt="" coords="769,3299,941,3370"/>
<area shape="rect" id="node315" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; T, Options...\l \&gt;::type \&gt;" alt="" coords="759,4077,950,4147"/>
<area shape="rect" id="node317" href="$classllvm_1_1ilist__node__impl.html" title="llvm::ilist_node_impl\l\&lt; ilist_detail::compute\l_node_options\&lt; VPRecipeBase,\l Options... \&gt;::type \&gt;" alt="" coords="749,4550,960,4621"/>
<area shape="rect" id="node110" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; AliasSet \&gt;" alt="" coords="1044,4667,1227,4693"/>
<area shape="rect" id="node111" href="$classllvm_1_1AliasSet.html" title="llvm::AliasSet" alt="" coords="1361,4667,1464,4693"/>
<area shape="rect" id="node113" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; BasicBlock,\l Options... \&gt;" alt="" coords="1040,3862,1231,3903"/>
<area shape="rect" id="node114" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; BasicBlock,\l Function \&gt;" alt="" coords="1339,3855,1486,3911"/>
<area shape="rect" id="node115" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation. " alt="" coords="1614,3652,1734,3679"/>
<area shape="rect" id="node117" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Function \&gt;" alt="" coords="1044,3989,1227,4016"/>
<area shape="rect" id="node118" href="$classllvm_1_1Function.html" title="llvm::Function" alt="" coords="1361,3703,1465,3729"/>
<area shape="rect" id="node120" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Global\lAlias \&gt;" alt="" coords="1056,3585,1215,3626"/>
<area shape="rect" id="node121" href="$classllvm_1_1GlobalAlias.html" title="llvm::GlobalAlias" alt="" coords="1353,3563,1473,3589"/>
<area shape="rect" id="node123" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Global\lIFunc \&gt;" alt="" coords="1056,4171,1215,4213"/>
<area shape="rect" id="node124" href="$classllvm_1_1GlobalIFunc.html" title="llvm::GlobalIFunc" alt="" coords="1351,3804,1475,3831"/>
<area shape="rect" id="node126" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Global\lVariable \&gt;" alt="" coords="1056,3417,1215,3458"/>
<area shape="rect" id="node127" href="$classllvm_1_1GlobalVariable.html" title="llvm::GlobalVariable" alt="" coords="1343,3453,1482,3480"/>
<area shape="rect" id="node129" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; IndexList\lEntry \&gt;" alt="" coords="1048,4849,1223,4890"/>
<area shape="rect" id="node130" href="$classllvm_1_1IndexListEntry.html" title="This class represents an entry in the slot index list held in the SlotIndexes pass. " alt="" coords="1343,4856,1482,4883"/>
<area shape="rect" id="node132" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Instruction,\l Options... \&gt;" alt="" coords="1042,5043,1229,5085"/>
<area shape="rect" id="node133" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; Instruction,\l BasicBlock \&gt;" alt="" coords="1341,5047,1484,5103"/>
<area shape="rect" id="node134" href="$classllvm_1_1Instruction.html" title="llvm::Instruction" alt="" coords="1617,5213,1731,5240"/>
<area shape="rect" id="node135" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location, and, if it is, stores a new value there. " alt="" coords="1841,5619,2016,5645"/>
<area shape="rect" id="node136" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value, and then stores the result back. " alt="" coords="1853,5669,2004,5696"/>
<area shape="rect" id="node137" href="$classllvm_1_1BinaryOperator.html" title="llvm::BinaryOperator" alt="" coords="1858,5720,1999,5747"/>
<area shape="rect" id="node138" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction. " alt="" coords="1870,5771,1987,5797"/>
<area shape="rect" id="node139" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="1875,5821,1982,5848"/>
<area shape="rect" id="node209" href="$classllvm_1_1CatchReturnInst.html" title="llvm::CatchReturnInst" alt="" coords="1853,5872,2004,5899"/>
<area shape="rect" id="node210" href="$classllvm_1_1CatchSwitchInst.html" title="llvm::CatchSwitchInst" alt="" coords="1853,4605,2004,4632"/>
<area shape="rect" id="node211" href="$classllvm_1_1CleanupReturnInst.html" title="llvm::CleanupReturnInst" alt="" coords="1847,4656,2010,4683"/>
<area shape="rect" id="node212" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions. " alt="" coords="1877,4707,1981,4733"/>
<area shape="rect" id="node215" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value. " alt="" coords="1845,4757,2012,4784"/>
<area shape="rect" id="node216" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations. " alt="" coords="1873,4808,1985,4835"/>
<area shape="rect" id="node217" href="$classllvm_1_1FuncletPadInst.html" title="llvm::FuncletPadInst" alt="" coords="1857,4859,2000,4885"/>
<area shape="rect" id="node220" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs ..." alt="" coords="1847,4909,2010,4936"/>
<area shape="rect" id="node221" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction. " alt="" coords="1863,4960,1995,4987"/>
<area shape="rect" id="node222" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value. " alt="" coords="1850,5011,2007,5037"/>
<area shape="rect" id="node223" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value. " alt="" coords="1857,5061,2000,5088"/>
<area shape="rect" id="node224" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="1857,5112,2001,5139"/>
<area shape="rect" id="node225" href="$classllvm_1_1PHINode.html" title="llvm::PHINode" alt="" coords="1875,5163,1983,5189"/>
<area shape="rect" id="node226" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception. " alt="" coords="1866,5213,1991,5240"/>
<area shape="rect" id="node227" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function. " alt="" coords="1871,5264,1986,5291"/>
<area shape="rect" id="node228" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction. " alt="" coords="1872,5315,1985,5341"/>
<area shape="rect" id="node229" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors. " alt="" coords="1851,5365,2006,5392"/>
<area shape="rect" id="node230" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory. " alt="" coords="1875,5416,1982,5443"/>
<area shape="rect" id="node231" href="$classllvm_1_1SwitchInst.html" title="Multiway switch. " alt="" coords="1871,5467,1987,5493"/>
<area shape="rect" id="node232" href="$classllvm_1_1UnaryInstruction.html" title="llvm::UnaryInstruction" alt="" coords="1853,5517,2004,5544"/>
<area shape="rect" id="node253" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior. " alt="" coords="1854,5568,2003,5595"/>
<area shape="rect" id="node140" href="$classllvm_1_1CallBrInst.html" title="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..." alt="" coords="2141,5897,2253,5924"/>
<area shape="rect" id="node141" href="$classllvm_1_1CallInst.html" title="This class represents a function call, abstracting a target machine&#39;s calling convention. " alt="" coords="2147,5796,2246,5823"/>
<area shape="rect" id="node208" href="$classllvm_1_1InvokeInst.html" title="Invoke instruction. " alt="" coords="2139,5847,2254,5873"/>
<area shape="rect" id="node142" href="$classllvm_1_1IntrinsicInst.html" title="A wrapper class for inspecting calls to intrinsic functions. " alt="" coords="2413,5872,2536,5899"/>
<area shape="rect" id="node143" href="$classllvm_1_1AnyCoroIdInst.html" title="This represents a common base class for llvm.coro.id instructions. " alt="" coords="2685,5441,2823,5468"/>
<area shape="rect" id="node148" href="$classllvm_1_1AnyCoroSuspendInst.html" title="llvm::AnyCoroSuspendInst" alt="" coords="2665,5492,2843,5519"/>
<area shape="rect" id="node151" href="$classllvm_1_1BinaryOpIntrinsic.html" title="This class represents an intrinsic that is based on a binary operation. " alt="" coords="2677,5543,2831,5569"/>
<area shape="rect" id="node154" href="$classllvm_1_1ConstrainedFPIntrinsic.html" title="This is the common base class for constrained floating point intrinsics. " alt="" coords="2661,5593,2847,5620"/>
<area shape="rect" id="node156" href="$classllvm_1_1CoroAllocaAllocInst.html" title="This represents the llvm.coro.alloca.alloc instruction. " alt="" coords="2669,5644,2839,5671"/>
<area shape="rect" id="node157" href="$classllvm_1_1CoroAllocaFreeInst.html" title="This represents the llvm.coro.alloca.free instruction. " alt="" coords="2671,5695,2837,5721"/>
<area shape="rect" id="node158" href="$classllvm_1_1CoroAllocaGetInst.html" title="This represents the llvm.coro.alloca.get instruction. " alt="" coords="2673,5745,2835,5772"/>
<area shape="rect" id="node159" href="$classllvm_1_1CoroAllocInst.html" title="This represents the llvm.coro.alloc instruction. " alt="" coords="2687,5796,2821,5823"/>
<area shape="rect" id="node160" href="$classllvm_1_1CoroBeginInst.html" title="This class represents the llvm.coro.begin instruction. " alt="" coords="2685,5847,2823,5873"/>
<area shape="rect" id="node161" href="$classllvm_1_1CoroEndInst.html" title="This represents the llvm.coro.end instruction. " alt="" coords="2691,5897,2817,5924"/>
<area shape="rect" id="node162" href="$classllvm_1_1CoroFrameInst.html" title="This represents the llvm.coro.frame instruction. " alt="" coords="2683,5948,2825,5975"/>
<area shape="rect" id="node163" href="$classllvm_1_1CoroFreeInst.html" title="This represents the llvm.coro.free instruction. " alt="" coords="2689,5999,2819,6025"/>
<area shape="rect" id="node164" href="$classllvm_1_1CoroPromiseInst.html" title="This represents the llvm.coro.promise instruction. " alt="" coords="2678,6049,2830,6076"/>
<area shape="rect" id="node165" href="$classllvm_1_1CoroSaveInst.html" title="This represents the llvm.coro.save instruction. " alt="" coords="2687,6100,2821,6127"/>
<area shape="rect" id="node166" href="$classllvm_1_1CoroSizeInst.html" title="This represents the llvm.coro.size instruction. " alt="" coords="2689,6151,2819,6177"/>
<area shape="rect" id="node167" href="$classllvm_1_1CoroSubFnInst.html" title="This class represents the llvm.coro.subfn.addr instruction. " alt="" coords="2683,6201,2825,6228"/>
<area shape="rect" id="node168" href="$classllvm_1_1DbgInfoIntrinsic.html" title="This is the common base class for debug info intrinsics. " alt="" coords="2681,6252,2827,6279"/>
<area shape="rect" id="node174" href="$classllvm_1_1GCProjectionInst.html" title="Common base class for representing values projected from a statepoint. " alt="" coords="2677,6303,2831,6329"/>
<area shape="rect" id="node177" href="$classllvm_1_1InstrProfIncrementInst.html" title="This represents the llvm.instrprof_increment intrinsic. " alt="" coords="2662,6353,2846,6380"/>
<area shape="rect" id="node179" href="$classllvm_1_1InstrProfValueProfileInst.html" title="This represents the llvm.instrprof_value_profile intrinsic. " alt="" coords="2656,6404,2852,6431"/>
<area shape="rect" id="node180" href="$classllvm_1_1MemIntrinsicBase.html" title="Common base class for all memory intrinsics. " alt="" coords="2675,6455,2833,6497"/>
<area shape="rect" id="node181" href="$classllvm_1_1VACopyInst.html" title="This represents the llvm.va_copy intrinsic. " alt="" coords="2691,6521,2817,6548"/>
<area shape="rect" id="node182" href="$classllvm_1_1VAEndInst.html" title="This represents the llvm.va_end intrinsic. " alt="" coords="2695,5143,2813,5169"/>
<area shape="rect" id="node183" href="$classllvm_1_1VAStartInst.html" title="This represents the llvm.va_start intrinsic. " alt="" coords="2693,5193,2815,5220"/>
<area shape="rect" id="node184" href="$classllvm_1_1MemIntrinsicBase.html" title="llvm::MemIntrinsicBase\l\&lt; AnyMemIntrinsic \&gt;" alt="" coords="2675,5245,2833,5286"/>
<area shape="rect" id="node192" href="$classllvm_1_1MemIntrinsicBase.html" title="llvm::MemIntrinsicBase\l\&lt; AtomicMemIntrinsic \&gt;" alt="" coords="2673,5310,2835,5351"/>
<area shape="rect" id="node200" href="$classllvm_1_1MemIntrinsicBase.html" title="llvm::MemIntrinsicBase\l\&lt; MemIntrinsic \&gt;" alt="" coords="2675,5375,2833,5417"/>
<area shape="rect" id="node144" href="$classllvm_1_1AnyCoroIdRetconInst.html" title="This represents either the llvm.coro.id.retcon or llvm.coro.id.retcon.once instruction. " alt="" coords="2932,5441,3112,5468"/>
<area shape="rect" id="node147" href="$classllvm_1_1CoroIdInst.html" title="This represents the llvm.coro.id instruction. " alt="" coords="2965,5391,3079,5417"/>
<area shape="rect" id="node145" href="$classllvm_1_1CoroIdRetconInst.html" title="This represents the llvm.coro.id.retcon instruction. " alt="" coords="3215,5449,3372,5476"/>
<area shape="rect" id="node146" href="$classllvm_1_1CoroIdRetconOnceInst.html" title="This represents the llvm.coro.id.retcon.once instruction. " alt="" coords="3199,5500,3387,5527"/>
<area shape="rect" id="node149" href="$classllvm_1_1CoroSuspendInst.html" title="This represents the llvm.coro.suspend instruction. " alt="" coords="2945,5543,3099,5569"/>
<area shape="rect" id="node150" href="$classllvm_1_1CoroSuspendRetconInst.html" title="This represents the llvm.coro.suspend.retcon instruction. " alt="" coords="2923,5492,3121,5519"/>
<area shape="rect" id="node152" href="$classllvm_1_1SaturatingInst.html" title="Represents a saturating add/sub intrinsic. " alt="" coords="2955,5644,3089,5671"/>
<area shape="rect" id="node153" href="$classllvm_1_1WithOverflowInst.html" title="Represents an op.with.overflow intrinsic. " alt="" coords="2945,5593,3099,5620"/>
<area shape="rect" id="node155" href="$classllvm_1_1ConstrainedFPCmpIntrinsic.html" title="Constrained floating point compare intrinsics. " alt="" coords="2915,5695,3129,5721"/>
<area shape="rect" id="node169" href="$classllvm_1_1DbgLabelInst.html" title="This represents the llvm.dbg.label instruction. " alt="" coords="2957,6252,3087,6279"/>
<area shape="rect" id="node170" href="$classllvm_1_1DbgVariableIntrinsic.html" title="This is the common base class for debug info intrinsics for variables. " alt="" coords="2937,6201,3107,6228"/>
<area shape="rect" id="node171" href="$classllvm_1_1DbgAddrIntrinsic.html" title="This represents the llvm.dbg.addr instruction. " alt="" coords="3218,6201,3369,6228"/>
<area shape="rect" id="node172" href="$classllvm_1_1DbgDeclareInst.html" title="This represents the llvm.dbg.declare instruction. " alt="" coords="3221,6252,3366,6279"/>
<area shape="rect" id="node173" href="$classllvm_1_1DbgValueInst.html" title="This represents the llvm.dbg.value instruction. " alt="" coords="3227,6151,3360,6177"/>
<area shape="rect" id="node175" href="$classllvm_1_1GCRelocateInst.html" title="Represents calls to the gc.relocate intrinsic. " alt="" coords="2948,6353,3096,6380"/>
<area shape="rect" id="node176" href="$classllvm_1_1GCResultInst.html" title="Represents calls to the gc.result intrinsic. " alt="" coords="2955,6303,3089,6329"/>
<area shape="rect" id="node178" href="$classllvm_1_1InstrProfIncrementInstStep.html" title="llvm::InstrProfIncrement\lInstStep" alt="" coords="2941,6405,3103,6446"/>
<area shape="rect" id="node185" href="$classllvm_1_1AnyMemIntrinsic.html" title="llvm::AnyMemIntrinsic" alt="" coords="2946,5143,3098,5169"/>
<area shape="rect" id="node186" href="$classllvm_1_1MemSetBase.html" title="llvm::MemSetBase\&lt; AnyMem\lIntrinsic \&gt;" alt="" coords="3195,5070,3392,5111"/>
<area shape="rect" id="node188" href="$classllvm_1_1MemTransferBase.html" title="llvm::MemTransferBase\l\&lt; AnyMemIntrinsic \&gt;" alt="" coords="3213,5135,3374,5177"/>
<area shape="rect" id="node187" href="$classllvm_1_1AnyMemSetInst.html" title="This class represents any memset intrinsic. " alt="" coords="3481,5077,3629,5104"/>
<area shape="rect" id="node189" href="$classllvm_1_1AnyMemTransferInst.html" title="llvm::AnyMemTransferInst" alt="" coords="3467,5143,3643,5169"/>
<area shape="rect" id="node190" href="$classllvm_1_1AnyMemCpyInst.html" title="This class represents any memcpy intrinsic i.e. " alt="" coords="3713,5107,3865,5133"/>
<area shape="rect" id="node191" href="$classllvm_1_1AnyMemMoveInst.html" title="This class represents any memmove intrinsic i.e. " alt="" coords="3709,5157,3869,5184"/>
<area shape="rect" id="node193" href="$classllvm_1_1AtomicMemIntrinsic.html" title="llvm::AtomicMemIntrinsic" alt="" coords="2937,5273,3107,5300"/>
<area shape="rect" id="node194" href="$classllvm_1_1MemSetBase.html" title="llvm::MemSetBase\&lt; Atomic\lMemIntrinsic \&gt;" alt="" coords="3200,5201,3387,5242"/>
<area shape="rect" id="node196" href="$classllvm_1_1MemTransferBase.html" title="llvm::MemTransferBase\l\&lt; AtomicMemIntrinsic \&gt;" alt="" coords="3212,5266,3375,5307"/>
<area shape="rect" id="node195" href="$classllvm_1_1AtomicMemSetInst.html" title="This class represents atomic memset intrinsic. " alt="" coords="3471,5208,3638,5235"/>
<area shape="rect" id="node197" href="$classllvm_1_1AtomicMemTransferInst.html" title="llvm::AtomicMemTransferInst" alt="" coords="3457,5273,3652,5300"/>
<area shape="rect" id="node198" href="$classllvm_1_1AtomicMemCpyInst.html" title="This class represents the atomic memcpy intrinsic i.e. " alt="" coords="3704,5243,3875,5269"/>
<area shape="rect" id="node199" href="$classllvm_1_1AtomicMemMoveInst.html" title="This class represents the atomic memmove intrinsic i.e. " alt="" coords="3700,5293,3879,5320"/>
<area shape="rect" id="node201" href="$classllvm_1_1MemIntrinsic.html" title="This is the common base class for memset/memcpy/memmove. " alt="" coords="2957,5340,3087,5367"/>
<area shape="rect" id="node202" href="$classllvm_1_1MemSetBase.html" title="llvm::MemSetBase\&lt; MemIntrinsic \&gt;" alt="" coords="3177,5332,3409,5359"/>
<area shape="rect" id="node204" href="$classllvm_1_1MemTransferBase.html" title="llvm::MemTransferBase\l\&lt; MemIntrinsic \&gt;" alt="" coords="3213,5383,3374,5425"/>
<area shape="rect" id="node203" href="$classllvm_1_1MemSetInst.html" title="This class wraps the llvm.memset intrinsic. " alt="" coords="3492,5332,3617,5359"/>
<area shape="rect" id="node205" href="$classllvm_1_1MemTransferInst.html" title="This class wraps the llvm.memcpy/memmove intrinsics. " alt="" coords="3478,5391,3631,5417"/>
<area shape="rect" id="node206" href="$classllvm_1_1MemCpyInst.html" title="This class wraps the llvm.memcpy intrinsic. " alt="" coords="3725,5365,3854,5392"/>
<area shape="rect" id="node207" href="$classllvm_1_1MemMoveInst.html" title="This class wraps the llvm.memmove intrinsic. " alt="" coords="3721,5416,3858,5443"/>
<area shape="rect" id="node213" href="$classllvm_1_1FCmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor. " alt="" coords="2141,4732,2253,4759"/>
<area shape="rect" id="node214" href="$classllvm_1_1ICmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor. " alt="" coords="2143,4681,2251,4708"/>
<area shape="rect" id="node218" href="$classllvm_1_1CatchPadInst.html" title="llvm::CatchPadInst" alt="" coords="2129,4884,2264,4911"/>
<area shape="rect" id="node219" href="$classllvm_1_1CleanupPadInst.html" title="llvm::CleanupPadInst" alt="" coords="2123,4833,2270,4860"/>
<area shape="rect" id="node233" href="$classllvm_1_1AllocaInst.html" title="an instruction to allocate memory on the stack " alt="" coords="2141,5517,2253,5544"/>
<area shape="rect" id="node234" href="$classllvm_1_1CastInst.html" title="This is the base class for all instructions that perform data casts. " alt="" coords="2145,5568,2249,5595"/>
<area shape="rect" id="node248" href="$classllvm_1_1ExtractValueInst.html" title="This instruction extracts a struct member or array element value from an aggregate value..." alt="" coords="2121,5619,2272,5645"/>
<area shape="rect" id="node249" href="$classllvm_1_1FreezeInst.html" title="This class represents a freeze function that returns random concrete value if an operand is either a ..." alt="" coords="2139,5315,2255,5341"/>
<area shape="rect" id="node250" href="$classllvm_1_1LoadInst.html" title="An instruction for reading from memory. " alt="" coords="2145,5365,2249,5392"/>
<area shape="rect" id="node251" href="$classllvm_1_1UnaryOperator.html" title="llvm::UnaryOperator" alt="" coords="2127,5416,2266,5443"/>
<area shape="rect" id="node252" href="$classllvm_1_1VAArgInst.html" title="This class represents the va_arg llvm instruction, which returns an argument of the specified type gi..." alt="" coords="2139,5467,2254,5493"/>
<area shape="rect" id="node235" href="$classllvm_1_1AddrSpaceCastInst.html" title="This class represents a conversion between pointers from one address space to another. " alt="" coords="2391,5517,2559,5544"/>
<area shape="rect" id="node236" href="$classllvm_1_1BitCastInst.html" title="This class represents a no&#45;op cast from one type to another. " alt="" coords="2415,5568,2535,5595"/>
<area shape="rect" id="node237" href="$classllvm_1_1FPExtInst.html" title="This class represents an extension of floating point types. " alt="" coords="2418,5619,2531,5645"/>
<area shape="rect" id="node238" href="$classllvm_1_1FPToSIInst.html" title="This class represents a cast from floating point to signed integer. " alt="" coords="2414,5669,2535,5696"/>
<area shape="rect" id="node239" href="$classllvm_1_1FPToUIInst.html" title="This class represents a cast from floating point to unsigned integer. " alt="" coords="2413,5720,2536,5747"/>
<area shape="rect" id="node240" href="$classllvm_1_1FPTruncInst.html" title="This class represents a truncation of floating point types. " alt="" coords="2411,5771,2538,5797"/>
<area shape="rect" id="node241" href="$classllvm_1_1IntToPtrInst.html" title="This class represents a cast from an integer to a pointer. " alt="" coords="2413,5821,2536,5848"/>
<area shape="rect" id="node242" href="$classllvm_1_1PtrToIntInst.html" title="This class represents a cast from a pointer to an integer. " alt="" coords="2413,5213,2536,5240"/>
<area shape="rect" id="node243" href="$classllvm_1_1SExtInst.html" title="This class represents a sign extension of integer types. " alt="" coords="2422,5264,2527,5291"/>
<area shape="rect" id="node244" href="$classllvm_1_1SIToFPInst.html" title="This class represents a cast from signed integer to floating point. " alt="" coords="2414,5315,2535,5341"/>
<area shape="rect" id="node245" href="$classllvm_1_1TruncInst.html" title="This class represents a truncation of integer types. " alt="" coords="2420,5365,2529,5392"/>
<area shape="rect" id="node246" href="$classllvm_1_1UIToFPInst.html" title="This class represents a cast unsigned integer to floating point. " alt="" coords="2413,5416,2536,5443"/>
<area shape="rect" id="node247" href="$classllvm_1_1ZExtInst.html" title="This class represents zero extension of integer types. " alt="" coords="2423,5467,2527,5493"/>
<area shape="rect" id="node255" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; IVStride\lUse \&gt;" alt="" coords="1051,5265,1219,5306"/>
<area shape="rect" id="node256" href="$classllvm_1_1IVStrideUse.html" title="IVStrideUse &#45; Keep track of one use of a strided induction variable. " alt="" coords="1350,5967,1475,5993"/>
<area shape="rect" id="node258" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Machine\lBasicBlock, Options... \&gt;" alt="" coords="1050,4754,1221,4795"/>
<area shape="rect" id="node259" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; MachineBasicBlock,\l MachineFunction \&gt;" alt="" coords="1315,4747,1511,4803"/>
<area shape="rect" id="node260" href="$classllvm_1_1MachineBasicBlock.html" title="llvm::MachineBasicBlock" alt="" coords="1589,4761,1759,4788"/>
<area shape="rect" id="node262" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Machine\lInstr, Options... \&gt;" alt="" coords="1050,4943,1221,4985"/>
<area shape="rect" id="node263" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; MachineInstr,\l MachineBasicBlock, ilist\l_sentinel_tracking\&lt; true \&gt; \&gt;" alt="" coords="1320,4929,1505,4999"/>
<area shape="rect" id="node264" href="$classllvm_1_1MachineInstr.html" title="Representation of each machine instruction. " alt="" coords="1609,4951,1739,4977"/>
<area shape="rect" id="node266" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; MCFragment,\l Options... \&gt;" alt="" coords="1035,5135,1236,5177"/>
<area shape="rect" id="node267" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; MCFragment,\l MCSection \&gt;" alt="" coords="1334,5132,1491,5188"/>
<area shape="rect" id="node268" href="$classllvm_1_1MCFragment.html" title="llvm::MCFragment" alt="" coords="1609,6655,1739,6681"/>
<area shape="rect" id="node269" href="$classllvm_1_1MCAlignFragment.html" title="llvm::MCAlignFragment" alt="" coords="1849,6461,2008,6488"/>
<area shape="rect" id="node270" href="$classllvm_1_1MCBoundaryAlignFragment.html" title="Represents required padding such that a particular other set of fragments does not cross a particular..." alt="" coords="1821,6512,2036,6539"/>
<area shape="rect" id="node271" href="$classllvm_1_1MCCVInlineLineTableFragment.html" title="Fragment representing the binary annotations produced by the .cv_inline_linetable directive..." alt="" coords="1838,6563,2019,6605"/>
<area shape="rect" id="node272" href="$classllvm_1_1MCDummyFragment.html" title="llvm::MCDummyFragment" alt="" coords="1841,6629,2017,6656"/>
<area shape="rect" id="node273" href="$classllvm_1_1MCEncodedFragment.html" title="Interface implemented by fragments that contain encoded instructions and/or data. ..." alt="" coords="1838,6680,2019,6707"/>
<area shape="rect" id="node285" href="$classllvm_1_1MCFillFragment.html" title="llvm::MCFillFragment" alt="" coords="1855,6731,2002,6757"/>
<area shape="rect" id="node286" href="$classllvm_1_1MCLEBFragment.html" title="llvm::MCLEBFragment" alt="" coords="1851,6781,2006,6808"/>
<area shape="rect" id="node287" href="$classllvm_1_1MCOrgFragment.html" title="llvm::MCOrgFragment" alt="" coords="1853,6832,2004,6859"/>
<area shape="rect" id="node288" href="$classllvm_1_1MCSymbolIdFragment.html" title="Represents a symbol table index fragment. " alt="" coords="1836,6883,2021,6909"/>
<area shape="rect" id="node274" href="$classllvm_1_1MCEncodedFragmentWithContents.html" title="Interface implemented by fragments that contain encoded instructions and/or data. ..." alt="" coords="2093,6673,2301,6714"/>
<area shape="rect" id="node283" href="$classllvm_1_1MCEncodedFragmentWithContents.html" title="llvm::MCEncodedFragmentWith\lContents\&lt; 4 \&gt;" alt="" coords="2093,6770,2301,6811"/>
<area shape="rect" id="node275" href="$classllvm_1_1MCEncodedFragmentWithFixups.html" title="Interface implemented by fragments that contain encoded instructions and/or data and also have fixups..." alt="" coords="2356,6673,2593,6714"/>
<area shape="rect" id="node276" href="$classllvm_1_1MCEncodedFragmentWithFixups.html" title="llvm::MCEncodedFragmentWith\lFixups\&lt; 32, 4 \&gt;" alt="" coords="2371,6738,2579,6779"/>
<area shape="rect" id="node279" href="$classllvm_1_1MCEncodedFragmentWithFixups.html" title="llvm::MCEncodedFragmentWith\lFixups\&lt; 8, 1 \&gt;" alt="" coords="2371,6607,2579,6649"/>
<area shape="rect" id="node277" href="$classllvm_1_1MCCVDefRangeFragment.html" title="Fragment representing the .cv_def_range directive. " alt="" coords="2650,6739,2858,6765"/>
<area shape="rect" id="node278" href="$classllvm_1_1MCDataFragment.html" title="Fragment for data and encoded instructions. " alt="" coords="2675,6789,2833,6816"/>
<area shape="rect" id="node280" href="$classllvm_1_1MCDwarfCallFrameFragment.html" title="llvm::MCDwarfCallFrameFragment" alt="" coords="2641,6623,2867,6649"/>
<area shape="rect" id="node281" href="$classllvm_1_1MCDwarfLineAddrFragment.html" title="llvm::MCDwarfLineAddrFragment" alt="" coords="2646,6673,2862,6700"/>
<area shape="rect" id="node282" href="$classllvm_1_1MCRelaxableFragment.html" title="A relaxable fragment holds on to its MCInst, since it may need to be relaxed during the assembler lay..." alt="" coords="2660,6572,2848,6599"/>
<area shape="rect" id="node284" href="$classllvm_1_1MCCompactEncodedInstFragment.html" title="This is a compact (memory&#45;size&#45;wise) fragment for holding an encoded instruction (non&#45;relaxable) that..." alt="" coords="2374,6803,2575,6845"/>
<area shape="rect" id="node290" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Memory\lAccess, ilist_tag\&lt; MSSAHelpers\l::AllAccessTag \&gt; \&gt;" alt="" coords="1028,3781,1243,3837"/>
<area shape="rect" id="node296" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Memory\lAccess, ilist_tag\&lt; MSSAHelpers\l::DefsOnlyTag \&gt; \&gt;" alt="" coords="1028,3701,1243,3757"/>
<area shape="rect" id="node291" href="$classllvm_1_1MemoryAccess.html" title="llvm::MemoryAccess" alt="" coords="1340,3652,1485,3679"/>
<area shape="rect" id="node292" href="$classllvm_1_1MemoryPhi.html" title="Represents phi nodes for memory accesses. " alt="" coords="1614,3601,1734,3628"/>
<area shape="rect" id="node293" href="$classllvm_1_1MemoryUseOrDef.html" title="Class that has the common methods + fields of memory uses/defs. " alt="" coords="1594,3703,1754,3729"/>
<area shape="rect" id="node294" href="$classllvm_1_1MemoryDef.html" title="Represents a read&#45;write access to memory, whether it is a must&#45;alias, or a may&#45;alias. " alt="" coords="1867,3677,1990,3704"/>
<area shape="rect" id="node295" href="$classllvm_1_1MemoryUse.html" title="Represents read&#45;only accesses to memory. " alt="" coords="1866,3728,1991,3755"/>
<area shape="rect" id="node298" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; NamedMDNode \&gt;" alt="" coords="1022,4383,1249,4409"/>
<area shape="rect" id="node299" href="$classllvm_1_1NamedMDNode.html" title="A tuple of MDNodes. " alt="" coords="1339,4383,1487,4409"/>
<area shape="rect" id="node301" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Node \&gt;" alt="" coords="1053,3928,1217,3955"/>
<area shape="rect" id="node303" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; NodeTy,\l Options... \&gt;" alt="" coords="1050,4470,1221,4511"/>
<area shape="rect" id="node304" href="$classllvm_1_1ilist__node__with__parent.html" title="An ilist node that can access its parent list. " alt="" coords="1319,4463,1507,4519"/>
<area shape="rect" id="node306" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; Predicate\lBase \&gt;" alt="" coords="1047,4258,1223,4299"/>
<area shape="rect" id="node307" href="$classllvm_1_1PredicateBase.html" title="llvm::PredicateBase" alt="" coords="1343,3967,1482,3993"/>
<area shape="rect" id="node308" href="$classllvm_1_1PredicateWithCondition.html" title="llvm::PredicateWithCondition" alt="" coords="1579,3967,1769,3993"/>
<area shape="rect" id="node309" href="$classllvm_1_1PredicateAssume.html" title="llvm::PredicateAssume" alt="" coords="1850,3916,2007,3943"/>
<area shape="rect" id="node310" href="$classllvm_1_1PredicateWithEdge.html" title="llvm::PredicateWithEdge" alt="" coords="1845,3967,2012,3993"/>
<area shape="rect" id="node311" href="$classllvm_1_1PredicateBranch.html" title="llvm::PredicateBranch" alt="" coords="2121,3941,2272,3968"/>
<area shape="rect" id="node312" href="$classllvm_1_1PredicateSwitch.html" title="llvm::PredicateSwitch" alt="" coords="2122,3992,2271,4019"/>
<area shape="rect" id="node314" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; SDNode \&gt;" alt="" coords="1044,3315,1227,3341"/>
<area shape="rect" id="node316" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; T,\l Options \&gt;" alt="" coords="1069,4091,1202,4133"/>
<area shape="rect" id="node318" href="$classllvm_1_1ilist__node.html" title="llvm::ilist_node\&lt; VPRecipe\lBase, Options... \&gt;" alt="" coords="1045,4561,1225,4602"/>
<area shape="rect" id="node319" href="$classllvm_1_1ilist__node__with__parent.html" title="llvm::ilist_node_with\l_parent\&lt; VPRecipeBase,\l VPBasicBlock \&gt;" alt="" coords="1327,4549,1498,4605"/>
<area shape="rect" id="node320" href="$classllvm_1_1VPRecipeBase.html" title="VPRecipeBase is a base class modeling a sequence of one or more output IR instructions. " alt="" coords="1603,4296,1745,4323"/>
<area shape="rect" id="node321" href="$classllvm_1_1VPBlendRecipe.html" title="A recipe for vectorizing a phi&#45;node as a sequence of mask&#45;based select instructions. " alt="" coords="1855,4119,2002,4145"/>
<area shape="rect" id="node322" href="$classllvm_1_1VPBranchOnMaskRecipe.html" title="A recipe for generating conditional branches on the bits of a mask. " alt="" coords="1827,4169,2030,4196"/>
<area shape="rect" id="node323" href="$classllvm_1_1VPInstruction.html" title="This is a concrete Recipe that models a single VPlan&#45;level instruction. " alt="" coords="1862,4017,1995,4044"/>
<area shape="rect" id="node324" href="$classllvm_1_1VPInterleaveRecipe.html" title="VPInterleaveRecipe is a recipe for transforming an interleave group of load or stores into one wide l..." alt="" coords="1843,4220,2014,4247"/>
<area shape="rect" id="node325" href="$classllvm_1_1VPPredInstPHIRecipe.html" title="VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when control converges back from ..." alt="" coords="1836,4271,2021,4297"/>
<area shape="rect" id="node326" href="$classllvm_1_1VPReplicateRecipe.html" title="VPReplicateRecipe replicates a given instruction producing multiple scalar copies of the original sca..." alt="" coords="1845,4321,2013,4348"/>
<area shape="rect" id="node327" href="$classllvm_1_1VPWidenGEPRecipe.html" title="A recipe for handling GEP instructions. " alt="" coords="1839,4372,2018,4399"/>
<area shape="rect" id="node328" href="$classllvm_1_1VPWidenIntOrFpInductionRecipe.html" title="A recipe for handling phi nodes of integer and floating&#45;point inductions, producing their vector and ..." alt="" coords="1825,4423,2032,4465"/>
<area shape="rect" id="node329" href="$classllvm_1_1VPWidenMemoryInstructionRecipe.html" title="A Recipe for widening load/store operations. " alt="" coords="1820,4489,2037,4530"/>
<area shape="rect" id="node330" href="$classllvm_1_1VPWidenPHIRecipe.html" title="A recipe for handling all phi nodes except for integer and FP inductions. " alt="" coords="1842,4555,2015,4581"/>
<area shape="rect" id="node331" href="$classllvm_1_1VPWidenRecipe.html" title="VPWidenRecipe is a recipe for producing a copy of vector type for each Instruction in its ingredients..." alt="" coords="1853,4068,2004,4095"/>
<area shape="rect" id="node332" href="$classllvm_1_1RecTy.html" title="llvm::RecTy" alt="" coords="808,2124,901,2151"/>
<area shape="rect" id="node333" href="$classllvm_1_1BitRecTy.html" title="&#39;bit&#39; &#45; Represent a single bit " alt="" coords="1081,2099,1190,2125"/>
<area shape="rect" id="node334" href="$classllvm_1_1BitsRecTy.html" title="&#39;bits&lt;n&gt;&#39; &#45; Represent a fixed number of bits " alt="" coords="1077,2149,1193,2176"/>
<area shape="rect" id="node335" href="$classllvm_1_1CodeRecTy.html" title="&#39;code&#39; &#45; Represent a code fragment " alt="" coords="1073,2200,1197,2227"/>
<area shape="rect" id="node336" href="$classllvm_1_1DagRecTy.html" title="&#39;dag&#39; &#45; Represent a dag fragment " alt="" coords="1077,2251,1194,2277"/>
<area shape="rect" id="node337" href="$classllvm_1_1IntRecTy.html" title="&#39;int&#39; &#45; Represent an integer value of no particular size " alt="" coords="1081,2301,1189,2328"/>
<area shape="rect" id="node338" href="$classllvm_1_1ListRecTy.html" title="&#39;list&lt;Ty&gt;&#39; &#45; Represent a list of values, all of which must be of the specified type. " alt="" coords="1078,1997,1193,2024"/>
<area shape="rect" id="node339" href="$classllvm_1_1StringRecTy.html" title="&#39;string&#39; &#45; Represent an string value " alt="" coords="1072,2048,1199,2075"/>
<area shape="rect" id="node340" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, AttributeListImpl,\l TrailingObjects\&lt; AttributeListImpl,\l TrailingTys... \&gt;, AttributeListImpl,\l TrailingTys... \&gt;" alt="" coords="396,1459,637,1589"/>
<area shape="rect" id="node341" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; AttributeListImpl,\l AttributeSet \&gt;" alt="" coords="784,1503,925,1559"/>
<area shape="rect" id="node342" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, AttributeSetNode, TrailingObjects\l\&lt; AttributeSetNode, TrailingTys... \&gt;, AttributeSetNode,\l TrailingTys... \&gt;" alt="" coords="345,1613,688,1728"/>
<area shape="rect" id="node343" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; AttributeSetNode, Attribute \&gt;" alt="" coords="753,1626,956,1667"/>
<area shape="rect" id="node344" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, BitsInit, TrailingObjects\l\&lt; BitsInit, TrailingTys... \&gt;, BitsInit,\l TrailingTys... \&gt;" alt="" coords="395,971,639,1085"/>
<area shape="rect" id="node345" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; BitsInit, Init *\&gt;" alt="" coords="784,962,925,1003"/>
<area shape="rect" id="node346" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, CondOpInit, TrailingObjects\l\&lt; CondOpInit, TrailingTys... \&gt;, CondOpInit,\l TrailingTys... \&gt;" alt="" coords="379,416,654,531"/>
<area shape="rect" id="node347" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; CondOpInit, Init *\&gt;" alt="" coords="783,502,926,543"/>
<area shape="rect" id="node348" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, DagInit, TrailingObjects\l\&lt; DagInit, TrailingTys... \&gt;, DagInit,\l TrailingTys... \&gt;" alt="" coords="394,555,639,669"/>
<area shape="rect" id="node349" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; DagInit, Init *, StringInit *\&gt;" alt="" coords="761,597,949,638"/>
<area shape="rect" id="node350" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, ListInit, TrailingObjects\l\&lt; ListInit, TrailingTys... \&gt;, ListInit,\l TrailingTys... \&gt;" alt="" coords="395,693,638,808"/>
<area shape="rect" id="node351" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; ListInit, Init *\&gt;" alt="" coords="784,686,925,727"/>
<area shape="rect" id="node352" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, RecordRecTy, TrailingObjects\l\&lt; RecordRecTy, TrailingTys... \&gt;, RecordRecTy,\l TrailingTys... \&gt;" alt="" coords="365,1771,669,1885"/>
<area shape="rect" id="node353" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; RecordRecTy, Record *\&gt;" alt="" coords="763,1807,946,1849"/>
<area shape="rect" id="node354" href="$classllvm_1_1trailing__objects__internal_1_1TrailingObjectsImpl.html" title="llvm::trailing_objects\l_internal::TrailingObjectsImpl\l\&lt; trailing_objects_internal\l::AlignmentCalcHelper\&lt; TrailingTys...\l \&gt;::Alignment, VarDefInit, TrailingObjects\l\&lt; VarDefInit, TrailingTys... \&gt;, VarDefInit,\l TrailingTys... \&gt;" alt="" coords="385,832,648,947"/>
<area shape="rect" id="node355" href="$classllvm_1_1TrailingObjects.html" title="llvm::TrailingObjects\l\&lt; VarDefInit, Init *\&gt;" alt="" coords="784,799,925,841"/>
<area shape="rect" id="node356" href="$classllvm_1_1Value.html" title="LLVM Value Representation. " alt="" coords="5,2796,92,2823"/>
<area shape="rect" id="node357" href="$classllvm_1_1Argument.html" title="This class represents an incoming formal argument to a Function. " alt="" coords="163,2745,274,2772"/>
<area shape="rect" id="node358" href="$classllvm_1_1InlineAsm.html" title="llvm::InlineAsm" alt="" coords="163,2796,275,2823"/>
<area shape="rect" id="node359" href="$classllvm_1_1MetadataAsValue.html" title="Metadata wrapper in the Value hierarchy. " alt="" coords="140,2847,297,2873"/>
<area shape="rect" id="node360" href="$classllvm_1_1User.html" title="llvm::User" alt="" coords="177,3647,260,3673"/>
<area shape="rect" id="node361" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM. " alt="" coords="463,3137,570,3164"/>
<area shape="rect" id="node391" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy. " alt="" coords="453,3647,580,3673"/>
<area shape="rect" id="node392" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="465,5576,569,5603"/>
<area shape="rect" id="node362" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block. " alt="" coords="787,3112,922,3139"/>
<area shape="rect" id="node363" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands). " alt="" coords="771,2935,938,2961"/>
<area shape="rect" id="node367" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands. " alt="" coords="787,3163,922,3189"/>
<area shape="rect" id="node377" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values. " alt="" coords="787,2605,922,2632"/>
<area shape="rect" id="node388" href="$classllvm_1_1GlobalValue.html" title="llvm::GlobalValue" alt="" coords="793,3497,917,3524"/>
<area shape="rect" id="node364" href="$classllvm_1_1ConstantArray.html" title="ConstantArray &#45; Constant Array Declarations. " alt="" coords="1066,2909,1205,2936"/>
<area shape="rect" id="node365" href="$classllvm_1_1ConstantStruct.html" title="llvm::ConstantStruct" alt="" coords="1064,2960,1207,2987"/>
<area shape="rect" id="node366" href="$classllvm_1_1ConstantVector.html" title="Constant Vector Declarations. " alt="" coords="1063,2859,1208,2885"/>
<area shape="rect" id="node368" href="$classllvm_1_1ConstantAggregateZero.html" title="All zero aggregate value. " alt="" coords="1039,3163,1231,3189"/>
<area shape="rect" id="node369" href="$classllvm_1_1ConstantDataSequential.html" title="ConstantDataSequential &#45; A vector or array constant whose element type is a simple 1/2/4/8&#45;byte integ..." alt="" coords="1037,3365,1233,3392"/>
<area shape="rect" id="node372" href="$classllvm_1_1ConstantFP.html" title="ConstantFP &#45; Floating Point Values [float, double]. " alt="" coords="1073,3213,1197,3240"/>
<area shape="rect" id="node373" href="$classllvm_1_1ConstantInt.html" title="This is the shared class of boolean and integer constants. " alt="" coords="1074,3264,1197,3291"/>
<area shape="rect" id="node374" href="$classllvm_1_1ConstantPointerNull.html" title="A constant pointer value that points to null. " alt="" coords="1050,3011,1221,3037"/>
<area shape="rect" id="node375" href="$classllvm_1_1ConstantTokenNone.html" title="A constant token which is empty. " alt="" coords="1048,3061,1223,3088"/>
<area shape="rect" id="node376" href="$classllvm_1_1UndefValue.html" title="&#39;undef&#39; values are things that do not have specified contents. " alt="" coords="1074,3112,1197,3139"/>
<area shape="rect" id="node370" href="$classllvm_1_1ConstantDataArray.html" title="An array constant whose element type is a simple 1/2/4/8&#45;byte integer or float/double, and whose elements are just simple data values (i.e. " alt="" coords="1329,3333,1496,3360"/>
<area shape="rect" id="node371" href="$classllvm_1_1ConstantDataVector.html" title="A vector constant whose element type is a simple 1/2/4/8&#45;byte integer or float/double, and whose elements are just simple data values (i.e. " alt="" coords="1326,3384,1499,3411"/>
<area shape="rect" id="node378" href="$classllvm_1_1BinaryConstantExpr.html" title="BinaryConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to impleme..." alt="" coords="1050,2453,1221,2480"/>
<area shape="rect" id="node379" href="$classllvm_1_1CompareConstantExpr.html" title="llvm::CompareConstantExpr" alt="" coords="1042,2504,1229,2531"/>
<area shape="rect" id="node380" href="$classllvm_1_1ExtractElementConstantExpr.html" title="ExtractElementConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to..." alt="" coords="1023,2555,1247,2581"/>
<area shape="rect" id="node381" href="$classllvm_1_1ExtractValueConstantExpr.html" title="ExtractValueConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to i..." alt="" coords="1031,2605,1240,2632"/>
<area shape="rect" id="node382" href="$classllvm_1_1GetElementPtrConstantExpr.html" title="GetElementPtrConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to ..." alt="" coords="1025,2656,1245,2683"/>
<area shape="rect" id="node383" href="$classllvm_1_1InsertElementConstantExpr.html" title="InsertElementConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to ..." alt="" coords="1028,2707,1243,2733"/>
<area shape="rect" id="node384" href="$classllvm_1_1InsertValueConstantExpr.html" title="InsertValueConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to im..." alt="" coords="1035,2757,1235,2784"/>
<area shape="rect" id="node385" href="$classllvm_1_1SelectConstantExpr.html" title="SelectConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to impleme..." alt="" coords="1050,2808,1221,2835"/>
<area shape="rect" id="node386" href="$classllvm_1_1ShuffleVectorConstantExpr.html" title="ShuffleVectorConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to ..." alt="" coords="1029,2352,1242,2379"/>
<area shape="rect" id="node387" href="$classllvm_1_1UnaryConstantExpr.html" title="UnaryConstantExpr &#45; This class is private to Constants.cpp, and is used behind the scenes to implemen..." alt="" coords="1051,2403,1220,2429"/>
<area shape="rect" id="node389" href="$classllvm_1_1GlobalIndirectSymbol.html" title="llvm::GlobalIndirectSymbol" alt="" coords="1046,3533,1225,3560"/>
<area shape="rect" id="node390" href="$classllvm_1_1GlobalObject.html" title="llvm::GlobalObject" alt="" coords="1071,3483,1200,3509"/>
<area shape="rect" id="node393" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::BitCast \&gt;" alt="" coords="776,5931,933,5987"/>
<area shape="rect" id="node395" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::GetElementPtr \&gt;" alt="" coords="776,6076,933,6132"/>
<area shape="rect" id="node397" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::PtrToInt \&gt;" alt="" coords="776,5364,933,5420"/>
<area shape="rect" id="node399" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; Operator, Instruction\l::ZExt \&gt;" alt="" coords="776,5453,933,5509"/>
<area shape="rect" id="node401" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="779,5551,930,5577"/>
<area shape="rect" id="node402" href="$classllvm_1_1OverflowingBinaryOperator.html" title="Utility class for integer operators which may exhibit overflow &#45; Add, Sub, Mul, and Shl..." alt="" coords="749,5601,960,5628"/>
<area shape="rect" id="node411" href="$classllvm_1_1PossiblyExactOperator.html" title="A udiv or sdiv instruction, which can be marked as &quot;exact&quot;, indicating that no bits are destroyed..." alt="" coords="761,5847,949,5873"/>
<area shape="rect" id="node394" href="$classllvm_1_1BitCastOperator.html" title="llvm::BitCastOperator" alt="" coords="1061,6072,1209,6099"/>
<area shape="rect" id="node396" href="$classllvm_1_1GEPOperator.html" title="llvm::GEPOperator" alt="" coords="1069,6123,1201,6149"/>
<area shape="rect" id="node398" href="$classllvm_1_1PtrToIntOperator.html" title="llvm::PtrToIntOperator" alt="" coords="1060,5331,1211,5357"/>
<area shape="rect" id="node400" href="$classllvm_1_1ZExtOperator.html" title="llvm::ZExtOperator" alt="" coords="1069,5381,1201,5408"/>
<area shape="rect" id="node403" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; OverflowingBinaryOperator,\l Instruction::Add \&gt;" alt="" coords="1038,5512,1233,5568"/>
<area shape="rect" id="node405" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; OverflowingBinaryOperator,\l Instruction::Mul \&gt;" alt="" coords="1038,5592,1233,5648"/>
<area shape="rect" id="node407" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; OverflowingBinaryOperator,\l Instruction::Shl \&gt;" alt="" coords="1038,5432,1233,5488"/>
<area shape="rect" id="node409" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; OverflowingBinaryOperator,\l Instruction::Sub \&gt;" alt="" coords="1038,5672,1233,5728"/>
<area shape="rect" id="node404" href="$classllvm_1_1AddOperator.html" title="llvm::AddOperator" alt="" coords="1349,5527,1476,5553"/>
<area shape="rect" id="node406" href="$classllvm_1_1MulOperator.html" title="llvm::MulOperator" alt="" coords="1350,5607,1475,5633"/>
<area shape="rect" id="node408" href="$classllvm_1_1ShlOperator.html" title="llvm::ShlOperator" alt="" coords="1351,5447,1474,5473"/>
<area shape="rect" id="node410" href="$classllvm_1_1SubOperator.html" title="llvm::SubOperator" alt="" coords="1349,5687,1476,5713"/>
<area shape="rect" id="node412" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; PossiblyExactOperator,\l Instruction::AShr \&gt;" alt="" coords="1049,5752,1221,5808"/>
<area shape="rect" id="node414" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; PossiblyExactOperator,\l Instruction::LShr \&gt;" alt="" coords="1049,5832,1221,5888"/>
<area shape="rect" id="node416" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; PossiblyExactOperator,\l Instruction::SDiv \&gt;" alt="" coords="1049,5912,1221,5968"/>
<area shape="rect" id="node418" href="$classllvm_1_1ConcreteOperator.html" title="llvm::ConcreteOperator\l\&lt; PossiblyExactOperator,\l Instruction::UDiv \&gt;" alt="" coords="1049,5992,1221,6048"/>
<area shape="rect" id="node413" href="$classllvm_1_1AShrOperator.html" title="llvm::AShrOperator" alt="" coords="1346,5767,1479,5793"/>
<area shape="rect" id="node415" href="$classllvm_1_1LShrOperator.html" title="llvm::LShrOperator" alt="" coords="1347,5847,1478,5873"/>
<area shape="rect" id="node417" href="$classllvm_1_1SDivOperator.html" title="llvm::SDivOperator" alt="" coords="1346,5916,1479,5943"/>
<area shape="rect" id="node419" href="$classllvm_1_1UDivOperator.html" title="llvm::UDivOperator" alt="" coords="1345,6017,1480,6044"/>
<area shape="rect" id="node420" href="$classllvm_1_1ValueHandleBase.html" title="This is the common base class of value handles. " alt="" coords="775,6371,934,6397"/>
<area shape="rect" id="node421" href="$classllvm_1_1AssertingVH.html" title="llvm::AssertingVH\&lt;\l Instruction \&gt;" alt="" coords="1067,6393,1203,6434"/>
<area shape="rect" id="node422" href="$classllvm_1_1AssertingVH.html" title="llvm::AssertingVH\&lt;\l llvm::BasicBlock \&gt;" alt="" coords="1067,6458,1203,6499"/>
<area shape="rect" id="node423" href="$classllvm_1_1AssertingVH.html" title="llvm::AssertingVH\&lt;\l llvm::PHINode \&gt;" alt="" coords="1067,6523,1203,6565"/>
<area shape="rect" id="node424" href="$classllvm_1_1AssertingVH.html" title="llvm::AssertingVH\&lt;\l llvm::Value \&gt;" alt="" coords="1067,6589,1203,6630"/>
<area shape="rect" id="node425" href="$classllvm_1_1AssertingVH.html" title="Value handle that asserts if the Value is deleted. " alt="" coords="1067,6174,1203,6215"/>
<area shape="rect" id="node426" href="$classllvm_1_1CallbackVH.html" title="Value handle with callbacks on RAUW and destruction. " alt="" coords="1073,6240,1197,6267"/>
<area shape="rect" id="node432" href="$classllvm_1_1WeakTrackingVH.html" title="Value handle that is nullable, but tries to track the Value. " alt="" coords="1057,6291,1214,6317"/>
<area shape="rect" id="node433" href="$classllvm_1_1WeakVH.html" title="A nullable Value handle that is nullable. " alt="" coords="1082,6341,1189,6368"/>
<area shape="rect" id="node427" href="$structllvm_1_1cflaa_1_1FunctionHandle.html" title="llvm::cflaa::FunctionHandle\l\&lt; AAResult \&gt;" alt="" coords="1322,6115,1503,6157"/>
<area shape="rect" id="node428" href="$classllvm_1_1MMIAddrLabelMapCallbackPtr.html" title="llvm::MMIAddrLabelMapCallbackPtr" alt="" coords="1297,6181,1528,6208"/>
<area shape="rect" id="node429" href="$classllvm_1_1PoisoningVH.html" title="Value handle that poisons itself if the Value is deleted. " alt="" coords="1343,6233,1482,6274"/>
<area shape="rect" id="node430" href="$classllvm_1_1ValueMapCallbackVH.html" title="llvm::ValueMapCallbackVH\l\&lt; KeyT, ValueT, Config \&gt;" alt="" coords="1321,6298,1504,6339"/>
<area shape="rect" id="node431" href="$classllvm_1_1PoisoningVH.html" title="llvm::PoisoningVH\&lt;\l llvm::BasicBlock \&gt;" alt="" coords="1343,6363,1482,6405"/>
<area shape="rect" id="node434" href="$classllvm_1_1VPValue.html" title="llvm::VPValue" alt="" coords="1360,4017,1465,4044"/>
<area shape="rect" id="node435" href="$classllvm_1_1VPUser.html" title="This class augments VPValue with operands which provide the inverse def&#45;use edges from VPValue&#39;s user..." alt="" coords="1624,4017,1724,4044"/>
</map>
