<map id="llvm::filter_iterator_base&lt; WrappedIteratorT, PredicateT, IterTag &gt;" name="llvm::filter_iterator_base&lt; WrappedIteratorT, PredicateT, IterTag &gt;">
<area shape="rect" id="node8" href="$classllvm_1_1filter__iterator__impl.html" title="Specialization of filter_iterator_base for forward iteration only. " alt="" coords="2697,305,2868,361"/>
<area shape="rect" id="node9" href="$classllvm_1_1filter__iterator__base.html" title="llvm::filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, std::bidirectional\l_iterator_tag \&gt;" alt="" coords="2687,385,2879,456"/>
<area shape="rect" id="node2" href="$classllvm_1_1iterator__adaptor__base.html" title="llvm::iterator_adaptor\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l WrappedIteratorT, std::common\l_type\&lt; IterTag, std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::iterator\l_category \&gt;::type \&gt;" alt="" coords="2013,312,2244,441"/>
<area shape="rect" id="node3" href="$classllvm_1_1iterator__facade__base.html" title="llvm::iterator_facade\l_base\&lt; filter_iterator\l_base\&lt; WrappedIteratorT,\l PredicateT, IterTag \&gt;,\l std::common_type\&lt; IterTag,\l std::iterator_traits\&lt; WrappedIterator\lT \&gt;::iterator_category \&gt;::type, typename\l std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::difference_type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::\literator_traits\&lt; WrappedIteratorT \&gt;::value_type,\l typename std::iterator_traits\&lt; WrappedIteratorT\l \&gt;::value_type \&gt;::value, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::pointer, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::value_type * \&gt;::type, typename\l std::conditional\&lt; std::is_same\&lt; typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type \&gt;::value, typename std::iterator\l_traits\&lt; WrappedIteratorT \&gt;::reference, typename std::iterator_traits\l\&lt; WrappedIteratorT \&gt;::value_type &amp; \&gt;::type \&gt;" alt="" coords="1352,106,1768,426"/>
<area shape="rect" id="node5" href="$classllvm_1_1iterator__facade__base.html" title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..." alt="" coords="419,428,643,499"/>
<area shape="rect" id="node7" href="$classllvm_1_1iterator__adaptor__base.html" title="CRTP base class for adapting an iterator to a different type. " alt="" coords="1433,451,1687,521"/>
<area shape="rect" id="node10" href="$classllvm_1_1filter__iterator__impl_3_01WrappedIteratorT_00_01PredicateT_00_01std_1_1bidirectional__iterator__tag_01_4.html" title="Specialization of filter_iterator_base for bidirectional iteration. " alt="" coords="2928,385,3120,456"/>
</map>
